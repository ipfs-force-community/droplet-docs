(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var r,s,o=n[0],l=n[1],c=n[2],u=0,p=[];u<o.length;u++)s=o[u],Object.prototype.hasOwnProperty.call(a,s)&&a[s]&&p.push(a[s][0]),a[s]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(d&&d(n);p.length;)p.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],r=!0,o=1;o<t.length;o++){var l=t[o];0!==a[l]&&(r=!1)}r&&(i.splice(n--,1),e=s(s.s=t[0]))}return e}var r={},a={1:0},i=[];function s(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.e=function(e){var n=[],t=a[e];if(0!==t)if(t)n.push(t[2]);else{var r=new Promise((function(n,r){t=a[e]=[n,r]}));n.push(t[2]=r);var i,o=document.createElement("script");o.charset="utf-8",o.timeout=120,s.nc&&o.setAttribute("nonce",s.nc),o.src=function(e){return s.p+"assets/js/"+({}[e]||e)+"."+{2:"d646fae5",3:"5e32e4fb",4:"ee54e947",5:"b5bd5abf",6:"0c2827f1",7:"fc8c7bc4",8:"980cf843",9:"f4332260",10:"54d869d8",11:"0709d827",12:"1067bf79",13:"79dca4c5",14:"ccd12171",15:"cfd4f0ef",16:"0655211a",17:"b592e31e",18:"dd25ebca",19:"ae250042",20:"a89836e3",21:"e86f80ea",22:"63311247",23:"fc6f13b0",24:"1eaaca53",25:"f7f9f764",26:"96ac4b00",27:"5981a5e6",28:"8a58991c",29:"374a5beb",30:"09166c60",31:"2a232746",32:"903d38d8",33:"529fe52a",34:"3adbf15d",35:"8a66fdf1",36:"fa492360",37:"aa50d21b",38:"0d921ed0",39:"415e46a5"}[e]+".js"}(e);var l=new Error;i=function(n){o.onerror=o.onload=null,clearTimeout(c);var t=a[e];if(0!==t){if(t){var r=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,t[1](l)}a[e]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:o})}),12e4);o.onerror=o.onload=i,document.head.appendChild(o)}return Promise.all(n)},s.m=e,s.c=r,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)s.d(t,r,function(n){return e[n]}.bind(null,r));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="/",s.oe=function(e){throw console.error(e),e};var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=n,o=o.slice();for(var c=0;c<o.length;c++)n(o[c]);var d=l;i.push([197,0]),t()}([function(e,n,t){var r=t(2),a=t(20).f,i=t(13),s=t(9),o=t(78),l=t(128),c=t(74);e.exports=function(e,n){var t,d,u,p,f,m=e.target,h=e.global,g=e.stat;if(t=h?r:g?r[m]||o(m,{}):(r[m]||{}).prototype)for(d in n){if(p=n[d],u=e.noTargetGet?(f=a(t,d))&&f.value:t[d],!c(h?d:m+(g?".":"#")+d,e.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(e.sham||u&&u.sham)&&i(p,"sham",!0),s(t,d,p,e)}}},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){var t=function(e){return e&&e.Math==Math&&e};e.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,n,t){var r=t(2),a=t(76),i=t(7),s=t(53),o=t(80),l=t(122),c=a("wks"),d=r.Symbol,u=l?d:d&&d.withoutSetter||s;e.exports=function(e){return i(c,e)||(o&&i(d,e)?c[e]=d[e]:c[e]=u("Symbol."+e)),c[e]}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,t){var r=t(1);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){var r=t(4);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,n){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},function(e,n,t){var r=t(5),a=t(121),i=t(6),s=t(39),o=Object.defineProperty;n.f=r?o:function(e,n,t){if(i(e),n=s(n,!0),i(t),a)try{return o(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var r=t(2),a=t(13),i=t(7),s=t(78),o=t(83),l=t(31),c=l.get,d=l.enforce,u=String(String).split("String");(e.exports=function(e,n,t,o){var l,c=!!o&&!!o.unsafe,p=!!o&&!!o.enumerable,f=!!o&&!!o.noTargetGet;"function"==typeof t&&("string"!=typeof n||i(t,"name")||a(t,"name",n),(l=d(t)).source||(l.source=u.join("string"==typeof n?n:""))),e!==r?(c?!f&&e[n]&&(p=!0):delete e[n],p?e[n]=t:a(e,n,t)):p?e[n]=t:s(n,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||o(this)}))},function(e,n,t){var r=t(88),a=t(9),i=t(208);r||a(Object.prototype,"toString",i,{unsafe:!0})},function(e,n,t){var r=t(38),a=t(21);e.exports=function(e){return r(a(e))}},function(e,n,t){var r=t(21);e.exports=function(e){return Object(r(e))}},function(e,n,t){var r=t(5),a=t(8),i=t(35);e.exports=r?function(e,n,t){return a.f(e,n,i(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var r=t(46),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){var r=t(152),a="object"==typeof self&&self&&self.Object===Object&&self,i=r||a||Function("return this")();e.exports=i},function(e,n,t){"use strict";function r(e,n,t,r,a,i,s,o){var l,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),s?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=l):a&&(l=o?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(e,n){return l.call(n),d(e,n)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:e,options:c}}t.d(n,"a",(function(){return r}))},function(e,n,t){var r=t(5),a=t(1),i=t(7),s=Object.defineProperty,o={},l=function(e){throw e};e.exports=function(e,n){if(i(o,e))return o[e];n||(n={});var t=[][e],c=!!i(n,"ACCESSORS")&&n.ACCESSORS,d=i(n,0)?n[0]:l,u=i(n,1)?n[1]:void 0;return o[e]=!!t&&!a((function(){if(c&&!r)return!0;var e={length:-1};c?s(e,1,{enumerable:!0,get:l}):e[1]=1,t.call(e,d,u)}))}},function(e,n,t){var r=t(126),a=t(2),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,n){return arguments.length<2?i(r[e])||i(a[e]):r[e]&&r[e][n]||a[e]&&a[e][n]}},function(e,n,t){var r=t(5),a=t(84),i=t(35),s=t(11),o=t(39),l=t(7),c=t(121),d=Object.getOwnPropertyDescriptor;n.f=r?d:function(e,n){if(e=s(e),n=o(n,!0),c)try{return d(e,n)}catch(e){}if(l(e,n))return i(!a.f.call(e,n),e[n])}},function(e,n){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,n,t){"use strict";var r=t(0),a=t(32).filter,i=t(59),s=t(18),o=i("filter"),l=s("filter");r({target:"Array",proto:!0,forced:!o||!l},{filter:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n){e.exports=!1},function(e,n){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,n,t){var r=t(235),a=t(238);e.exports=function(e,n){var t=a(e,n);return r(t)?t:void 0}},function(e,n,t){"use strict";var r=t(114).charAt,a=t(31),i=t(127),s=a.set,o=a.getterFor("String Iterator");i(String,"String",(function(e){s(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,n=o(this),t=n.string,a=n.index;return a>=t.length?{value:void 0,done:!0}:(e=r(t,a),n.index+=e.length,{value:e,done:!1})}))},function(e,n,t){var r,a=t(6),i=t(110),s=t(82),o=t(40),l=t(125),c=t(79),d=t(55),u=d("IE_PROTO"),p=function(){},f=function(e){return"<script>"+e+"<\/script>"},m=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,n;m=r?function(e){e.write(f("")),e.close();var n=e.parentWindow.Object;return e=null,n}(r):((n=c("iframe")).style.display="none",l.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write(f("document.F=Object")),e.close(),e.F);for(var t=s.length;t--;)delete m.prototype[s[t]];return m()};o[u]=!0,e.exports=Object.create||function(e,n){var t;return null!==e?(p.prototype=a(e),t=new p,p.prototype=null,t[u]=e):t=m(),void 0===n?t:i(t,n)}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){"use strict";var r=t(0),a=t(75);r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},function(e,n,t){var r,a,i,s=t(198),o=t(2),l=t(4),c=t(13),d=t(7),u=t(77),p=t(55),f=t(40),m=o.WeakMap;if(s){var h=u.state||(u.state=new m),g=h.get,v=h.has,y=h.set;r=function(e,n){return n.facade=e,y.call(h,e,n),n},a=function(e){return g.call(h,e)||{}},i=function(e){return v.call(h,e)}}else{var b=p("state");f[b]=!0,r=function(e,n){return n.facade=e,c(e,b,n),n},a=function(e){return d(e,b)?e[b]:{}},i=function(e){return d(e,b)}}e.exports={set:r,get:a,has:i,enforce:function(e){return i(e)?a(e):r(e,{})},getterFor:function(e){return function(n){var t;if(!l(n)||(t=a(n)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){var r=t(48),a=t(38),i=t(12),s=t(14),o=t(113),l=[].push,c=function(e){var n=1==e,t=2==e,c=3==e,d=4==e,u=6==e,p=7==e,f=5==e||u;return function(m,h,g,v){for(var y,b,x=i(m),k=a(x),w=r(h,g,3),z=s(k.length),j=0,I=v||o,S=n?I(m,z):t||p?I(m,0):void 0;z>j;j++)if((f||j in k)&&(b=w(y=k[j],j,x),e))if(n)S[j]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return j;case 2:l.call(S,y)}else switch(e){case 4:return!1;case 7:l.call(S,y)}return u?-1:c||d?d:S}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,n,t){var r=t(2),a=t(140),i=t(109),s=t(13),o=t(3),l=o("iterator"),c=o("toStringTag"),d=i.values;for(var u in a){var p=r[u],f=p&&p.prototype;if(f){if(f[l]!==d)try{s(f,l,d)}catch(e){f[l]=d}if(f[c]||s(f,c,u),a[u])for(var m in i)if(f[m]!==i[m])try{s(f,m,i[m])}catch(e){f[m]=i[m]}}}},function(e,n,t){"use strict";var r=t(1);e.exports=function(e,n){var t=[][e];return!!t&&r((function(){t.call(null,n||function(){throw 1},1)}))}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){var r=t(24);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,n,t){var r=t(43),a=t(220),i=t(221),s=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":s&&s in Object(e)?a(e):i(e)}},function(e,n,t){var r=t(1),a=t(24),i="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?i.call(e,""):Object(e)}:Object},function(e,n,t){var r=t(4);e.exports=function(e,n){if(!r(e))return e;var t,a;if(n&&"function"==typeof(t=e.toString)&&!r(a=t.call(e)))return a;if("function"==typeof(t=e.valueOf)&&!r(a=t.call(e)))return a;if(!n&&"function"==typeof(t=e.toString)&&!r(a=t.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,n){e.exports={}},function(e,n){e.exports={}},function(e,n,t){"use strict";var r=t(0),a=t(2),i=t(19),s=t(23),o=t(5),l=t(80),c=t(122),d=t(1),u=t(7),p=t(36),f=t(4),m=t(6),h=t(12),g=t(11),v=t(39),y=t(35),b=t(28),x=t(54),k=t(52),w=t(215),z=t(85),j=t(20),I=t(8),S=t(84),P=t(13),D=t(9),C=t(76),T=t(55),q=t(40),M=t(53),A=t(3),R=t(148),_=t(149),E=t(47),O=t(31),L=t(32).forEach,F=T("hidden"),U=A("toPrimitive"),B=O.set,G=O.getterFor("Symbol"),J=Object.prototype,N=a.Symbol,V=i("JSON","stringify"),W=j.f,H=I.f,$=w.f,K=S.f,X=C("symbols"),Y=C("op-symbols"),Z=C("string-to-symbol-registry"),Q=C("symbol-to-string-registry"),ee=C("wks"),ne=a.QObject,te=!ne||!ne.prototype||!ne.prototype.findChild,re=o&&d((function(){return 7!=b(H({},"a",{get:function(){return H(this,"a",{value:7}).a}})).a}))?function(e,n,t){var r=W(J,n);r&&delete J[n],H(e,n,t),r&&e!==J&&H(J,n,r)}:H,ae=function(e,n){var t=X[e]=b(N.prototype);return B(t,{type:"Symbol",tag:e,description:n}),o||(t.description=n),t},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof N},se=function(e,n,t){e===J&&se(Y,n,t),m(e);var r=v(n,!0);return m(t),u(X,r)?(t.enumerable?(u(e,F)&&e[F][r]&&(e[F][r]=!1),t=b(t,{enumerable:y(0,!1)})):(u(e,F)||H(e,F,y(1,{})),e[F][r]=!0),re(e,r,t)):H(e,r,t)},oe=function(e,n){m(e);var t=g(n),r=x(t).concat(ue(t));return L(r,(function(n){o&&!le.call(t,n)||se(e,n,t[n])})),e},le=function(e){var n=v(e,!0),t=K.call(this,n);return!(this===J&&u(X,n)&&!u(Y,n))&&(!(t||!u(this,n)||!u(X,n)||u(this,F)&&this[F][n])||t)},ce=function(e,n){var t=g(e),r=v(n,!0);if(t!==J||!u(X,r)||u(Y,r)){var a=W(t,r);return!a||!u(X,r)||u(t,F)&&t[F][r]||(a.enumerable=!0),a}},de=function(e){var n=$(g(e)),t=[];return L(n,(function(e){u(X,e)||u(q,e)||t.push(e)})),t},ue=function(e){var n=e===J,t=$(n?Y:g(e)),r=[];return L(t,(function(e){!u(X,e)||n&&!u(J,e)||r.push(X[e])})),r};(l||(D((N=function(){if(this instanceof N)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,n=M(e),t=function(e){this===J&&t.call(Y,e),u(this,F)&&u(this[F],n)&&(this[F][n]=!1),re(this,n,y(1,e))};return o&&te&&re(J,n,{configurable:!0,set:t}),ae(n,e)}).prototype,"toString",(function(){return G(this).tag})),D(N,"withoutSetter",(function(e){return ae(M(e),e)})),S.f=le,I.f=se,j.f=ce,k.f=w.f=de,z.f=ue,R.f=function(e){return ae(A(e),e)},o&&(H(N.prototype,"description",{configurable:!0,get:function(){return G(this).description}}),s||D(J,"propertyIsEnumerable",le,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:N}),L(x(ee),(function(e){_(e)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(e){var n=String(e);if(u(Z,n))return Z[n];var t=N(n);return Z[n]=t,Q[t]=n,t},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(u(Q,e))return Q[e]},useSetter:function(){te=!0},useSimple:function(){te=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!o},{create:function(e,n){return void 0===n?b(e):oe(b(e),n)},defineProperty:se,defineProperties:oe,getOwnPropertyDescriptor:ce}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:de,getOwnPropertySymbols:ue}),r({target:"Object",stat:!0,forced:d((function(){z.f(1)}))},{getOwnPropertySymbols:function(e){return z.f(h(e))}}),V)&&r({target:"JSON",stat:!0,forced:!l||d((function(){var e=N();return"[null]"!=V([e])||"{}"!=V({a:e})||"{}"!=V(Object(e))}))},{stringify:function(e,n,t){for(var r,a=[e],i=1;arguments.length>i;)a.push(arguments[i++]);if(r=n,(f(n)||void 0!==e)&&!ie(e))return p(n)||(n=function(e,n){if("function"==typeof r&&(n=r.call(this,e,n)),!ie(n))return n}),a[1]=n,V.apply(null,a)}});N.prototype[U]||P(N.prototype,U,N.prototype.valueOf),E(N,"Symbol"),q[F]=!0},function(e,n,t){var r=t(16).Symbol;e.exports=r},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));t(106);var r=t(45);t(42),t(62),t(89),t(150),t(10),t(27),t(33);var a=t(68);function i(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,n,t){"use strict";function r(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}t.d(n,"a",(function(){return r}))},function(e,n){var t=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:t)(e)}},function(e,n,t){var r=t(8).f,a=t(7),i=t(3)("toStringTag");e.exports=function(e,n,t){e&&!a(e=t?e:e.prototype,i)&&r(e,i,{configurable:!0,value:n})}},function(e,n,t){var r=t(25);e.exports=function(e,n,t){if(r(e),void 0===n)return e;switch(t){case 0:return function(){return e.call(n)};case 1:return function(t){return e.call(n,t)};case 2:return function(t,r){return e.call(n,t,r)};case 3:return function(t,r,a){return e.call(n,t,r,a)}}return function(){return e.apply(n,arguments)}}},function(e,n,t){"use strict";var r=t(0),a=t(4),i=t(36),s=t(124),o=t(14),l=t(11),c=t(60),d=t(3),u=t(59),p=t(18),f=u("slice"),m=p("slice",{ACCESSORS:!0,0:0,1:2}),h=d("species"),g=[].slice,v=Math.max;r({target:"Array",proto:!0,forced:!f||!m},{slice:function(e,n){var t,r,d,u=l(this),p=o(u.length),f=s(e,p),m=s(void 0===n?p:n,p);if(i(u)&&("function"!=typeof(t=u.constructor)||t!==Array&&!i(t.prototype)?a(t)&&null===(t=t[h])&&(t=void 0):t=void 0,t===Array||void 0===t))return g.call(u,f,m);for(r=new(void 0===t?Array:t)(v(m-f,0)),d=0;f<m;f++,d++)f in u&&c(r,d,u[f]);return r.length=d,r}})},function(e,n,t){"use strict";var r=t(0),a=t(141);r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},function(e,n,t){var r=t(2),a=t(140),i=t(141),s=t(13);for(var o in a){var l=r[o],c=l&&l.prototype;if(c&&c.forEach!==i)try{s(c,"forEach",i)}catch(e){c.forEach=i}}},function(e,n,t){var r=t(123),a=t(82).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,n){var t=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++t+r).toString(36)}},function(e,n,t){var r=t(123),a=t(82);e.exports=Object.keys||function(e){return r(e,a)}},function(e,n,t){var r=t(76),a=t(53),i=r("keys");e.exports=function(e){return i[e]||(i[e]=a(e))}},function(e,n,t){var r=t(19);e.exports=r("navigator","userAgent")||""},function(e,n,t){var r=t(24),a=t(2);e.exports="process"==r(a.process)},function(e,n,t){var r,a,i=t(2),s=t(56),o=i.process,l=o&&o.versions,c=l&&l.v8;c?a=(r=c.split("."))[0]+r[1]:s&&(!(r=s.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=s.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},function(e,n,t){var r=t(1),a=t(3),i=t(58),s=a("species");e.exports=function(e){return i>=51||!r((function(){var n=[];return(n.constructor={})[s]=function(){return{foo:1}},1!==n[e](Boolean).foo}))}},function(e,n,t){"use strict";var r=t(39),a=t(8),i=t(35);e.exports=function(e,n,t){var s=r(n);s in e?a.f(e,s,i(0,t)):e[s]=t}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(10);function r(e,n,t,r,a,i,s){try{var o=e[i](s),l=o.value}catch(e){return void t(e)}o.done?n(l):Promise.resolve(l).then(r,a)}function a(e){return function(){var n=this,t=arguments;return new Promise((function(a,i){var s=e.apply(n,t);function o(e){r(s,a,i,o,l,"next",e)}function l(e){r(s,a,i,o,l,"throw",e)}o(void 0)}))}}},function(e,n,t){"use strict";var r=t(0),a=t(5),i=t(2),s=t(7),o=t(4),l=t(8).f,c=t(128),d=i.Symbol;if(a&&"function"==typeof d&&(!("description"in d.prototype)||void 0!==d().description)){var u={},p=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),n=this instanceof p?new d(e):void 0===e?d():d(e);return""===e&&(u[n]=!0),n};c(p,d);var f=p.prototype=d.prototype;f.constructor=p;var m=f.toString,h="Symbol(test)"==String(d("test")),g=/^Symbol\((.*)\)[^)]+$/;l(f,"description",{configurable:!0,get:function(){var e=o(this)?this.valueOf():this,n=m.call(e);if(s(u,e))return"";var t=h?n.slice(7,-1):n.replace(g,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:p})}},function(e,n,t){var r=t(225),a=t(226),i=t(227),s=t(228),o=t(229);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=s,l.prototype.set=o,e.exports=l},function(e,n,t){var r=t(154);e.exports=function(e,n){for(var t=e.length;t--;)if(r(e[t][0],n))return t;return-1}},function(e,n,t){var r=t(26)(Object,"create");e.exports=r},function(e,n,t){var r=t(247);e.exports=function(e,n){var t=e.__data__;return r(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var r=t(98);e.exports=function(e){if("string"==typeof e||r(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(150),t(49),t(116),t(90),t(10),t(107),t(27);var r=t(45);function a(e,n){if(e){if("string"==typeof e)return Object(r.a)(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(e,n):void 0}}},function(e,n){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,i=/^0o[0-7]+$/i,s=parseInt,o="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=o||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,p=Math.min,f=function(){return c.Date.now()};function m(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function h(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==d.call(e)}(e))return NaN;if(m(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=m(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var o=a.test(e);return o||i.test(e)?s(e.slice(2),o?2:8):r.test(e)?NaN:+e}e.exports=function(e,n,t){var r,a,i,s,o,l,c=0,d=!1,g=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(n){var t=r,i=a;return r=a=void 0,c=n,s=e.apply(i,t)}function b(e){return c=e,o=setTimeout(k,n),d?y(e):s}function x(e){var t=e-l;return void 0===l||t>=n||t<0||g&&e-c>=i}function k(){var e=f();if(x(e))return w(e);o=setTimeout(k,function(e){var t=n-(e-l);return g?p(t,i-(e-c)):t}(e))}function w(e){return o=void 0,v&&r?y(e):(r=a=void 0,s)}function z(){var e=f(),t=x(e);if(r=arguments,a=this,l=e,t){if(void 0===o)return b(l);if(g)return o=setTimeout(k,n),y(l)}return void 0===o&&(o=setTimeout(k,n)),s}return n=h(n)||0,m(t)&&(d=!!t.leading,i=(g="maxWait"in t)?u(h(t.maxWait)||0,n):i,v="trailing"in t?!!t.trailing:v),z.cancel=function(){void 0!==o&&clearTimeout(o),c=0,r=l=a=o=void 0},z.flush=function(){return void 0===o?s:w(f())},z}},function(e,n,t){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,n,t){return e<n?n:e>t?t:e}function i(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=a(e,r.minimum,1),t.status=1===e?null:e;var l=t.render(!n),c=l.querySelector(r.barSelector),d=r.speed,u=r.easing;return l.offsetWidth,s((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),o(c,function(e,n,t){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+n+"ms "+t,a}(e,d,u)),1===e?(o(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){o(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),d)}),d)):setTimeout(n,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*a(Math.random()*n,.1,.95)),n=a(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var a,s=n.querySelector(r.barSelector),l=e?"-100":i(t.status||0),d=document.querySelector(r.parent);return o(s,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=n.querySelector(r.spinnerSelector))&&p(a),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),o=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var r,a=e.length,i=n.charAt(0).toUpperCase()+n.slice(1);a--;)if((r=e[a]+i)in t)return r;return n}(t))}function r(e,n,r){n=t(n),e.style[n]=r}return function(e,n){var t,a,i=arguments;if(2==i.length)for(t in n)void 0!==(a=n[t])&&n.hasOwnProperty(t)&&r(e,t,a);else r(e,i[1],i[2])}}();function l(e,n){return("string"==typeof e?e:u(e)).indexOf(" "+n+" ")>=0}function c(e,n){var t=u(e),r=t+n;l(t,n)||(e.className=r.substring(1))}function d(e,n){var t,r=u(e);l(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function u(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?r.call(n,t,n,e):r)||(e.exports=a)},function(e,n,t){"use strict";var r=t(0),a=t(32).map,i=t(59),s=t(18),o=i("map"),l=s("map");r({target:"Array",proto:!0,forced:!o||!l},{map:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var r=t(179),a=t(6),i=t(14),s=t(46),o=t(21),l=t(184),c=t(214),d=t(180),u=Math.max,p=Math.min;r("replace",2,(function(e,n,t,r){var f=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,m=r.REPLACE_KEEPS_$0,h=f?"$":"$0";return[function(t,r){var a=o(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,a,r):n.call(String(a),t,r)},function(e,r){if(!f&&m||"string"==typeof r&&-1===r.indexOf(h)){var o=t(n,e,this,r);if(o.done)return o.value}var g=a(e),v=String(this),y="function"==typeof r;y||(r=String(r));var b=g.global;if(b){var x=g.unicode;g.lastIndex=0}for(var k=[];;){var w=d(g,v);if(null===w)break;if(k.push(w),!b)break;""===String(w[0])&&(g.lastIndex=l(v,i(g.lastIndex),x))}for(var z,j="",I=0,S=0;S<k.length;S++){w=k[S];for(var P=String(w[0]),D=u(p(s(w.index),v.length),0),C=[],T=1;T<w.length;T++)C.push(void 0===(z=w[T])?z:String(z));var q=w.groups;if(y){var M=[P].concat(C,D,v);void 0!==q&&M.push(q);var A=String(r.apply(void 0,M))}else A=c(P,v,D,C,q,r);D>=I&&(j+=v.slice(I,D)+A,I=D+P.length)}return j+v.slice(I)}]}))},function(e,n,t){var r=t(0),a=t(12),i=t(54);r({target:"Object",stat:!0,forced:t(1)((function(){i(1)}))},{keys:function(e){return i(a(e))}})},function(e,n,t){var r=t(1),a=/#|\.prototype\./,i=function(e,n){var t=o[s(e)];return t==c||t!=l&&("function"==typeof n?r(n):!!n)},s=i.normalize=function(e){return String(e).replace(a,".").toLowerCase()},o=i.data={},l=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},function(e,n,t){"use strict";var r,a,i=t(115),s=t(191),o=RegExp.prototype.exec,l=String.prototype.replace,c=o,d=(r=/a/,a=/b*/g,o.call(r,"a"),o.call(a,"a"),0!==r.lastIndex||0!==a.lastIndex),u=s.UNSUPPORTED_Y||s.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(d||p||u)&&(c=function(e){var n,t,r,a,s=this,c=u&&s.sticky,f=i.call(s),m=s.source,h=0,g=e;return c&&(-1===(f=f.replace("y","")).indexOf("g")&&(f+="g"),g=String(e).slice(s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==e[s.lastIndex-1])&&(m="(?: "+m+")",g=" "+g,h++),t=new RegExp("^(?:"+m+")",f)),p&&(t=new RegExp("^"+m+"$(?!\\s)",f)),d&&(n=s.lastIndex),r=o.call(c?t:s,g),c?r?(r.input=r.input.slice(h),r[0]=r[0].slice(h),r.index=s.lastIndex,s.lastIndex+=r[0].length):s.lastIndex=0:d&&r&&(s.lastIndex=s.global?r.index+r[0].length:n),p&&r&&r.length>1&&l.call(r[0],t,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r}),e.exports=c},function(e,n,t){var r=t(23),a=t(77);(e.exports=function(e,n){return a[e]||(a[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.8.2",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(e,n,t){var r=t(2),a=t(78),i=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=i},function(e,n,t){var r=t(2),a=t(13);e.exports=function(e,n){try{a(r,e,n)}catch(t){r[e]=n}return n}},function(e,n,t){var r=t(2),a=t(4),i=r.document,s=a(i)&&a(i.createElement);e.exports=function(e){return s?i.createElement(e):{}}},function(e,n,t){var r=t(1);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,n,t){var r=t(11),a=t(14),i=t(124),s=function(e){return function(n,t,s){var o,l=r(n),c=a(l.length),d=i(s,c);if(e&&t!=t){for(;c>d;)if((o=l[d++])!=o)return!0}else for(;c>d;d++)if((e||d in l)&&l[d]===t)return e||d||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},function(e,n){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){var r=t(77),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},function(e,n,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);n.f=i?function(e){var n=a(this,e);return!!n&&n.enumerable}:r},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,t){var r=t(7),a=t(12),i=t(55),s=t(131),o=i("IE_PROTO"),l=Object.prototype;e.exports=s?Object.getPrototypeOf:function(e){return e=a(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,n,t){var r=t(6),a=t(199);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),n=t instanceof Array}catch(e){}return function(t,i){return r(t),a(i),n?e.call(t,i):t.__proto__=i,t}}():void 0)},function(e,n,t){var r={};r[t(3)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,n,t){t(149)("iterator")},function(e,n,t){var r=t(5),a=t(8).f,i=Function.prototype,s=i.toString,o=/^\s*function ([^ (]*)/;r&&!("name"in i)&&a(i,"name",{configurable:!0,get:function(){try{return s.call(this).match(o)[1]}catch(e){return""}}})},function(e,n,t){var r=t(219),a=t(29),i=Object.prototype,s=i.hasOwnProperty,o=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return a(e)&&s.call(e,"callee")&&!o.call(e,"callee")};e.exports=l},function(e,n,t){var r=t(26)(t(16),"Map");e.exports=r},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var r=t(239),a=t(246),i=t(248),s=t(249),o=t(250);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=s,l.prototype.set=o,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var r=t(15),a=t(98),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/;e.exports=function(e,n){if(r(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!a(e))||(s.test(e)||!i.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var r=t(37),a=t(29);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){var r=t(0),a=t(2),i=t(56),s=[].slice,o=function(e){return function(n,t){var r=arguments.length>2,a=r?s.call(arguments,2):void 0;return e(r?function(){("function"==typeof n?n:Function(n)).apply(this,a)}:n,t)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(i)},{setTimeout:o(a.setTimeout),setInterval:o(a.setInterval)})},function(e,n,t){var r=t(0),a=t(5);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperty:t(8).f})},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(106);t(42),t(62),t(89),t(10),t(27),t(33);var r=t(68);function a(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,a=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(r=(s=o.next()).done)&&(t.push(s.value),!n||t.length!==n);r=!0);}catch(e){a=!0,i=e}finally{try{r||null==o.return||o.return()}finally{if(a)throw i}}return t}}(e,n)||Object(r.a)(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,n,t){var r=t(3),a=t(28),i=t(8),s=r("unscopables"),o=Array.prototype;null==o[s]&&i.f(o,s,{configurable:!0,value:a(null)}),e.exports=function(e){o[s][e]=!0}},function(e,n,t){var r=t(111),a=t(41),i=t(3)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||a[r(e)]}},function(e,n,t){var r=function(e){"use strict";var n=Object.prototype,t=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",s=r.toStringTag||"@@toStringTag";function o(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{o({},"")}catch(e){o=function(e,n,t){return e[n]=t}}function l(e,n,t,r){var a=n&&n.prototype instanceof u?n:u,i=Object.create(a.prototype),s=new z(r||[]);return i._invoke=function(e,n,t){var r="suspendedStart";return function(a,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw i;return I()}for(t.method=a,t.arg=i;;){var s=t.delegate;if(s){var o=x(s,t);if(o){if(o===d)continue;return o}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(e,n,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(e,t,s),i}function c(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var d={};function u(){}function p(){}function f(){}var m={};m[a]=function(){return this};var h=Object.getPrototypeOf,g=h&&h(h(j([])));g&&g!==n&&t.call(g,a)&&(m=g);var v=f.prototype=u.prototype=Object.create(m);function y(e){["next","throw","return"].forEach((function(n){o(e,n,(function(e){return this._invoke(n,e)}))}))}function b(e,n){var r;this._invoke=function(a,i){function s(){return new n((function(r,s){!function r(a,i,s,o){var l=c(e[a],e,i);if("throw"!==l.type){var d=l.arg,u=d.value;return u&&"object"==typeof u&&t.call(u,"__await")?n.resolve(u.__await).then((function(e){r("next",e,s,o)}),(function(e){r("throw",e,s,o)})):n.resolve(u).then((function(e){d.value=e,s(d)}),(function(e){return r("throw",e,s,o)}))}o(l.arg)}(a,i,r,s)}))}return r=r?r.then(s,s):s()}}function x(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,x(e,n),"throw"===n.method))return d;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var r=c(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,d;var a=r.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,d):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,d)}function k(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function w(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function j(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function n(){for(;++r<e.length;)if(t.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=void 0,n.done=!0,n};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return p.prototype=v.constructor=f,f.constructor=p,p.displayName=o(f,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===p||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,o(e,s,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},y(b.prototype),b.prototype[i]=function(){return this},e.AsyncIterator=b,e.async=function(n,t,r,a,i){void 0===i&&(i=Promise);var s=new b(l(n,t,r,a),i);return e.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},y(v),o(v,s,"Generator"),v[a]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=j,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(t,r){return s.type="throw",s.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],s=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var o=t.call(i,"catchLoc"),l=t.call(i,"finallyLoc");if(o&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(o){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,n){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&t.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=n&&n<=i.finallyLoc&&(i=null);var s=i?i.completion:{};return s.type=e,s.arg=n,i?(this.method="next",this.next=i.finallyLoc,d):this.complete(s)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),d},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),w(t),d}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var a=r.arg;w(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:j(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),d}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,n,t){t(0)({target:"Array",stat:!0},{isArray:t(36)})},function(e,n,t){"use strict";var r=t(9),a=t(6),i=t(1),s=t(115),o=RegExp.prototype,l=o.toString,c=i((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),d="toString"!=l.name;(c||d)&&r(RegExp.prototype,"toString",(function(){var e=a(this),n=String(e.source),t=e.flags;return"/"+n+"/"+String(void 0===t&&e instanceof RegExp&&!("flags"in o)?s.call(e):t)}),{unsafe:!0})},function(e,n,t){"use strict";var r=t(0),a=t(1),i=t(36),s=t(4),o=t(12),l=t(14),c=t(60),d=t(113),u=t(59),p=t(3),f=t(58),m=p("isConcatSpreadable"),h=f>=51||!a((function(){var e=[];return e[m]=!1,e.concat()[0]!==e})),g=u("concat"),v=function(e){if(!s(e))return!1;var n=e[m];return void 0!==n?!!n:i(e)};r({target:"Array",proto:!0,forced:!h||!g},{concat:function(e){var n,t,r,a,i,s=o(this),u=d(s,0),p=0;for(n=-1,r=arguments.length;n<r;n++)if(v(i=-1===n?s:arguments[n])){if(p+(a=l(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(t=0;t<a;t++,p++)t in i&&c(u,p,i[t])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(u,p++,i)}return u.length=p,u}})},function(e,n,t){"use strict";var r=t(11),a=t(103),i=t(41),s=t(31),o=t(127),l=s.set,c=s.getterFor("Array Iterator");e.exports=o(Array,"Array",(function(e,n){l(this,{type:"Array Iterator",target:r(e),index:0,kind:n})}),(function(){var e=c(this),n=e.target,t=e.kind,r=e.index++;return!n||r>=n.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:n[r],done:!1}:{value:[r,n[r]],done:!1}}),"values"),i.Arguments=i.Array,a("keys"),a("values"),a("entries")},function(e,n,t){var r=t(5),a=t(8),i=t(6),s=t(54);e.exports=r?Object.defineProperties:function(e,n){i(e);for(var t,r=s(n),o=r.length,l=0;o>l;)a.f(e,t=r[l++],n[t]);return e}},function(e,n,t){var r=t(88),a=t(24),i=t(3)("toStringTag"),s="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var n,t,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),i))?t:s?a(n):"Object"==(r=a(n))&&"function"==typeof n.callee?"Arguments":r}},function(e,n,t){var r=t(6),a=t(25),i=t(3)("species");e.exports=function(e,n){var t,s=r(e).constructor;return void 0===s||null==(t=r(s)[i])?n:a(t)}},function(e,n,t){var r=t(4),a=t(36),i=t(3)("species");e.exports=function(e,n){var t;return a(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!a(t.prototype)?r(t)&&null===(t=t[i])&&(t=void 0):t=void 0),new(void 0===t?Array:t)(0===n?0:n)}},function(e,n,t){var r=t(46),a=t(21),i=function(e){return function(n,t){var i,s,o=String(a(n)),l=r(t),c=o.length;return l<0||l>=c?e?"":void 0:(i=o.charCodeAt(l))<55296||i>56319||l+1===c||(s=o.charCodeAt(l+1))<56320||s>57343?e?o.charAt(l):i:e?o.slice(l,l+2):s-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,n,t){"use strict";var r=t(6);e.exports=function(){var e=r(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.dotAll&&(n+="s"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},function(e,n,t){var r=t(9),a=Date.prototype,i=a.toString,s=a.getTime;new Date(NaN)+""!="Invalid Date"&&r(a,"toString",(function(){var e=s.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){var r=t(21),a="["+t(119)+"]",i=RegExp("^"+a+a+"*"),s=RegExp(a+a+"*$"),o=function(e){return function(n){var t=String(r(n));return 1&e&&(t=t.replace(i,"")),2&e&&(t=t.replace(s,"")),t}};e.exports={start:o(1),end:o(2),trim:o(3)}},function(e,n){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));t(42),t(22),t(50),t(312),t(101),t(313),t(143),t(73),t(51);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}},function(e,n,t){var r=t(5),a=t(1),i=t(79);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){var r=t(80);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){var r=t(7),a=t(11),i=t(81).indexOf,s=t(40);e.exports=function(e,n){var t,o=a(e),l=0,c=[];for(t in o)!r(s,t)&&r(o,t)&&c.push(t);for(;n.length>l;)r(o,t=n[l++])&&(~i(c,t)||c.push(t));return c}},function(e,n,t){var r=t(46),a=Math.max,i=Math.min;e.exports=function(e,n){var t=r(e);return t<0?a(t+n,0):i(t,n)}},function(e,n,t){var r=t(19);e.exports=r("document","documentElement")},function(e,n,t){var r=t(2);e.exports=r},function(e,n,t){"use strict";var r=t(0),a=t(186),i=t(86),s=t(87),o=t(47),l=t(13),c=t(9),d=t(3),u=t(23),p=t(41),f=t(130),m=f.IteratorPrototype,h=f.BUGGY_SAFARI_ITERATORS,g=d("iterator"),v=function(){return this};e.exports=function(e,n,t,d,f,y,b){a(t,n,d);var x,k,w,z=function(e){if(e===f&&D)return D;if(!h&&e in S)return S[e];switch(e){case"keys":case"values":case"entries":return function(){return new t(this,e)}}return function(){return new t(this)}},j=n+" Iterator",I=!1,S=e.prototype,P=S[g]||S["@@iterator"]||f&&S[f],D=!h&&P||z(f),C="Array"==n&&S.entries||P;if(C&&(x=i(C.call(new e)),m!==Object.prototype&&x.next&&(u||i(x)===m||(s?s(x,m):"function"!=typeof x[g]&&l(x,g,v)),o(x,j,!0,!0),u&&(p[j]=v))),"values"==f&&P&&"values"!==P.name&&(I=!0,D=function(){return P.call(this)}),u&&!b||S[g]===D||l(S,g,D),p[n]=D,f)if(k={values:z("values"),keys:y?D:z("keys"),entries:z("entries")},b)for(w in k)(h||I||!(w in S))&&c(S,w,k[w]);else r({target:n,proto:!0,forced:h||I},k);return k}},function(e,n,t){var r=t(7),a=t(129),i=t(20),s=t(8);e.exports=function(e,n){for(var t=a(n),o=s.f,l=i.f,c=0;c<t.length;c++){var d=t[c];r(e,d)||o(e,d,l(n,d))}}},function(e,n,t){var r=t(19),a=t(52),i=t(85),s=t(6);e.exports=r("Reflect","ownKeys")||function(e){var n=a.f(s(e)),t=i.f;return t?n.concat(t(e)):n}},function(e,n,t){"use strict";var r,a,i,s=t(86),o=t(13),l=t(7),c=t(3),d=t(23),u=c("iterator"),p=!1;[].keys&&("next"in(i=[].keys())?(a=s(s(i)))!==Object.prototype&&(r=a):p=!0),null==r&&(r={}),d||l(r,u)||o(r,u,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(e,n,t){var r=t(1);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,n,t){var r=t(2);e.exports=r.Promise},function(e,n,t){var r=t(3),a=t(41),i=r("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||s[i]===e)}},function(e,n,t){var r=t(6);e.exports=function(e){var n=e.return;if(void 0!==n)return r(n.call(e)).value}},function(e,n,t){var r=t(3)("iterator"),a=!1;try{var i=0,s={next:function(){return{done:!!i++}},return:function(){a=!0}};s[r]=function(){return this},Array.from(s,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!a)return!1;var t=!1;try{var i={};i[r]=function(){return{next:function(){return{done:t=!0}}}},e(i)}catch(e){}return t}},function(e,n,t){var r,a,i,s=t(2),o=t(1),l=t(48),c=t(125),d=t(79),u=t(137),p=t(57),f=s.location,m=s.setImmediate,h=s.clearImmediate,g=s.process,v=s.MessageChannel,y=s.Dispatch,b=0,x={},k=function(e){if(x.hasOwnProperty(e)){var n=x[e];delete x[e],n()}},w=function(e){return function(){k(e)}},z=function(e){k(e.data)},j=function(e){s.postMessage(e+"",f.protocol+"//"+f.host)};m&&h||(m=function(e){for(var n=[],t=1;arguments.length>t;)n.push(arguments[t++]);return x[++b]=function(){("function"==typeof e?e:Function(e)).apply(void 0,n)},r(b),b},h=function(e){delete x[e]},p?r=function(e){g.nextTick(w(e))}:y&&y.now?r=function(e){y.now(w(e))}:v&&!u?(i=(a=new v).port2,a.port1.onmessage=z,r=l(i.postMessage,i,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts&&f&&"file:"!==f.protocol&&!o(j)?(r=j,s.addEventListener("message",z,!1)):r="onreadystatechange"in d("script")?function(e){c.appendChild(d("script")).onreadystatechange=function(){c.removeChild(this),k(e)}}:function(e){setTimeout(w(e),0)}),e.exports={set:m,clear:h}},function(e,n,t){var r=t(56);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,n,t){var r=t(6),a=t(4),i=t(139);e.exports=function(e,n){if(r(e),a(n)&&n.constructor===e)return n;var t=i.f(e);return(0,t.resolve)(n),t.promise}},function(e,n,t){"use strict";var r=t(25),a=function(e){var n,t;this.promise=new e((function(e,r){if(void 0!==n||void 0!==t)throw TypeError("Bad Promise constructor");n=e,t=r})),this.resolve=r(n),this.reject=r(t)};e.exports.f=function(e){return new a(e)}},function(e,n){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,n,t){"use strict";var r=t(32).forEach,a=t(34),i=t(18),s=a("forEach"),o=i("forEach");e.exports=s&&o?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,n,t){var r=t(1);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,n,t){var r=t(0),a=t(5),i=t(129),s=t(11),o=t(20),l=t(60);r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(e){for(var n,t,r=s(e),a=o.f,c=i(r),d={},u=0;c.length>u;)void 0!==(t=a(r,n=c[u++]))&&l(d,n,t);return d}})},function(e,n,t){var r=t(0),a=t(1),i=t(12),s=t(86),o=t(131);r({target:"Object",stat:!0,forced:a((function(){s(1)})),sham:!o},{getPrototypeOf:function(e){return s(i(e))}})},function(e,n,t){var r=t(183);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,n,t){var r=t(3)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[r]=!1,"/./"[e](n)}catch(e){}}return!1}},function(e,n,t){t(0)({target:"Object",stat:!0,sham:!t(5)},{create:t(28)})},function(e,n,t){var r=t(3);n.f=r},function(e,n,t){var r=t(126),a=t(7),i=t(148),s=t(8).f;e.exports=function(e){var n=r.Symbol||(r.Symbol={});a(n,e)||s(n,e,{value:i.f(e)})}},function(e,n,t){var r=t(0),a=t(193);r({target:"Array",stat:!0,forced:!t(135)((function(e){Array.from(e)}))},{from:a})},function(e,n){e.exports=function(e,n){for(var t=-1,r=n.length,a=e.length;++t<r;)e[a+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var r=t(63),a=t(230),i=t(231),s=t(232),o=t(233),l=t(234);function c(e){var n=this.__data__=new r(e);this.size=n.size}c.prototype.clear=a,c.prototype.delete=i,c.prototype.get=s,c.prototype.has=o,c.prototype.set=l,e.exports=c},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var r=t(37),a=t(93);e.exports=function(e){if(!a(e))return!1;var n=r(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var r=t(251),a=t(29);e.exports=function e(n,t,i,s,o){return n===t||(null==n||null==t||!a(n)&&!a(t)?n!=n&&t!=t:r(n,t,i,s,e,o))}},function(e,n,t){var r=t(159),a=t(254),i=t(160);e.exports=function(e,n,t,s,o,l){var c=1&t,d=e.length,u=n.length;if(d!=u&&!(c&&u>d))return!1;var p=l.get(e),f=l.get(n);if(p&&f)return p==n&&f==e;var m=-1,h=!0,g=2&t?new r:void 0;for(l.set(e,n),l.set(n,e);++m<d;){var v=e[m],y=n[m];if(s)var b=c?s(y,v,m,n,e,l):s(v,y,m,e,n,l);if(void 0!==b){if(b)continue;h=!1;break}if(g){if(!a(n,(function(e,n){if(!i(g,n)&&(v===e||o(v,e,t,s,l)))return g.push(n)}))){h=!1;break}}else if(v!==y&&!o(v,y,t,s,l)){h=!1;break}}return l.delete(e),l.delete(n),h}},function(e,n,t){var r=t(94),a=t(252),i=t(253);function s(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new r;++n<t;)this.add(e[n])}s.prototype.add=s.prototype.push=a,s.prototype.has=i,e.exports=s},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var r=t(264),a=t(270),i=t(165);e.exports=function(e){return i(e)?r(e):a(e)}},function(e,n,t){(function(e){var r=t(16),a=t(266),i=n&&!n.nodeType&&n,s=i&&"object"==typeof e&&e&&!e.nodeType&&e,o=s&&s.exports===i?r.Buffer:void 0,l=(o?o.isBuffer:void 0)||a;e.exports=l}).call(this,t(117)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var r=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var r=t(267),a=t(268),i=t(269),s=i&&i.isTypedArray,o=s?a(s):r;e.exports=o},function(e,n,t){var r=t(155),a=t(96);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,n,t){var r=t(26)(t(16),"Set");e.exports=r},function(e,n,t){var r=t(93);e.exports=function(e){return e==e&&!r(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var r=t(170),a=t(67);e.exports=function(e,n){for(var t=0,i=(n=r(n,e)).length;null!=e&&t<i;)e=e[a(n[t++])];return t&&t==i?e:void 0}},function(e,n,t){var r=t(15),a=t(97),i=t(281),s=t(284);e.exports=function(e,n){return r(e)?e:a(e,n)?[e]:i(s(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){t(0)({target:"Object",stat:!0},{setPrototypeOf:t(87)})},function(e,n,t){var r=t(0),a=t(19),i=t(25),s=t(6),o=t(4),l=t(28),c=t(321),d=t(1),u=a("Reflect","construct"),p=d((function(){function e(){}return!(u((function(){}),[],e)instanceof e)})),f=!d((function(){u((function(){}))})),m=p||f;r({target:"Reflect",stat:!0,forced:m,sham:m},{construct:function(e,n){i(e),s(n);var t=arguments.length<3?e:i(arguments[2]);if(f&&!p)return u(e,n,t);if(e==t){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var r=[null];return r.push.apply(r,n),new(c.apply(e,r))}var a=t.prototype,d=l(o(a)?a:Object.prototype),m=Function.apply.call(e,d,n);return o(m)?m:d}})},function(e,n,t){},function(e,n,t){},function(e,n,t){var r=t(217),a=t(222),i=t(293),s=t(301),o=t(310),l=t(194),c=i((function(e){var n=l(e);return o(n)&&(n=void 0),s(r(e,1,o,!0),a(n,2))}));e.exports=c},function(e,n,t){"use strict";var r=t(0),a=t(32).some,i=t(34),s=t(18),o=i("some"),l=s("some");r({target:"Array",proto:!0,forced:!o||!l},{some:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";t(30);var r=t(9),a=t(1),i=t(3),s=t(75),o=t(13),l=i("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),d="$0"==="a".replace(/./,"$0"),u=i("replace"),p=!!/./[u]&&""===/./[u]("a","$0"),f=!a((function(){var e=/(?:)/,n=e.exec;e.exec=function(){return n.apply(this,arguments)};var t="ab".split(e);return 2!==t.length||"a"!==t[0]||"b"!==t[1]}));e.exports=function(e,n,t,u){var m=i(e),h=!a((function(){var n={};return n[m]=function(){return 7},7!=""[e](n)})),g=h&&!a((function(){var n=!1,t=/a/;return"split"===e&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[m]=/./[m]),t.exec=function(){return n=!0,null},t[m](""),!n}));if(!h||!g||"replace"===e&&(!c||!d||p)||"split"===e&&!f){var v=/./[m],y=t(m,""[e],(function(e,n,t,r,a){return n.exec===s?h&&!a?{done:!0,value:v.call(n,t,r)}:{done:!0,value:e.call(t,n,r)}:{done:!1}}),{REPLACE_KEEPS_$0:d,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),b=y[0],x=y[1];r(String.prototype,e,b),r(RegExp.prototype,m,2==n?function(e,n){return x.call(e,this,n)}:function(e){return x.call(e,this)})}u&&o(RegExp.prototype[m],"sham",!0)}},function(e,n,t){var r=t(24),a=t(75);e.exports=function(e,n){var t=e.exec;if("function"==typeof t){var i=t.call(e,n);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(e,n)}},function(e,n,t){"use strict";var r=t(0),a=t(81).indexOf,i=t(34),s=t(18),o=[].indexOf,l=!!o&&1/[1].indexOf(1,-0)<0,c=i("indexOf"),d=s("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!d},{indexOf:function(e){return l?o.apply(this,arguments)||0:a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,n){e.exports=function(e,n,t){if(!(e instanceof n))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return e}},function(e,n,t){var r=t(4),a=t(24),i=t(3)("match");e.exports=function(e){var n;return r(e)&&(void 0!==(n=e[i])?!!n:"RegExp"==a(e))}},function(e,n,t){"use strict";var r=t(114).charAt;e.exports=function(e,n,t){return n+(t?r(e,n).length:1)}},function(e,n,t){"use strict";var r=t(0),a=t(38),i=t(11),s=t(34),o=[].join,l=a!=Object,c=s("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(e){return o.call(i(this),void 0===e?",":e)}})},function(e,n,t){"use strict";var r=t(130).IteratorPrototype,a=t(28),i=t(35),s=t(47),o=t(41),l=function(){return this};e.exports=function(e,n,t){var c=n+" Iterator";return e.prototype=a(r,{next:i(1,t)}),s(e,c,!1,!0),o[c]=l,e}},function(e,n,t){var r=t(9);e.exports=function(e,n,t){for(var a in n)r(e,a,n[a],t);return e}},function(e,n,t){"use strict";var r=t(19),a=t(8),i=t(3),s=t(5),o=i("species");e.exports=function(e){var n=r(e),t=a.f;s&&n&&!n[o]&&t(n,o,{configurable:!0,get:function(){return this}})}},function(e,n,t){"use strict";var r=t(5),a=t(1),i=t(54),s=t(85),o=t(84),l=t(12),c=t(38),d=Object.assign,u=Object.defineProperty;e.exports=!d||a((function(){if(r&&1!==d({b:1},d(u({},"a",{enumerable:!0,get:function(){u(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},n={},t=Symbol();return e[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),7!=d({},e)[t]||"abcdefghijklmnopqrst"!=i(d({},n)).join("")}))?function(e,n){for(var t=l(e),a=arguments.length,d=1,u=s.f,p=o.f;a>d;)for(var f,m=c(arguments[d++]),h=u?i(m).concat(u(m)):i(m),g=h.length,v=0;g>v;)f=h[v++],r&&!p.call(m,f)||(t[f]=m[f]);return t}:d},function(e,n,t){"use strict";var r=t(0),a=t(81).includes,i=t(103);r({target:"Array",proto:!0,forced:!t(18)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(e,n,t){"use strict";var r=t(1);function a(e,n){return RegExp(e,n)}n.UNSUPPORTED_Y=r((function(){var e=a("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),n.BROKEN_CARET=r((function(){var e=a("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,n,t){"use strict";var r=t(0),a=t(145),i=t(21);r({target:"String",proto:!0,forced:!t(146)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(a(e),arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var r=t(48),a=t(12),i=t(216),s=t(133),o=t(14),l=t(60),c=t(104);e.exports=function(e){var n,t,d,u,p,f,m=a(e),h="function"==typeof this?this:Array,g=arguments.length,v=g>1?arguments[1]:void 0,y=void 0!==v,b=c(m),x=0;if(y&&(v=r(v,g>2?arguments[2]:void 0,2)),null==b||h==Array&&s(b))for(t=new h(n=o(m.length));n>x;x++)f=y?v(m[x],x):m[x],l(t,x,f);else for(p=(u=b.call(m)).next,t=new h;!(d=p.call(u)).done;x++)f=y?i(u,v,[d.value,x],!0):d.value,l(t,x,f);return t.length=x,t}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){var r=t(0),a=t(314);r({global:!0,forced:parseInt!=a},{parseInt:a})},function(e,n,t){var r=t(4),a=t(87);e.exports=function(e,n,t){var i,s;return a&&"function"==typeof(i=n.constructor)&&i!==t&&r(s=i.prototype)&&s!==t.prototype&&a(e,s),e}},function(e,n,t){e.exports=t(324)},function(e,n,t){var r=t(2),a=t(83),i=r.WeakMap;e.exports="function"==typeof i&&/native code/.test(a(i))},function(e,n,t){var r=t(4);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,n,t){"use strict";var r,a,i,s,o=t(0),l=t(23),c=t(2),d=t(19),u=t(132),p=t(9),f=t(187),m=t(47),h=t(188),g=t(4),v=t(25),y=t(182),b=t(83),x=t(201),k=t(135),w=t(112),z=t(136).set,j=t(202),I=t(138),S=t(204),P=t(139),D=t(205),C=t(31),T=t(74),q=t(3),M=t(57),A=t(58),R=q("species"),_="Promise",E=C.get,O=C.set,L=C.getterFor(_),F=u,U=c.TypeError,B=c.document,G=c.process,J=d("fetch"),N=P.f,V=N,W=!!(B&&B.createEvent&&c.dispatchEvent),H="function"==typeof PromiseRejectionEvent,$=T(_,(function(){if(!(b(F)!==String(F))){if(66===A)return!0;if(!M&&!H)return!0}if(l&&!F.prototype.finally)return!0;if(A>=51&&/native code/.test(F))return!1;var e=F.resolve(1),n=function(e){e((function(){}),(function(){}))};return(e.constructor={})[R]=n,!(e.then((function(){}))instanceof n)})),K=$||!k((function(e){F.all(e).catch((function(){}))})),X=function(e){var n;return!(!g(e)||"function"!=typeof(n=e.then))&&n},Y=function(e,n){if(!e.notified){e.notified=!0;var t=e.reactions;j((function(){for(var r=e.value,a=1==e.state,i=0;t.length>i;){var s,o,l,c=t[i++],d=a?c.ok:c.fail,u=c.resolve,p=c.reject,f=c.domain;try{d?(a||(2===e.rejection&&ne(e),e.rejection=1),!0===d?s=r:(f&&f.enter(),s=d(r),f&&(f.exit(),l=!0)),s===c.promise?p(U("Promise-chain cycle")):(o=X(s))?o.call(s,u,p):u(s)):p(r)}catch(e){f&&!l&&f.exit(),p(e)}}e.reactions=[],e.notified=!1,n&&!e.rejection&&Q(e)}))}},Z=function(e,n,t){var r,a;W?((r=B.createEvent("Event")).promise=n,r.reason=t,r.initEvent(e,!1,!0),c.dispatchEvent(r)):r={promise:n,reason:t},!H&&(a=c["on"+e])?a(r):"unhandledrejection"===e&&S("Unhandled promise rejection",t)},Q=function(e){z.call(c,(function(){var n,t=e.facade,r=e.value;if(ee(e)&&(n=D((function(){M?G.emit("unhandledRejection",r,t):Z("unhandledrejection",t,r)})),e.rejection=M||ee(e)?2:1,n.error))throw n.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},ne=function(e){z.call(c,(function(){var n=e.facade;M?G.emit("rejectionHandled",n):Z("rejectionhandled",n,e.value)}))},te=function(e,n,t){return function(r){e(n,r,t)}},re=function(e,n,t){e.done||(e.done=!0,t&&(e=t),e.value=n,e.state=2,Y(e,!0))},ae=function(e,n,t){if(!e.done){e.done=!0,t&&(e=t);try{if(e.facade===n)throw U("Promise can't be resolved itself");var r=X(n);r?j((function(){var t={done:!1};try{r.call(n,te(ae,t,e),te(re,t,e))}catch(n){re(t,n,e)}})):(e.value=n,e.state=1,Y(e,!1))}catch(n){re({done:!1},n,e)}}};$&&(F=function(e){y(this,F,_),v(e),r.call(this);var n=E(this);try{e(te(ae,n),te(re,n))}catch(e){re(n,e)}},(r=function(e){O(this,{type:_,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=f(F.prototype,{then:function(e,n){var t=L(this),r=N(w(this,F));return r.ok="function"!=typeof e||e,r.fail="function"==typeof n&&n,r.domain=M?G.domain:void 0,t.parent=!0,t.reactions.push(r),0!=t.state&&Y(t,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r,n=E(e);this.promise=e,this.resolve=te(ae,n),this.reject=te(re,n)},P.f=N=function(e){return e===F||e===i?new a(e):V(e)},l||"function"!=typeof u||(s=u.prototype.then,p(u.prototype,"then",(function(e,n){var t=this;return new F((function(e,n){s.call(t,e,n)})).then(e,n)}),{unsafe:!0}),"function"==typeof J&&o({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return I(F,J.apply(c,arguments))}}))),o({global:!0,wrap:!0,forced:$},{Promise:F}),m(F,_,!1,!0),h(_),i=d(_),o({target:_,stat:!0,forced:$},{reject:function(e){var n=N(this);return n.reject.call(void 0,e),n.promise}}),o({target:_,stat:!0,forced:l||$},{resolve:function(e){return I(l&&this===i?F:this,e)}}),o({target:_,stat:!0,forced:K},{all:function(e){var n=this,t=N(n),r=t.resolve,a=t.reject,i=D((function(){var t=v(n.resolve),i=[],s=0,o=1;x(e,(function(e){var l=s++,c=!1;i.push(void 0),o++,t.call(n,e).then((function(e){c||(c=!0,i[l]=e,--o||r(i))}),a)})),--o||r(i)}));return i.error&&a(i.value),t.promise},race:function(e){var n=this,t=N(n),r=t.reject,a=D((function(){var a=v(n.resolve);x(e,(function(e){a.call(n,e).then(t.resolve,r)}))}));return a.error&&r(a.value),t.promise}})},function(e,n,t){var r=t(6),a=t(133),i=t(14),s=t(48),o=t(104),l=t(134),c=function(e,n){this.stopped=e,this.result=n};e.exports=function(e,n,t){var d,u,p,f,m,h,g,v=t&&t.that,y=!(!t||!t.AS_ENTRIES),b=!(!t||!t.IS_ITERATOR),x=!(!t||!t.INTERRUPTED),k=s(n,v,1+y+x),w=function(e){return d&&l(d),new c(!0,e)},z=function(e){return y?(r(e),x?k(e[0],e[1],w):k(e[0],e[1])):x?k(e,w):k(e)};if(b)d=e;else{if("function"!=typeof(u=o(e)))throw TypeError("Target is not iterable");if(a(u)){for(p=0,f=i(e.length);f>p;p++)if((m=z(e[p]))&&m instanceof c)return m;return new c(!1)}d=u.call(e)}for(h=d.next;!(g=h.call(d)).done;){try{m=z(g.value)}catch(e){throw l(d),e}if("object"==typeof m&&m&&m instanceof c)return m}return new c(!1)}},function(e,n,t){var r,a,i,s,o,l,c,d,u=t(2),p=t(20).f,f=t(136).set,m=t(137),h=t(203),g=t(57),v=u.MutationObserver||u.WebKitMutationObserver,y=u.document,b=u.process,x=u.Promise,k=p(u,"queueMicrotask"),w=k&&k.value;w||(r=function(){var e,n;for(g&&(e=b.domain)&&e.exit();a;){n=a.fn,a=a.next;try{n()}catch(e){throw a?s():i=void 0,e}}i=void 0,e&&e.enter()},m||g||h||!v||!y?x&&x.resolve?(c=x.resolve(void 0),d=c.then,s=function(){d.call(c,r)}):s=g?function(){b.nextTick(r)}:function(){f.call(u,r)}:(o=!0,l=y.createTextNode(""),new v(r).observe(l,{characterData:!0}),s=function(){l.data=o=!o})),e.exports=w||function(e){var n={fn:e,next:void 0};i&&(i.next=n),a||(a=n,s()),i=n}},function(e,n,t){var r=t(56);e.exports=/web0s(?!.*chrome)/i.test(r)},function(e,n,t){var r=t(2);e.exports=function(e,n){var t=r.console;t&&t.error&&(1===arguments.length?t.error(e):t.error(e,n))}},function(e,n){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,n,t){var r=t(0),a=t(189);r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},function(e,n,t){"use strict";var r=t(0),a=t(23),i=t(132),s=t(1),o=t(19),l=t(112),c=t(138),d=t(9);r({target:"Promise",proto:!0,real:!0,forced:!!i&&s((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var n=l(this,o("Promise")),t="function"==typeof e;return this.then(t?function(t){return c(n,e()).then((function(){return t}))}:e,t?function(t){return c(n,e()).then((function(){throw t}))}:e)}}),a||"function"!=typeof i||i.prototype.finally||d(i.prototype,"finally",o("Promise").prototype.finally)},function(e,n,t){"use strict";var r=t(88),a=t(111);e.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},function(e,n,t){"use strict";var r=t(0),a=t(210).left,i=t(34),s=t(18),o=t(58),l=t(57),c=i("reduce"),d=s("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!d||!l&&o>79&&o<83},{reduce:function(e){return a(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){var r=t(25),a=t(12),i=t(38),s=t(14),o=function(e){return function(n,t,o,l){r(t);var c=a(n),d=i(c),u=s(c.length),p=e?u-1:0,f=e?-1:1;if(o<2)for(;;){if(p in d){l=d[p],p+=f;break}if(p+=f,e?p<0:u<=p)throw TypeError("Reduce of empty array with no initial value")}for(;e?p>=0:u>p;p+=f)p in d&&(l=t(l,d[p],p,c));return l}};e.exports={left:o(!1),right:o(!0)}},function(e,n,t){var r=t(0),a=t(142),i=t(1),s=t(4),o=t(212).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){l(1)})),sham:!a},{freeze:function(e){return l&&s(e)?l(o(e)):e}})},function(e,n,t){var r=t(40),a=t(4),i=t(7),s=t(8).f,o=t(53),l=t(142),c=o("meta"),d=0,u=Object.isExtensible||function(){return!0},p=function(e){s(e,c,{value:{objectID:"O"+ ++d,weakData:{}}})},f=e.exports={REQUIRED:!1,fastKey:function(e,n){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,c)){if(!u(e))return"F";if(!n)return"E";p(e)}return e[c].objectID},getWeakData:function(e,n){if(!i(e,c)){if(!u(e))return!0;if(!n)return!1;p(e)}return e[c].weakData},onFreeze:function(e){return l&&f.REQUIRED&&u(e)&&!i(e,c)&&p(e),e}};r[c]=!0},function(e,n,t){"use strict";var r,a=t(0),i=t(20).f,s=t(14),o=t(145),l=t(21),c=t(146),d=t(23),u="".startsWith,p=Math.min,f=c("startsWith");a({target:"String",proto:!0,forced:!!(d||f||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!f},{startsWith:function(e){var n=String(l(this));o(e);var t=s(p(arguments.length>1?arguments[1]:void 0,n.length)),r=String(e);return u?u.call(n,r,t):n.slice(t,t+r.length)===r}})},function(e,n,t){var r=t(12),a=Math.floor,i="".replace,s=/\$([$&'`]|\d\d?|<[^>]*>)/g,o=/\$([$&'`]|\d\d?)/g;e.exports=function(e,n,t,l,c,d){var u=t+e.length,p=l.length,f=o;return void 0!==c&&(c=r(c),f=s),i.call(d,f,(function(r,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,t);case"'":return n.slice(u);case"<":s=c[i.slice(1,-1)];break;default:var o=+i;if(0===o)return r;if(o>p){var d=a(o/10);return 0===d?r:d<=p?void 0===l[d-1]?i.charAt(1):l[d-1]+i.charAt(1):r}s=l[o-1]}return void 0===s?"":s}))}},function(e,n,t){var r=t(11),a=t(52).f,i={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"[object Window]"==i.call(e)?function(e){try{return a(e)}catch(e){return s.slice()}}(e):a(r(e))}},function(e,n,t){var r=t(6),a=t(134);e.exports=function(e,n,t,i){try{return i?n(r(t)[0],t[1]):n(t)}catch(n){throw a(e),n}}},function(e,n,t){var r=t(151),a=t(218);e.exports=function e(n,t,i,s,o){var l=-1,c=n.length;for(i||(i=a),o||(o=[]);++l<c;){var d=n[l];t>0&&i(d)?t>1?e(d,t-1,i,s,o):r(o,d):s||(o[o.length]=d)}return o}},function(e,n,t){var r=t(43),a=t(91),i=t(15),s=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||a(e)||!!(s&&e&&e[s])}},function(e,n,t){var r=t(37),a=t(29);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,n,t){var r=t(43),a=Object.prototype,i=a.hasOwnProperty,s=a.toString,o=r?r.toStringTag:void 0;e.exports=function(e){var n=i.call(e,o),t=e[o];try{e[o]=void 0;var r=!0}catch(e){}var a=s.call(e);return r&&(n?e[o]=t:delete e[o]),a}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var r=t(223),a=t(279),i=t(99),s=t(15),o=t(290);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?s(e)?a(e[0],e[1]):r(e):o(e)}},function(e,n,t){var r=t(224),a=t(278),i=t(168);e.exports=function(e){var n=a(e);return 1==n.length&&n[0][2]?i(n[0][0],n[0][1]):function(t){return t===e||r(t,e,n)}}},function(e,n,t){var r=t(153),a=t(157);e.exports=function(e,n,t,i){var s=t.length,o=s,l=!i;if(null==e)return!o;for(e=Object(e);s--;){var c=t[s];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++s<o;){var d=(c=t[s])[0],u=e[d],p=c[1];if(l&&c[2]){if(void 0===u&&!(d in e))return!1}else{var f=new r;if(i)var m=i(u,p,d,e,n,f);if(!(void 0===m?a(p,u,3,i,f):m))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var r=t(64),a=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=r(n,e);return!(t<0)&&(t==n.length-1?n.pop():a.call(n,t,1),--this.size,!0)}},function(e,n,t){var r=t(64);e.exports=function(e){var n=this.__data__,t=r(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var r=t(64);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,n,t){var r=t(64);e.exports=function(e,n){var t=this.__data__,a=r(t,e);return a<0?(++this.size,t.push([e,n])):t[a][1]=n,this}},function(e,n,t){var r=t(63);e.exports=function(){this.__data__=new r,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var r=t(63),a=t(92),i=t(94);e.exports=function(e,n){var t=this.__data__;if(t instanceof r){var s=t.__data__;if(!a||s.length<199)return s.push([e,n]),this.size=++t.size,this;t=this.__data__=new i(s)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var r=t(155),a=t(236),i=t(93),s=t(156),o=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,p=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||a(e))&&(r(e)?p:o).test(s(e))}},function(e,n,t){var r,a=t(237),i=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!i&&i in e}},function(e,n,t){var r=t(16)["__core-js_shared__"];e.exports=r},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var r=t(240),a=t(63),i=t(92);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||a),string:new r}}},function(e,n,t){var r=t(241),a=t(242),i=t(243),s=t(244),o=t(245);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=s,l.prototype.set=o,e.exports=l},function(e,n,t){var r=t(65);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var r=t(65),a=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(r){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(n,e)?n[e]:void 0}},function(e,n,t){var r=t(65),a=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return r?void 0!==n[e]:a.call(n,e)}},function(e,n,t){var r=t(65);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=r&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var r=t(66);e.exports=function(e){var n=r(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var r=t(66);e.exports=function(e){return r(this,e).get(e)}},function(e,n,t){var r=t(66);e.exports=function(e){return r(this,e).has(e)}},function(e,n,t){var r=t(66);e.exports=function(e,n){var t=r(this,e),a=t.size;return t.set(e,n),this.size+=t.size==a?0:1,this}},function(e,n,t){var r=t(153),a=t(158),i=t(255),s=t(258),o=t(274),l=t(15),c=t(162),d=t(164),u="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,f,m,h){var g=l(e),v=l(n),y=g?"[object Array]":o(e),b=v?"[object Array]":o(n),x=(y="[object Arguments]"==y?u:y)==u,k=(b="[object Arguments]"==b?u:b)==u,w=y==b;if(w&&c(e)){if(!c(n))return!1;g=!0,x=!1}if(w&&!x)return h||(h=new r),g||d(e)?a(e,n,t,f,m,h):i(e,n,y,t,f,m,h);if(!(1&t)){var z=x&&p.call(e,"__wrapped__"),j=k&&p.call(n,"__wrapped__");if(z||j){var I=z?e.value():e,S=j?n.value():n;return h||(h=new r),m(I,S,t,f,h)}}return!!w&&(h||(h=new r),s(e,n,t,f,m,h))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length;++t<r;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var r=t(43),a=t(256),i=t(154),s=t(158),o=t(257),l=t(95),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;e.exports=function(e,n,t,r,c,u,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!u(new a(e),new a(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=o;case"[object Set]":var m=1&r;if(f||(f=l),e.size!=n.size&&!m)return!1;var h=p.get(e);if(h)return h==n;r|=2,p.set(e,n);var g=s(f(e),f(n),r,c,u,p);return p.delete(e),g;case"[object Symbol]":if(d)return d.call(e)==d.call(n)}return!1}},function(e,n,t){var r=t(16).Uint8Array;e.exports=r},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,r){t[++n]=[r,e]})),t}},function(e,n,t){var r=t(259),a=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,i,s,o){var l=1&t,c=r(e),d=c.length;if(d!=r(n).length&&!l)return!1;for(var u=d;u--;){var p=c[u];if(!(l?p in n:a.call(n,p)))return!1}var f=o.get(e),m=o.get(n);if(f&&m)return f==n&&m==e;var h=!0;o.set(e,n),o.set(n,e);for(var g=l;++u<d;){var v=e[p=c[u]],y=n[p];if(i)var b=l?i(y,v,p,n,e,o):i(v,y,p,e,n,o);if(!(void 0===b?v===y||s(v,y,t,i,o):b)){h=!1;break}g||(g="constructor"==p)}if(h&&!g){var x=e.constructor,k=n.constructor;x==k||!("constructor"in e)||!("constructor"in n)||"function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k||(h=!1)}return o.delete(e),o.delete(n),h}},function(e,n,t){var r=t(260),a=t(261),i=t(161);e.exports=function(e){return r(e,i,a)}},function(e,n,t){var r=t(151),a=t(15);e.exports=function(e,n,t){var i=n(e);return a(e)?i:r(i,t(e))}},function(e,n,t){var r=t(262),a=t(263),i=Object.prototype.propertyIsEnumerable,s=Object.getOwnPropertySymbols,o=s?function(e){return null==e?[]:(e=Object(e),r(s(e),(function(n){return i.call(e,n)})))}:a;e.exports=o},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,a=0,i=[];++t<r;){var s=e[t];n(s,t,e)&&(i[a++]=s)}return i}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var r=t(265),a=t(91),i=t(15),s=t(162),o=t(163),l=t(164),c=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=i(e),d=!t&&a(e),u=!t&&!d&&s(e),p=!t&&!d&&!u&&l(e),f=t||d||u||p,m=f?r(e.length,String):[],h=m.length;for(var g in e)!n&&!c.call(e,g)||f&&("length"==g||u&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||o(g,h))||m.push(g);return m}},function(e,n){e.exports=function(e,n){for(var t=-1,r=Array(e);++t<e;)r[t]=n(t);return r}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var r=t(37),a=t(96),i=t(29),s={};s["[object Float32Array]"]=s["[object Float64Array]"]=s["[object Int8Array]"]=s["[object Int16Array]"]=s["[object Int32Array]"]=s["[object Uint8Array]"]=s["[object Uint8ClampedArray]"]=s["[object Uint16Array]"]=s["[object Uint32Array]"]=!0,s["[object Arguments]"]=s["[object Array]"]=s["[object ArrayBuffer]"]=s["[object Boolean]"]=s["[object DataView]"]=s["[object Date]"]=s["[object Error]"]=s["[object Function]"]=s["[object Map]"]=s["[object Number]"]=s["[object Object]"]=s["[object RegExp]"]=s["[object Set]"]=s["[object String]"]=s["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&a(e.length)&&!!s[r(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var r=t(152),a=n&&!n.nodeType&&n,i=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=i&&i.exports===a&&r.process,o=function(){try{var e=i&&i.require&&i.require("util").types;return e||s&&s.binding&&s.binding("util")}catch(e){}}();e.exports=o}).call(this,t(117)(e))},function(e,n,t){var r=t(271),a=t(272),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var n=[];for(var t in Object(e))i.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var r=t(273)(Object.keys,Object);e.exports=r},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var r=t(275),a=t(92),i=t(276),s=t(166),o=t(277),l=t(37),c=t(156),d=c(r),u=c(a),p=c(i),f=c(s),m=c(o),h=l;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=h(new a)||i&&"[object Promise]"!=h(i.resolve())||s&&"[object Set]"!=h(new s)||o&&"[object WeakMap]"!=h(new o))&&(h=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case f:return"[object Set]";case m:return"[object WeakMap]"}return n}),e.exports=h},function(e,n,t){var r=t(26)(t(16),"DataView");e.exports=r},function(e,n,t){var r=t(26)(t(16),"Promise");e.exports=r},function(e,n,t){var r=t(26)(t(16),"WeakMap");e.exports=r},function(e,n,t){var r=t(167),a=t(161);e.exports=function(e){for(var n=a(e),t=n.length;t--;){var i=n[t],s=e[i];n[t]=[i,s,r(s)]}return n}},function(e,n,t){var r=t(157),a=t(280),i=t(287),s=t(97),o=t(167),l=t(168),c=t(67);e.exports=function(e,n){return s(e)&&o(n)?l(c(e),n):function(t){var s=a(t,e);return void 0===s&&s===n?i(t,e):r(n,s,3)}}},function(e,n,t){var r=t(169);e.exports=function(e,n,t){var a=null==e?void 0:r(e,n);return void 0===a?t:a}},function(e,n,t){var r=t(282),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,s=r((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(a,(function(e,t,r,a){n.push(r?a.replace(i,"$1"):t||e)})),n}));e.exports=s},function(e,n,t){var r=t(283);e.exports=function(e){var n=r(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var r=t(94);function a(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var r=arguments,a=n?n.apply(this,r):r[0],i=t.cache;if(i.has(a))return i.get(a);var s=e.apply(this,r);return t.cache=i.set(a,s)||i,s};return t.cache=new(a.Cache||r),t}a.Cache=r,e.exports=a},function(e,n,t){var r=t(285);e.exports=function(e){return null==e?"":r(e)}},function(e,n,t){var r=t(43),a=t(286),i=t(15),s=t(98),o=r?r.prototype:void 0,l=o?o.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(i(n))return a(n,e)+"";if(s(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,a=Array(r);++t<r;)a[t]=n(e[t],t,e);return a}},function(e,n,t){var r=t(288),a=t(289);e.exports=function(e,n){return null!=e&&a(e,n,r)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var r=t(170),a=t(91),i=t(15),s=t(163),o=t(96),l=t(67);e.exports=function(e,n,t){for(var c=-1,d=(n=r(n,e)).length,u=!1;++c<d;){var p=l(n[c]);if(!(u=null!=e&&t(e,p)))break;e=e[p]}return u||++c!=d?u:!!(d=null==e?0:e.length)&&o(d)&&s(p,d)&&(i(e)||a(e))}},function(e,n,t){var r=t(291),a=t(292),i=t(97),s=t(67);e.exports=function(e){return i(e)?r(s(e)):a(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var r=t(169);e.exports=function(e){return function(n){return r(n,e)}}},function(e,n,t){var r=t(99),a=t(294),i=t(296);e.exports=function(e,n){return i(a(e,n,r),e+"")}},function(e,n,t){var r=t(295),a=Math.max;e.exports=function(e,n,t){return n=a(void 0===n?e.length-1:n,0),function(){for(var i=arguments,s=-1,o=a(i.length-n,0),l=Array(o);++s<o;)l[s]=i[n+s];s=-1;for(var c=Array(n+1);++s<n;)c[s]=i[s];return c[n]=t(l),r(e,this,c)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var r=t(297),a=t(300)(r);e.exports=a},function(e,n,t){var r=t(298),a=t(299),i=t(99),s=a?function(e,n){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(n),writable:!0})}:i;e.exports=s},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var r=t(26),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,n){var t=Date.now;e.exports=function(e){var n=0,r=0;return function(){var a=t(),i=16-(a-r);if(r=a,i>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var r=t(159),a=t(302),i=t(307),s=t(160),o=t(308),l=t(95);e.exports=function(e,n,t){var c=-1,d=a,u=e.length,p=!0,f=[],m=f;if(t)p=!1,d=i;else if(u>=200){var h=n?null:o(e);if(h)return l(h);p=!1,d=s,m=new r}else m=n?[]:f;e:for(;++c<u;){var g=e[c],v=n?n(g):g;if(g=t||0!==g?g:0,p&&v==v){for(var y=m.length;y--;)if(m[y]===v)continue e;n&&m.push(v),f.push(g)}else d(m,v,t)||(m!==f&&m.push(v),f.push(g))}return f}},function(e,n,t){var r=t(303);e.exports=function(e,n){return!!(null==e?0:e.length)&&r(e,n,0)>-1}},function(e,n,t){var r=t(304),a=t(305),i=t(306);e.exports=function(e,n,t){return n==n?i(e,n,t):r(e,a,t)}},function(e,n){e.exports=function(e,n,t,r){for(var a=e.length,i=t+(r?1:-1);r?i--:++i<a;)if(n(e[i],i,e))return i;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var r=t-1,a=e.length;++r<a;)if(e[r]===n)return r;return-1}},function(e,n){e.exports=function(e,n,t){for(var r=-1,a=null==e?0:e.length;++r<a;)if(t(n,e[r]))return!0;return!1}},function(e,n,t){var r=t(166),a=t(309),i=t(95),s=r&&1/i(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=s},function(e,n){e.exports=function(){}},function(e,n,t){var r=t(165),a=t(29);e.exports=function(e){return a(e)&&r(e)}},function(e,n,t){},function(e,n,t){var r=t(0),a=t(5);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperties:t(110)})},function(e,n,t){var r=t(0),a=t(1),i=t(11),s=t(20).f,o=t(5),l=a((function(){s(1)}));r({target:"Object",stat:!0,forced:!o||l,sham:!o},{getOwnPropertyDescriptor:function(e,n){return s(i(e),n)}})},function(e,n,t){var r=t(2),a=t(118).trim,i=t(119),s=r.parseInt,o=/^[+-]?0[Xx]/,l=8!==s(i+"08")||22!==s(i+"0x16");e.exports=l?function(e,n){var t=a(String(e));return s(t,n>>>0||(o.test(t)?16:10))}:s},function(e,n,t){"use strict";t(171)},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";var r=t(5),a=t(2),i=t(74),s=t(9),o=t(7),l=t(24),c=t(196),d=t(39),u=t(1),p=t(28),f=t(52).f,m=t(20).f,h=t(8).f,g=t(118).trim,v=a.Number,y=v.prototype,b="Number"==l(p(y)),x=function(e){var n,t,r,a,i,s,o,l,c=d(e,!1);if("string"==typeof c&&c.length>2)if(43===(n=(c=g(c)).charCodeAt(0))||45===n){if(88===(t=c.charCodeAt(2))||120===t)return NaN}else if(48===n){switch(c.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+c}for(s=(i=c.slice(2)).length,o=0;o<s;o++)if((l=i.charCodeAt(o))<48||l>a)return NaN;return parseInt(i,r)}return+c};if(i("Number",!v(" 0o1")||!v("0b1")||v("+0x1"))){for(var k,w=function(e){var n=arguments.length<1?0:e,t=this;return t instanceof w&&(b?u((function(){y.valueOf.call(t)})):"Number"!=l(t))?c(new v(x(n)),t,w):x(n)},z=r?f(v):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),j=0;z.length>j;j++)o(v,k=z[j])&&!o(w,k)&&h(w,k,m(v,k));w.prototype=y,y.constructor=w,s(a,"Number",w)}},function(e,n,t){"use strict";t(172)},function(e,n,t){},function(e,n,t){"use strict";var r=t(25),a=t(4),i=[].slice,s={},o=function(e,n,t){if(!(n in s)){for(var r=[],a=0;a<n;a++)r[a]="a["+a+"]";s[n]=Function("C,a","return new C("+r.join(",")+")")}return s[n](e,t)};e.exports=Function.bind||function(e){var n=r(this),t=i.call(arguments,1),s=function(){var r=t.concat(i.call(arguments));return this instanceof s?o(n,r.length,r):n.apply(e,r)};return a(n.prototype)&&(s.prototype=n.prototype),s}},function(e,n,t){"use strict";t(175)},function(e,n,t){"use strict";t(176)},function(e,n,t){"use strict";t.r(n);t(109),t(200),t(206),t(207),t(22),t(71),t(49),t(10),t(27),t(33),t(105);var r=t(61),a=Object.freeze({});function i(e){return null==e}function s(e){return null!=e}function o(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function u(e){return"[object Object]"===d.call(e)}function p(e){return"[object RegExp]"===d.call(e)}function f(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function m(e){return s(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function h(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function g(e){var n=parseFloat(e);return isNaN(n)?e:n}function v(e,n){for(var t=Object.create(null),r=e.split(","),a=0;a<r.length;a++)t[r[a]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}v("slot,component",!0);var y=v("key,ref,slot,slot-scope,is");function b(e,n){if(e.length){var t=e.indexOf(n);if(t>-1)return e.splice(t,1)}}var x=Object.prototype.hasOwnProperty;function k(e,n){return x.call(e,n)}function w(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var z=/-(\w)/g,j=w((function(e){return e.replace(z,(function(e,n){return n?n.toUpperCase():""}))})),I=w((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),S=/\B([A-Z])/g,P=w((function(e){return e.replace(S,"-$1").toLowerCase()}));var D=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var r=arguments.length;return r?r>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function C(e,n){n=n||0;for(var t=e.length-n,r=new Array(t);t--;)r[t]=e[t+n];return r}function T(e,n){for(var t in n)e[t]=n[t];return e}function q(e){for(var n={},t=0;t<e.length;t++)e[t]&&T(n,e[t]);return n}function M(e,n,t){}var A=function(e,n,t){return!1},R=function(e){return e};function _(e,n){if(e===n)return!0;var t=c(e),r=c(n);if(!t||!r)return!t&&!r&&String(e)===String(n);try{var a=Array.isArray(e),i=Array.isArray(n);if(a&&i)return e.length===n.length&&e.every((function(e,t){return _(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(a||i)return!1;var s=Object.keys(e),o=Object.keys(n);return s.length===o.length&&s.every((function(t){return _(e[t],n[t])}))}catch(e){return!1}}function E(e,n){for(var t=0;t<e.length;t++)if(_(e[t],n))return t;return-1}function O(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}var L=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:A,isReservedAttr:A,isUnknownElement:A,getTagNamespace:M,parsePlatformTagName:R,mustUseProp:A,async:!0,_lifecycleHooks:F},B=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e,n,t,r){Object.defineProperty(e,n,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var J=new RegExp("[^"+B.source+".$_\\d]");var N,V="__proto__"in{},W="undefined"!=typeof window,H="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,$=H&&WXEnvironment.platform.toLowerCase(),K=W&&window.navigator.userAgent.toLowerCase(),X=K&&/msie|trident/.test(K),Y=K&&K.indexOf("msie 9.0")>0,Z=K&&K.indexOf("edge/")>0,Q=(K&&K.indexOf("android"),K&&/iphone|ipad|ipod|ios/.test(K)||"ios"===$),ee=(K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K),K&&K.match(/firefox\/(\d+)/)),ne={}.watch,te=!1;if(W)try{var re={};Object.defineProperty(re,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var ae=function(){return void 0===N&&(N=!W&&!H&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),N},ie=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var oe,le="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);oe="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=M,de=0,ue=function(){this.id=de++,this.subs=[]};ue.prototype.addSub=function(e){this.subs.push(e)},ue.prototype.removeSub=function(e){b(this.subs,e)},ue.prototype.depend=function(){ue.target&&ue.target.addDep(this)},ue.prototype.notify=function(){var e=this.subs.slice();for(var n=0,t=e.length;n<t;n++)e[n].update()},ue.target=null;var pe=[];function fe(e){pe.push(e),ue.target=e}function me(){pe.pop(),ue.target=pe[pe.length-1]}var he=function(e,n,t,r,a,i,s,o){this.tag=e,this.data=n,this.children=t,this.text=r,this.elm=a,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,ge);var ve=function(e){void 0===e&&(e="");var n=new he;return n.text=e,n.isComment=!0,n};function ye(e){return new he(void 0,void 0,void 0,String(e))}function be(e){var n=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}var xe=Array.prototype,ke=Object.create(xe);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=xe[e];G(ke,e,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var a,i=n.apply(this,t),s=this.__ob__;switch(e){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&s.observeArray(a),s.dep.notify(),i}))}));var we=Object.getOwnPropertyNames(ke),ze=!0;function je(e){ze=e}var Ie=function(e){this.value=e,this.dep=new ue,this.vmCount=0,G(e,"__ob__",this),Array.isArray(e)?(V?function(e,n){e.__proto__=n}(e,ke):function(e,n,t){for(var r=0,a=t.length;r<a;r++){var i=t[r];G(e,i,n[i])}}(e,ke,we),this.observeArray(e)):this.walk(e)};function Se(e,n){var t;if(c(e)&&!(e instanceof he))return k(e,"__ob__")&&e.__ob__ instanceof Ie?t=e.__ob__:ze&&!ae()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(t=new Ie(e)),n&&t&&t.vmCount++,t}function Pe(e,n,t,r,a){var i=new ue,s=Object.getOwnPropertyDescriptor(e,n);if(!s||!1!==s.configurable){var o=s&&s.get,l=s&&s.set;o&&!l||2!==arguments.length||(t=e[n]);var c=!a&&Se(t);Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=o?o.call(e):t;return ue.target&&(i.depend(),c&&(c.dep.depend(),Array.isArray(n)&&Te(n))),n},set:function(n){var r=o?o.call(e):t;n===r||n!=n&&r!=r||o&&!l||(l?l.call(e,n):t=n,c=!a&&Se(n),i.notify())}})}}function De(e,n,t){if(Array.isArray(e)&&f(n))return e.length=Math.max(e.length,n),e.splice(n,1,t),t;if(n in e&&!(n in Object.prototype))return e[n]=t,t;var r=e.__ob__;return e._isVue||r&&r.vmCount?t:r?(Pe(r.value,n,t),r.dep.notify(),t):(e[n]=t,t)}function Ce(e,n){if(Array.isArray(e)&&f(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||k(e,n)&&(delete e[n],t&&t.dep.notify())}}function Te(e){for(var n=void 0,t=0,r=e.length;t<r;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&Te(n)}Ie.prototype.walk=function(e){for(var n=Object.keys(e),t=0;t<n.length;t++)Pe(e,n[t])},Ie.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Se(e[n])};var qe=U.optionMergeStrategies;function Me(e,n){if(!n)return e;for(var t,r,a,i=le?Reflect.ownKeys(n):Object.keys(n),s=0;s<i.length;s++)"__ob__"!==(t=i[s])&&(r=e[t],a=n[t],k(e,t)?r!==a&&u(r)&&u(a)&&Me(r,a):De(e,t,a));return e}function Ae(e,n,t){return t?function(){var r="function"==typeof n?n.call(t,t):n,a="function"==typeof e?e.call(t,t):e;return r?Me(r,a):a}:n?e?function(){return Me("function"==typeof n?n.call(this,this):n,"function"==typeof e?e.call(this,this):e)}:n:e}function Re(e,n){var t=n?e?e.concat(n):Array.isArray(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function _e(e,n,t,r){var a=Object.create(e||null);return n?T(a,n):a}qe.data=function(e,n,t){return t?Ae(e,n,t):n&&"function"!=typeof n?e:Ae(e,n)},F.forEach((function(e){qe[e]=Re})),L.forEach((function(e){qe[e+"s"]=_e})),qe.watch=function(e,n,t,r){if(e===ne&&(e=void 0),n===ne&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var a={};for(var i in T(a,e),n){var s=a[i],o=n[i];s&&!Array.isArray(s)&&(s=[s]),a[i]=s?s.concat(o):Array.isArray(o)?o:[o]}return a},qe.props=qe.methods=qe.inject=qe.computed=function(e,n,t,r){if(!e)return n;var a=Object.create(null);return T(a,e),n&&T(a,n),a},qe.provide=Ae;var Ee=function(e,n){return void 0===n?e:n};function Oe(e,n,t){if("function"==typeof n&&(n=n.options),function(e,n){var t=e.props;if(t){var r,a,i={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(a=t[r])&&(i[j(a)]={type:null});else if(u(t))for(var s in t)a=t[s],i[j(s)]=u(a)?a:{type:a};else 0;e.props=i}}(n),function(e,n){var t=e.inject;if(t){var r=e.inject={};if(Array.isArray(t))for(var a=0;a<t.length;a++)r[t[a]]={from:t[a]};else if(u(t))for(var i in t){var s=t[i];r[i]=u(s)?T({from:i},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var r=n[t];"function"==typeof r&&(n[t]={bind:r,update:r})}}(n),!n._base&&(n.extends&&(e=Oe(e,n.extends,t)),n.mixins))for(var r=0,a=n.mixins.length;r<a;r++)e=Oe(e,n.mixins[r],t);var i,s={};for(i in e)o(i);for(i in n)k(e,i)||o(i);function o(r){var a=qe[r]||Ee;s[r]=a(e[r],n[r],t,r)}return s}function Le(e,n,t,r){if("string"==typeof t){var a=e[n];if(k(a,t))return a[t];var i=j(t);if(k(a,i))return a[i];var s=I(i);return k(a,s)?a[s]:a[t]||a[i]||a[s]}}function Fe(e,n,t,r){var a=n[e],i=!k(t,e),s=t[e],o=Ge(Boolean,a.type);if(o>-1)if(i&&!k(a,"default"))s=!1;else if(""===s||s===P(e)){var l=Ge(String,a.type);(l<0||o<l)&&(s=!0)}if(void 0===s){s=function(e,n,t){if(!k(n,"default"))return;var r=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return"function"==typeof r&&"Function"!==Ue(n.type)?r.call(e):r}(r,a,e);var c=ze;je(!0),Se(s),je(c)}return s}function Ue(e){var n=e&&e.toString().match(/^\s*function (\w+)/);return n?n[1]:""}function Be(e,n){return Ue(e)===Ue(n)}function Ge(e,n){if(!Array.isArray(n))return Be(n,e)?0:-1;for(var t=0,r=n.length;t<r;t++)if(Be(n[t],e))return t;return-1}function Je(e,n,t){fe();try{if(n)for(var r=n;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var i=0;i<a.length;i++)try{if(!1===a[i].call(r,e,n,t))return}catch(e){Ve(e,r,"errorCaptured hook")}}Ve(e,n,t)}finally{me()}}function Ne(e,n,t,r,a){var i;try{(i=t?e.apply(n,t):e.call(n))&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(e){return Je(e,r,a+" (Promise/async)")})),i._handled=!0)}catch(e){Je(e,r,a)}return i}function Ve(e,n,t){if(U.errorHandler)try{return U.errorHandler.call(null,e,n,t)}catch(n){n!==e&&We(n,null,"config.errorHandler")}We(e,n,t)}function We(e,n,t){if(!W&&!H||"undefined"==typeof console)throw e;console.error(e)}var He,$e=!1,Ke=[],Xe=!1;function Ye(){Xe=!1;var e=Ke.slice(0);Ke.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&se(Promise)){var Ze=Promise.resolve();He=function(){Ze.then(Ye),Q&&setTimeout(M)},$e=!0}else if(X||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())He="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(Ye)}:function(){setTimeout(Ye,0)};else{var Qe=1,en=new MutationObserver(Ye),nn=document.createTextNode(String(Qe));en.observe(nn,{characterData:!0}),He=function(){Qe=(Qe+1)%2,nn.data=String(Qe)},$e=!0}function tn(e,n){var t;if(Ke.push((function(){if(e)try{e.call(n)}catch(e){Je(e,n,"nextTick")}else t&&t(n)})),Xe||(Xe=!0,He()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}var rn=new oe;function an(e){!function e(n,t){var r,a,i=Array.isArray(n);if(!i&&!c(n)||Object.isFrozen(n)||n instanceof he)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(i)for(r=n.length;r--;)e(n[r],t);else for(a=Object.keys(n),r=a.length;r--;)e(n[a[r]],t)}(e,rn),rn.clear()}var sn=w((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),r="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:t,capture:r,passive:n}}));function on(e,n){function t(){var e=arguments,r=t.fns;if(!Array.isArray(r))return Ne(r,null,arguments,n,"v-on handler");for(var a=r.slice(),i=0;i<a.length;i++)Ne(a[i],null,e,n,"v-on handler")}return t.fns=e,t}function ln(e,n,t,r,a,s){var l,c,d,u;for(l in e)c=e[l],d=n[l],u=sn(l),i(c)||(i(d)?(i(c.fns)&&(c=e[l]=on(c,s)),o(u.once)&&(c=e[l]=a(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,e[l]=d));for(l in n)i(e[l])&&r((u=sn(l)).name,n[l],u.capture)}function cn(e,n,t){var r;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var a=e[n];function l(){t.apply(this,arguments),b(r.fns,l)}i(a)?r=on([l]):s(a.fns)&&o(a.merged)?(r=a).fns.push(l):r=on([a,l]),r.merged=!0,e[n]=r}function dn(e,n,t,r,a){if(s(n)){if(k(n,t))return e[t]=n[t],a||delete n[t],!0;if(k(n,r))return e[t]=n[r],a||delete n[r],!0}return!1}function un(e){return l(e)?[ye(e)]:Array.isArray(e)?function e(n,t){var r,a,c,d,u=[];for(r=0;r<n.length;r++)i(a=n[r])||"boolean"==typeof a||(c=u.length-1,d=u[c],Array.isArray(a)?a.length>0&&(pn((a=e(a,(t||"")+"_"+r))[0])&&pn(d)&&(u[c]=ye(d.text+a[0].text),a.shift()),u.push.apply(u,a)):l(a)?pn(d)?u[c]=ye(d.text+a):""!==a&&u.push(ye(a)):pn(a)&&pn(d)?u[c]=ye(d.text+a.text):(o(n._isVList)&&s(a.tag)&&i(a.key)&&s(t)&&(a.key="__vlist"+t+"_"+r+"__"),u.push(a)));return u}(e):void 0}function pn(e){return s(e)&&s(e.text)&&!1===e.isComment}function fn(e,n){if(e){for(var t=Object.create(null),r=le?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var i=r[a];if("__ob__"!==i){for(var s=e[i].from,o=n;o;){if(o._provided&&k(o._provided,s)){t[i]=o._provided[s];break}o=o.$parent}if(!o)if("default"in e[i]){var l=e[i].default;t[i]="function"==typeof l?l.call(n):l}else 0}}return t}}function mn(e,n){if(!e||!e.length)return{};for(var t={},r=0,a=e.length;r<a;r++){var i=e[r],s=i.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,i.context!==n&&i.fnContext!==n||!s||null==s.slot)(t.default||(t.default=[])).push(i);else{var o=s.slot,l=t[o]||(t[o]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(hn)&&delete t[c];return t}function hn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function gn(e,n,t){var r,i=Object.keys(n).length>0,s=e?!!e.$stable:!i,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&t&&t!==a&&o===t.$key&&!i&&!t.$hasNormal)return t;for(var l in r={},e)e[l]&&"$"!==l[0]&&(r[l]=vn(n,l,e[l]))}else r={};for(var c in n)c in r||(r[c]=yn(n,c));return e&&Object.isExtensible(e)&&(e._normalized=r),G(r,"$stable",s),G(r,"$key",o),G(r,"$hasNormal",i),r}function vn(e,n,t){var r=function(){var e=arguments.length?t.apply(null,arguments):t({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:un(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return t.proxy&&Object.defineProperty(e,n,{get:r,enumerable:!0,configurable:!0}),r}function yn(e,n){return function(){return e[n]}}function bn(e,n){var t,r,a,i,o;if(Array.isArray(e)||"string"==typeof e)for(t=new Array(e.length),r=0,a=e.length;r<a;r++)t[r]=n(e[r],r);else if("number"==typeof e)for(t=new Array(e),r=0;r<e;r++)t[r]=n(r+1,r);else if(c(e))if(le&&e[Symbol.iterator]){t=[];for(var l=e[Symbol.iterator](),d=l.next();!d.done;)t.push(n(d.value,t.length)),d=l.next()}else for(i=Object.keys(e),t=new Array(i.length),r=0,a=i.length;r<a;r++)o=i[r],t[r]=n(e[o],o,r);return s(t)||(t=[]),t._isVList=!0,t}function xn(e,n,t,r){var a,i=this.$scopedSlots[e];i?(t=t||{},r&&(t=T(T({},r),t)),a=i(t)||n):a=this.$slots[e]||n;var s=t&&t.slot;return s?this.$createElement("template",{slot:s},a):a}function kn(e){return Le(this.$options,"filters",e)||R}function wn(e,n){return Array.isArray(e)?-1===e.indexOf(n):e!==n}function zn(e,n,t,r,a){var i=U.keyCodes[n]||t;return a&&r&&!U.keyCodes[n]?wn(a,r):i?wn(i,e):r?P(r)!==n:void 0}function jn(e,n,t,r,a){if(t)if(c(t)){var i;Array.isArray(t)&&(t=q(t));var s=function(s){if("class"===s||"style"===s||y(s))i=e;else{var o=e.attrs&&e.attrs.type;i=r||U.mustUseProp(n,o,s)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=j(s),c=P(s);l in i||c in i||(i[s]=t[s],a&&((e.on||(e.on={}))["update:"+s]=function(e){t[s]=e}))};for(var o in t)s(o)}else;return e}function In(e,n){var t=this._staticTrees||(this._staticTrees=[]),r=t[e];return r&&!n||Pn(r=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function Sn(e,n,t){return Pn(e,"__once__"+n+(t?"_"+t:""),!0),e}function Pn(e,n,t){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&Dn(e[r],n+"_"+r,t);else Dn(e,n,t)}function Dn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function Cn(e,n){if(n)if(u(n)){var t=e.on=e.on?T({},e.on):{};for(var r in n){var a=t[r],i=n[r];t[r]=a?[].concat(a,i):i}}else;return e}function Tn(e,n,t,r){n=n||{$stable:!t};for(var a=0;a<e.length;a++){var i=e[a];Array.isArray(i)?Tn(i,n,t):i&&(i.proxy&&(i.fn.proxy=!0),n[i.key]=i.fn)}return r&&(n.$key=r),n}function qn(e,n){for(var t=0;t<n.length;t+=2){var r=n[t];"string"==typeof r&&r&&(e[n[t]]=n[t+1])}return e}function Mn(e,n){return"string"==typeof e?n+e:e}function An(e){e._o=Sn,e._n=g,e._s=h,e._l=bn,e._t=xn,e._q=_,e._i=E,e._m=In,e._f=kn,e._k=zn,e._b=jn,e._v=ye,e._e=ve,e._u=Tn,e._g=Cn,e._d=qn,e._p=Mn}function Rn(e,n,t,r,i){var s,l=this,c=i.options;k(r,"_uid")?(s=Object.create(r))._original=r:(s=r,r=r._original);var d=o(c._compiled),u=!d;this.data=e,this.props=n,this.children=t,this.parent=r,this.listeners=e.on||a,this.injections=fn(c.inject,r),this.slots=function(){return l.$slots||gn(e.scopedSlots,l.$slots=mn(t,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gn(e.scopedSlots,this.slots())}}),d&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=gn(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,n,t,a){var i=Bn(s,e,n,t,a,u);return i&&!Array.isArray(i)&&(i.fnScopeId=c._scopeId,i.fnContext=r),i}:this._c=function(e,n,t,r){return Bn(s,e,n,t,r,u)}}function _n(e,n,t,r,a){var i=be(e);return i.fnContext=t,i.fnOptions=r,n.slot&&((i.data||(i.data={})).slot=n.slot),i}function En(e,n){for(var t in n)e[j(t)]=n[t]}An(Rn.prototype);var On={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;On.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},r=e.data.inlineTemplate;s(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Yn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,r,i){0;var s=r.data.scopedSlots,o=e.$scopedSlots,l=!!(s&&!s.$stable||o!==a&&!o.$stable||s&&e.$scopedSlots.$key!==s.$key),c=!!(i||e.$options._renderChildren||l);e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r);if(e.$options._renderChildren=i,e.$attrs=r.data.attrs||a,e.$listeners=t||a,n&&e.$options.props){je(!1);for(var d=e._props,u=e.$options._propKeys||[],p=0;p<u.length;p++){var f=u[p],m=e.$options.props;d[f]=Fe(f,m,n,e)}je(!0),e.$options.propsData=n}t=t||a;var h=e.$options._parentListeners;e.$options._parentListeners=t,Xn(e,t,h),c&&(e.$slots=mn(i,r.context),e.$forceUpdate());0}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,nt(r,"mounted")),e.data.keepAlive&&(t._isMounted?((n=r)._inactive=!1,rt.push(n)):et(r,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(t&&(n._directInactive=!0,Qn(n)))return;if(!n._inactive){n._inactive=!0;for(var r=0;r<n.$children.length;r++)e(n.$children[r]);nt(n,"deactivated")}}(n,!0):n.$destroy())}},Ln=Object.keys(On);function Fn(e,n,t,r,l){if(!i(e)){var d=t.$options._base;if(c(e)&&(e=d.extend(e)),"function"==typeof e){var u;if(i(e.cid)&&void 0===(e=function(e,n){if(o(e.error)&&s(e.errorComp))return e.errorComp;if(s(e.resolved))return e.resolved;var t=Jn;t&&s(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t);if(o(e.loading)&&s(e.loadingComp))return e.loadingComp;if(t&&!s(e.owners)){var r=e.owners=[t],a=!0,l=null,d=null;t.$on("hook:destroyed",(function(){return b(r,t)}));var u=function(e){for(var n=0,t=r.length;n<t;n++)r[n].$forceUpdate();e&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==d&&(clearTimeout(d),d=null))},p=O((function(t){e.resolved=Nn(t,n),a?r.length=0:u(!0)})),f=O((function(n){s(e.errorComp)&&(e.error=!0,u(!0))})),h=e(p,f);return c(h)&&(m(h)?i(e.resolved)&&h.then(p,f):m(h.component)&&(h.component.then(p,f),s(h.error)&&(e.errorComp=Nn(h.error,n)),s(h.loading)&&(e.loadingComp=Nn(h.loading,n),0===h.delay?e.loading=!0:l=setTimeout((function(){l=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,u(!1))}),h.delay||200)),s(h.timeout)&&(d=setTimeout((function(){d=null,i(e.resolved)&&f(null)}),h.timeout)))),a=!1,e.loading?e.loadingComp:e.resolved}}(u=e,d)))return function(e,n,t,r,a){var i=ve();return i.asyncFactory=e,i.asyncMeta={data:n,context:t,children:r,tag:a},i}(u,n,t,r,l);n=n||{},zt(e),s(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var a=n.on||(n.on={}),i=a[r],o=n.model.callback;s(i)?(Array.isArray(i)?-1===i.indexOf(o):i!==o)&&(a[r]=[o].concat(i)):a[r]=o}(e.options,n);var p=function(e,n,t){var r=n.options.props;if(!i(r)){var a={},o=e.attrs,l=e.props;if(s(o)||s(l))for(var c in r){var d=P(c);dn(a,l,c,d,!0)||dn(a,o,c,d,!1)}return a}}(n,e);if(o(e.options.functional))return function(e,n,t,r,i){var o=e.options,l={},c=o.props;if(s(c))for(var d in c)l[d]=Fe(d,c,n||a);else s(t.attrs)&&En(l,t.attrs),s(t.props)&&En(l,t.props);var u=new Rn(t,l,i,r,e),p=o.render.call(null,u._c,u);if(p instanceof he)return _n(p,t,u.parent,o,u);if(Array.isArray(p)){for(var f=un(p)||[],m=new Array(f.length),h=0;h<f.length;h++)m[h]=_n(f[h],t,u.parent,o,u);return m}}(e,p,n,t,r);var f=n.on;if(n.on=n.nativeOn,o(e.options.abstract)){var h=n.slot;n={},h&&(n.slot=h)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<Ln.length;t++){var r=Ln[t],a=n[r],i=On[r];a===i||a&&a._merged||(n[r]=a?Un(i,a):i)}}(n);var g=e.options.name||l;return new he("vue-component-"+e.cid+(g?"-"+g:""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:p,listeners:f,tag:l,children:r},u)}}}function Un(e,n){var t=function(t,r){e(t,r),n(t,r)};return t._merged=!0,t}function Bn(e,n,t,r,a,d){return(Array.isArray(t)||l(t))&&(a=r,r=t,t=void 0),o(d)&&(a=2),function(e,n,t,r,a){if(s(t)&&s(t.__ob__))return ve();s(t)&&s(t.is)&&(n=t.is);if(!n)return ve();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===a?r=un(r):1===a&&(r=function(e){for(var n=0;n<e.length;n++)if(Array.isArray(e[n]))return Array.prototype.concat.apply([],e);return e}(r));var l,d;if("string"==typeof n){var u;d=e.$vnode&&e.$vnode.ns||U.getTagNamespace(n),l=U.isReservedTag(n)?new he(U.parsePlatformTagName(n),t,r,void 0,void 0,e):t&&t.pre||!s(u=Le(e.$options,"components",n))?new he(n,t,r,void 0,void 0,e):Fn(u,t,e,r,n)}else l=Fn(n,t,e,r);return Array.isArray(l)?l:s(l)?(s(d)&&function e(n,t,r){n.ns=t,"foreignObject"===n.tag&&(t=void 0,r=!0);if(s(n.children))for(var a=0,l=n.children.length;a<l;a++){var c=n.children[a];s(c.tag)&&(i(c.ns)||o(r)&&"svg"!==c.tag)&&e(c,t,r)}}(l,d),s(t)&&function(e){c(e.style)&&an(e.style);c(e.class)&&an(e.class)}(t),l):ve()}(e,n,t,r,a)}var Gn,Jn=null;function Nn(e,n){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?n.extend(e):e}function Vn(e){return e.isComment&&e.asyncFactory}function Wn(e){if(Array.isArray(e))for(var n=0;n<e.length;n++){var t=e[n];if(s(t)&&(s(t.componentOptions)||Vn(t)))return t}}function Hn(e,n){Gn.$on(e,n)}function $n(e,n){Gn.$off(e,n)}function Kn(e,n){var t=Gn;return function r(){var a=n.apply(null,arguments);null!==a&&t.$off(e,r)}}function Xn(e,n,t){Gn=e,ln(n,t||{},Hn,$n,Kn,e),Gn=void 0}var Yn=null;function Zn(e){var n=Yn;return Yn=e,function(){Yn=n}}function Qn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function et(e,n){if(n){if(e._directInactive=!1,Qn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)et(e.$children[t]);nt(e,"activated")}}function nt(e,n){fe();var t=e.$options[n],r=n+" hook";if(t)for(var a=0,i=t.length;a<i;a++)Ne(t[a],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+n),me()}var tt=[],rt=[],at={},it=!1,st=!1,ot=0;var lt=0,ct=Date.now;if(W&&!X){var dt=window.performance;dt&&"function"==typeof dt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return dt.now()})}function ut(){var e,n;for(lt=ct(),st=!0,tt.sort((function(e,n){return e.id-n.id})),ot=0;ot<tt.length;ot++)(e=tt[ot]).before&&e.before(),n=e.id,at[n]=null,e.run();var t=rt.slice(),r=tt.slice();ot=tt.length=rt.length=0,at={},it=st=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,et(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&nt(r,"updated")}}(r),ie&&U.devtools&&ie.emit("flush")}var pt=0,ft=function(e,n,t,r,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++pt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new oe,this.newDepIds=new oe,this.expression="","function"==typeof n?this.getter=n:(this.getter=function(e){if(!J.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=M)),this.value=this.lazy?void 0:this.get()};ft.prototype.get=function(){var e;fe(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;Je(e,n,'getter for watcher "'+this.expression+'"')}finally{this.deep&&an(e),me(),this.cleanupDeps()}return e},ft.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},ft.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ft.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var n=e.id;if(null==at[n]){if(at[n]=!0,st){for(var t=tt.length-1;t>ot&&tt[t].id>e.id;)t--;tt.splice(t+1,0,e)}else tt.push(e);it||(it=!0,tn(ut))}}(this)},ft.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var n=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,n)}catch(e){Je(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,n)}}},ft.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ft.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},ft.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var mt={enumerable:!0,configurable:!0,get:M,set:M};function ht(e,n,t){mt.get=function(){return this[n][t]},mt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,mt)}function gt(e){e._watchers=[];var n=e.$options;n.props&&function(e,n){var t=e.$options.propsData||{},r=e._props={},a=e.$options._propKeys=[];e.$parent&&je(!1);var i=function(i){a.push(i);var s=Fe(i,n,t,e);Pe(r,i,s),i in e||ht(e,"_props",i)};for(var s in n)i(s);je(!0)}(e,n.props),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?M:D(n[t],e)}(e,n.methods),n.data?function(e){var n=e.$options.data;u(n=e._data="function"==typeof n?function(e,n){fe();try{return e.call(n,n)}catch(e){return Je(e,n,"data()"),{}}finally{me()}}(n,e):n||{})||(n={});var t=Object.keys(n),r=e.$options.props,a=(e.$options.methods,t.length);for(;a--;){var i=t[a];0,r&&k(r,i)||(s=void 0,36!==(s=(i+"").charCodeAt(0))&&95!==s&&ht(e,"_data",i))}var s;Se(n,!0)}(e):Se(e._data={},!0),n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),r=ae();for(var a in n){var i=n[a],s="function"==typeof i?i:i.get;0,r||(t[a]=new ft(e,s||M,M,vt)),a in e||yt(e,a,i)}}(e,n.computed),n.watch&&n.watch!==ne&&function(e,n){for(var t in n){var r=n[t];if(Array.isArray(r))for(var a=0;a<r.length;a++)kt(e,t,r[a]);else kt(e,t,r)}}(e,n.watch)}var vt={lazy:!0};function yt(e,n,t){var r=!ae();"function"==typeof t?(mt.get=r?bt(n):xt(t),mt.set=M):(mt.get=t.get?r&&!1!==t.cache?bt(n):xt(t.get):M,mt.set=t.set||M),Object.defineProperty(e,n,mt)}function bt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ue.target&&n.depend(),n.value}}function xt(e){return function(){return e.call(this,this)}}function kt(e,n,t,r){return u(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,r)}var wt=0;function zt(e){var n=e.options;if(e.super){var t=zt(e.super);if(t!==e.superOptions){e.superOptions=t;var r=function(e){var n,t=e.options,r=e.sealedOptions;for(var a in t)t[a]!==r[a]&&(n||(n={}),n[a]=t[a]);return n}(e);r&&T(e.extendOptions,r),(n=e.options=Oe(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function jt(e){this._init(e)}function It(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,r=t.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var i=e.name||t.options.name;var s=function(e){this._init(e)};return(s.prototype=Object.create(t.prototype)).constructor=s,s.cid=n++,s.options=Oe(t.options,e),s.super=t,s.options.props&&function(e){var n=e.options.props;for(var t in n)ht(e.prototype,"_props",t)}(s),s.options.computed&&function(e){var n=e.options.computed;for(var t in n)yt(e.prototype,t,n[t])}(s),s.extend=t.extend,s.mixin=t.mixin,s.use=t.use,L.forEach((function(e){s[e]=t[e]})),i&&(s.options.components[i]=s),s.superOptions=t.options,s.extendOptions=e,s.sealedOptions=T({},s.options),a[r]=s,s}}function St(e){return e&&(e.Ctor.options.name||e.tag)}function Pt(e,n){return Array.isArray(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!p(e)&&e.test(n)}function Dt(e,n){var t=e.cache,r=e.keys,a=e._vnode;for(var i in t){var s=t[i];if(s){var o=St(s.componentOptions);o&&!n(o)&&Ct(t,i,r,a)}}}function Ct(e,n,t,r){var a=e[n];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[n]=null,b(t,n)}jt.prototype._init=function(e){var n=this;n._uid=wt++,n._isVue=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),r=n._parentVnode;t.parent=n.parent,t._parentVnode=r;var a=r.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Oe(zt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Xn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,r=t&&t.context;e.$slots=mn(n._renderChildren,r),e.$scopedSlots=a,e._c=function(n,t,r,a){return Bn(e,n,t,r,a,!1)},e.$createElement=function(n,t,r,a){return Bn(e,n,t,r,a,!0)};var i=t&&t.data;Pe(e,"$attrs",i&&i.attrs||a,null,!0),Pe(e,"$listeners",n._parentListeners||a,null,!0)}(n),nt(n,"beforeCreate"),function(e){var n=fn(e.$options.inject,e);n&&(je(!1),Object.keys(n).forEach((function(t){Pe(e,t,n[t])})),je(!0))}(n),gt(n),function(e){var n=e.$options.provide;n&&(e._provided="function"==typeof n?n.call(e):n)}(n),nt(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=De,e.prototype.$delete=Ce,e.prototype.$watch=function(e,n,t){if(u(n))return kt(this,e,n,t);(t=t||{}).user=!0;var r=new ft(this,e,n,t);if(t.immediate)try{n.call(this,r.value)}catch(e){Je(e,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(jt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var r=this;if(Array.isArray(e))for(var a=0,i=e.length;a<i;a++)r.$on(e[a],t);else(r._events[e]||(r._events[e]=[])).push(t),n.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,n){var t=this;function r(){t.$off(e,r),n.apply(t,arguments)}return r.fn=n,t.$on(e,r),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(e)){for(var r=0,a=e.length;r<a;r++)t.$off(e[r],n);return t}var i,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var o=s.length;o--;)if((i=s[o])===n||i.fn===n){s.splice(o,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?C(t):t;for(var r=C(arguments,1),a='event handler for "'+e+'"',i=0,s=t.length;i<s;i++)Ne(t[i],n,r,n,a)}return n}}(jt),function(e){e.prototype._update=function(e,n){var t=this,r=t.$el,a=t._vnode,i=Zn(t);t._vnode=e,t.$el=a?t.__patch__(a,e):t.__patch__(t.$el,e,n,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||b(n.$children,e),e._watcher&&e._watcher.teardown();for(var t=e._watchers.length;t--;)e._watchers[t].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(jt),function(e){An(e.prototype),e.prototype.$nextTick=function(e){return tn(e,this)},e.prototype._render=function(){var e,n=this,t=n.$options,r=t.render,a=t._parentVnode;a&&(n.$scopedSlots=gn(a.data.scopedSlots,n.$slots,n.$scopedSlots)),n.$vnode=a;try{Jn=n,e=r.call(n._renderProxy,n.$createElement)}catch(t){Je(t,n,"render"),e=n._vnode}finally{Jn=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=ve()),e.parent=a,e}}(jt);var Tt=[String,RegExp,Array],qt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Tt,exclude:Tt,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Ct(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(n){Dt(e,(function(e){return Pt(n,e)}))})),this.$watch("exclude",(function(n){Dt(e,(function(e){return!Pt(n,e)}))}))},render:function(){var e=this.$slots.default,n=Wn(e),t=n&&n.componentOptions;if(t){var r=St(t),a=this.include,i=this.exclude;if(a&&(!r||!Pt(a,r))||i&&r&&Pt(i,r))return n;var s=this.cache,o=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):n.key;s[l]?(n.componentInstance=s[l].componentInstance,b(o,l),o.push(l)):(s[l]=n,o.push(l),this.max&&o.length>parseInt(this.max)&&Ct(s,o[0],o,this._vnode)),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return U}};Object.defineProperty(e,"config",n),e.util={warn:ce,extend:T,mergeOptions:Oe,defineReactive:Pe},e.set=De,e.delete=Ce,e.nextTick=tn,e.observable=function(e){return Se(e),e},e.options=Object.create(null),L.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,T(e.options.components,qt),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=C(arguments,1);return t.unshift(this),"function"==typeof e.install?e.install.apply(e,t):"function"==typeof e&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Oe(this.options,e),this}}(e),It(e),function(e){L.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&u(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&"function"==typeof t&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(jt),Object.defineProperty(jt.prototype,"$isServer",{get:ae}),Object.defineProperty(jt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(jt,"FunctionalRenderContext",{value:Rn}),jt.version="2.6.12";var Mt=v("style,class"),At=v("input,textarea,option,select,progress"),Rt=v("contenteditable,draggable,spellcheck"),_t=v("events,caret,typing,plaintext-only"),Et=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Ot="http://www.w3.org/1999/xlink",Lt=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Ft=function(e){return Lt(e)?e.slice(6,e.length):""},Ut=function(e){return null==e||!1===e};function Bt(e){for(var n=e.data,t=e,r=e;s(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(n=Gt(r.data,n));for(;s(t=t.parent);)t&&t.data&&(n=Gt(n,t.data));return function(e,n){if(s(e)||s(n))return Jt(e,Nt(n));return""}(n.staticClass,n.class)}function Gt(e,n){return{staticClass:Jt(e.staticClass,n.staticClass),class:s(e.class)?[e.class,n.class]:n.class}}function Jt(e,n){return e?n?e+" "+n:e:n||""}function Nt(e){return Array.isArray(e)?function(e){for(var n,t="",r=0,a=e.length;r<a;r++)s(n=Nt(e[r]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):c(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var Vt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Ht=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),$t=function(e){return Wt(e)||Ht(e)};var Kt=Object.create(null);var Xt=v("text,number,password,search,email,tel,url");var Yt=Object.freeze({createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(Vt[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),Zt={create:function(e,n){Qt(n)},update:function(e,n){e.data.ref!==n.data.ref&&(Qt(e,!0),Qt(n))},destroy:function(e){Qt(e,!0)}};function Qt(e,n){var t=e.data.ref;if(s(t)){var r=e.context,a=e.componentInstance||e.elm,i=r.$refs;n?Array.isArray(i[t])?b(i[t],a):i[t]===a&&(i[t]=void 0):e.data.refInFor?Array.isArray(i[t])?i[t].indexOf(a)<0&&i[t].push(a):i[t]=[a]:i[t]=a}}var er=new he("",{},[]),nr=["create","activate","update","remove","destroy"];function tr(e,n){return e.key===n.key&&(e.tag===n.tag&&e.isComment===n.isComment&&s(e.data)===s(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,r=s(t=e.data)&&s(t=t.attrs)&&t.type,a=s(t=n.data)&&s(t=t.attrs)&&t.type;return r===a||Xt(r)&&Xt(a)}(e,n)||o(e.isAsyncPlaceholder)&&e.asyncFactory===n.asyncFactory&&i(n.asyncFactory.error))}function rr(e,n,t){var r,a,i={};for(r=n;r<=t;++r)s(a=e[r].key)&&(i[a]=r);return i}var ar={create:ir,update:ir,destroy:function(e){ir(e,er)}};function ir(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,r,a,i=e===er,s=n===er,o=or(e.data.directives,e.context),l=or(n.data.directives,n.context),c=[],d=[];for(t in l)r=o[t],a=l[t],r?(a.oldValue=r.value,a.oldArg=r.arg,cr(a,"update",n,e),a.def&&a.def.componentUpdated&&d.push(a)):(cr(a,"bind",n,e),a.def&&a.def.inserted&&c.push(a));if(c.length){var u=function(){for(var t=0;t<c.length;t++)cr(c[t],"inserted",n,e)};i?cn(n,"insert",u):u()}d.length&&cn(n,"postpatch",(function(){for(var t=0;t<d.length;t++)cr(d[t],"componentUpdated",n,e)}));if(!i)for(t in o)l[t]||cr(o[t],"unbind",e,e,s)}(e,n)}var sr=Object.create(null);function or(e,n){var t,r,a=Object.create(null);if(!e)return a;for(t=0;t<e.length;t++)(r=e[t]).modifiers||(r.modifiers=sr),a[lr(r)]=r,r.def=Le(n.$options,"directives",r.name);return a}function lr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function cr(e,n,t,r,a){var i=e.def&&e.def[n];if(i)try{i(t.elm,e,t,r,a)}catch(r){Je(r,t.context,"directive "+e.name+" "+n+" hook")}}var dr=[Zt,ar];function ur(e,n){var t=n.componentOptions;if(!(s(t)&&!1===t.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(n.data.attrs))){var r,a,o=n.elm,l=e.data.attrs||{},c=n.data.attrs||{};for(r in s(c.__ob__)&&(c=n.data.attrs=T({},c)),c)a=c[r],l[r]!==a&&pr(o,r,a);for(r in(X||Z)&&c.value!==l.value&&pr(o,"value",c.value),l)i(c[r])&&(Lt(r)?o.removeAttributeNS(Ot,Ft(r)):Rt(r)||o.removeAttribute(r))}}function pr(e,n,t){e.tagName.indexOf("-")>-1?fr(e,n,t):Et(n)?Ut(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):Rt(n)?e.setAttribute(n,function(e,n){return Ut(n)||"false"===n?"false":"contenteditable"===e&&_t(n)?n:"true"}(n,t)):Lt(n)?Ut(t)?e.removeAttributeNS(Ot,Ft(n)):e.setAttributeNS(Ot,n,t):fr(e,n,t)}function fr(e,n,t){if(Ut(t))e.removeAttribute(n);else{if(X&&!Y&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var r=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(n,t)}}var mr={create:ur,update:ur};function hr(e,n){var t=n.elm,r=n.data,a=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var o=Bt(n),l=t._transitionClasses;s(l)&&(o=Jt(o,Nt(l))),o!==t._prevClass&&(t.setAttribute("class",o),t._prevClass=o)}}var gr,vr={create:hr,update:hr};function yr(e,n,t){var r=gr;return function a(){var i=n.apply(null,arguments);null!==i&&kr(e,a,t,r)}}var br=$e&&!(ee&&Number(ee[1])<=53);function xr(e,n,t,r){if(br){var a=lt,i=n;n=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}gr.addEventListener(e,n,te?{capture:t,passive:r}:t)}function kr(e,n,t,r){(r||gr).removeEventListener(e,n._wrapper||n,t)}function wr(e,n){if(!i(e.data.on)||!i(n.data.on)){var t=n.data.on||{},r=e.data.on||{};gr=n.elm,function(e){if(s(e.__r)){var n=X?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}s(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),ln(t,r,xr,kr,yr,n.context),gr=void 0}}var zr,jr={create:wr,update:wr};function Ir(e,n){if(!i(e.data.domProps)||!i(n.data.domProps)){var t,r,a=n.elm,o=e.data.domProps||{},l=n.data.domProps||{};for(t in s(l.__ob__)&&(l=n.data.domProps=T({},l)),o)t in l||(a[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),r===o[t])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===t&&"PROGRESS"!==a.tagName){a._value=r;var c=i(r)?"":String(r);Sr(a,c)&&(a.value=c)}else if("innerHTML"===t&&Ht(a.tagName)&&i(a.innerHTML)){(zr=zr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var d=zr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;d.firstChild;)a.appendChild(d.firstChild)}else if(r!==o[t])try{a[t]=r}catch(e){}}}}function Sr(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,r=e._vModifiers;if(s(r)){if(r.number)return g(t)!==g(n);if(r.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Pr={create:Ir,update:Ir},Dr=w((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(t);r.length>1&&(n[r[0].trim()]=r[1].trim())}})),n}));function Cr(e){var n=Tr(e.style);return e.staticStyle?T(e.staticStyle,n):n}function Tr(e){return Array.isArray(e)?q(e):"string"==typeof e?Dr(e):e}var qr,Mr=/^--/,Ar=/\s*!important$/,Rr=function(e,n,t){if(Mr.test(n))e.style.setProperty(n,t);else if(Ar.test(t))e.style.setProperty(P(n),t.replace(Ar,""),"important");else{var r=Er(n);if(Array.isArray(t))for(var a=0,i=t.length;a<i;a++)e.style[r]=t[a];else e.style[r]=t}},_r=["Webkit","Moz","ms"],Er=w((function(e){if(qr=qr||document.createElement("div").style,"filter"!==(e=j(e))&&e in qr)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<_r.length;t++){var r=_r[t]+n;if(r in qr)return r}}));function Or(e,n){var t=n.data,r=e.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var a,o,l=n.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},u=c||d,p=Tr(n.data.style)||{};n.data.normalizedStyle=s(p.__ob__)?T({},p):p;var f=function(e,n){var t,r={};if(n)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=Cr(a.data))&&T(r,t);(t=Cr(e.data))&&T(r,t);for(var i=e;i=i.parent;)i.data&&(t=Cr(i.data))&&T(r,t);return r}(n,!0);for(o in u)i(f[o])&&Rr(l,o,"");for(o in f)(a=f[o])!==u[o]&&Rr(l,o,null==a?"":a)}}var Lr={create:Or,update:Or},Fr=/\s+/;function Ur(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(Fr).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" "+(e.getAttribute("class")||"")+" ";t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function Br(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(Fr).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" "+(e.getAttribute("class")||"")+" ",r=" "+n+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function Gr(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&T(n,Jr(e.name||"v")),T(n,e),n}return"string"==typeof e?Jr(e):void 0}}var Jr=w((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Nr=W&&!Y,Vr="transition",Wr="transitionend",Hr="animation",$r="animationend";Nr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Vr="WebkitTransition",Wr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Hr="WebkitAnimation",$r="webkitAnimationEnd"));var Kr=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Xr(e){Kr((function(){Kr(e)}))}function Yr(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),Ur(e,n))}function Zr(e,n){e._transitionClasses&&b(e._transitionClasses,n),Br(e,n)}function Qr(e,n,t){var r=na(e,n),a=r.type,i=r.timeout,s=r.propCount;if(!a)return t();var o="transition"===a?Wr:$r,l=0,c=function(){e.removeEventListener(o,d),t()},d=function(n){n.target===e&&++l>=s&&c()};setTimeout((function(){l<s&&c()}),i+1),e.addEventListener(o,d)}var ea=/\b(transform|all)(,|$)/;function na(e,n){var t,r=window.getComputedStyle(e),a=(r[Vr+"Delay"]||"").split(", "),i=(r[Vr+"Duration"]||"").split(", "),s=ta(a,i),o=(r[Hr+"Delay"]||"").split(", "),l=(r[Hr+"Duration"]||"").split(", "),c=ta(o,l),d=0,u=0;return"transition"===n?s>0&&(t="transition",d=s,u=i.length):"animation"===n?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(s,c))>0?s>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&ea.test(r[Vr+"Property"])}}function ta(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return ra(n)+ra(e[t])})))}function ra(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function aa(e,n){var t=e.elm;s(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Gr(e.data.transition);if(!i(r)&&!s(t._enterCb)&&1===t.nodeType){for(var a=r.css,o=r.type,l=r.enterClass,d=r.enterToClass,u=r.enterActiveClass,p=r.appearClass,f=r.appearToClass,m=r.appearActiveClass,h=r.beforeEnter,v=r.enter,y=r.afterEnter,b=r.enterCancelled,x=r.beforeAppear,k=r.appear,w=r.afterAppear,z=r.appearCancelled,j=r.duration,I=Yn,S=Yn.$vnode;S&&S.parent;)I=S.context,S=S.parent;var P=!I._isMounted||!e.isRootInsert;if(!P||k||""===k){var D=P&&p?p:l,C=P&&m?m:u,T=P&&f?f:d,q=P&&x||h,M=P&&"function"==typeof k?k:v,A=P&&w||y,R=P&&z||b,_=g(c(j)?j.enter:j);0;var E=!1!==a&&!Y,L=oa(M),F=t._enterCb=O((function(){E&&(Zr(t,T),Zr(t,C)),F.cancelled?(E&&Zr(t,D),R&&R(t)):A&&A(t),t._enterCb=null}));e.data.show||cn(e,"insert",(function(){var n=t.parentNode,r=n&&n._pending&&n._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),M&&M(t,F)})),q&&q(t),E&&(Yr(t,D),Yr(t,C),Xr((function(){Zr(t,D),F.cancelled||(Yr(t,T),L||(sa(_)?setTimeout(F,_):Qr(t,o,F)))}))),e.data.show&&(n&&n(),M&&M(t,F)),E||L||F()}}}function ia(e,n){var t=e.elm;s(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Gr(e.data.transition);if(i(r)||1!==t.nodeType)return n();if(!s(t._leaveCb)){var a=r.css,o=r.type,l=r.leaveClass,d=r.leaveToClass,u=r.leaveActiveClass,p=r.beforeLeave,f=r.leave,m=r.afterLeave,h=r.leaveCancelled,v=r.delayLeave,y=r.duration,b=!1!==a&&!Y,x=oa(f),k=g(c(y)?y.leave:y);0;var w=t._leaveCb=O((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),b&&(Zr(t,d),Zr(t,u)),w.cancelled?(b&&Zr(t,l),h&&h(t)):(n(),m&&m(t)),t._leaveCb=null}));v?v(z):z()}function z(){w.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),p&&p(t),b&&(Yr(t,l),Yr(t,u),Xr((function(){Zr(t,l),w.cancelled||(Yr(t,d),x||(sa(k)?setTimeout(w,k):Qr(t,o,w)))}))),f&&f(t,w),b||x||w())}}function sa(e){return"number"==typeof e&&!isNaN(e)}function oa(e){if(i(e))return!1;var n=e.fns;return s(n)?oa(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function la(e,n){!0!==n.data.show&&aa(n)}var ca=function(e){var n,t,r={},a=e.modules,c=e.nodeOps;for(n=0;n<nr.length;++n)for(r[nr[n]]=[],t=0;t<a.length;++t)s(a[t][nr[n]])&&r[nr[n]].push(a[t][nr[n]]);function d(e){var n=c.parentNode(e);s(n)&&c.removeChild(n,e)}function u(e,n,t,a,i,l,d){if(s(e.elm)&&s(l)&&(e=l[d]=be(e)),e.isRootInsert=!i,!function(e,n,t,a){var i=e.data;if(s(i)){var l=s(e.componentInstance)&&i.keepAlive;if(s(i=i.hook)&&s(i=i.init)&&i(e,!1),s(e.componentInstance))return p(e,n),f(t,e.elm,a),o(l)&&function(e,n,t,a){var i,o=e;for(;o.componentInstance;)if(o=o.componentInstance._vnode,s(i=o.data)&&s(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](er,o);n.push(o);break}f(t,e.elm,a)}(e,n,t,a),!0}}(e,n,t,a)){var u=e.data,h=e.children,v=e.tag;s(v)?(e.elm=e.ns?c.createElementNS(e.ns,v):c.createElement(v,e),y(e),m(e,h,n),s(u)&&g(e,n),f(t,e.elm,a)):o(e.isComment)?(e.elm=c.createComment(e.text),f(t,e.elm,a)):(e.elm=c.createTextNode(e.text),f(t,e.elm,a))}}function p(e,n){s(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(g(e,n),y(e)):(Qt(e),n.push(e))}function f(e,n,t){s(e)&&(s(t)?c.parentNode(t)===e&&c.insertBefore(e,n,t):c.appendChild(e,n))}function m(e,n,t){if(Array.isArray(n)){0;for(var r=0;r<n.length;++r)u(n[r],t,e.elm,null,!0,n,r)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return s(e.tag)}function g(e,t){for(var a=0;a<r.create.length;++a)r.create[a](er,e);s(n=e.data.hook)&&(s(n.create)&&n.create(er,e),s(n.insert)&&t.push(e))}function y(e){var n;if(s(n=e.fnScopeId))c.setStyleScope(e.elm,n);else for(var t=e;t;)s(n=t.context)&&s(n=n.$options._scopeId)&&c.setStyleScope(e.elm,n),t=t.parent;s(n=Yn)&&n!==e.context&&n!==e.fnContext&&s(n=n.$options._scopeId)&&c.setStyleScope(e.elm,n)}function b(e,n,t,r,a,i){for(;r<=a;++r)u(t[r],i,e,n,!1,t,r)}function x(e){var n,t,a=e.data;if(s(a))for(s(n=a.hook)&&s(n=n.destroy)&&n(e),n=0;n<r.destroy.length;++n)r.destroy[n](e);if(s(n=e.children))for(t=0;t<e.children.length;++t)x(e.children[t])}function k(e,n,t){for(;n<=t;++n){var r=e[n];s(r)&&(s(r.tag)?(w(r),x(r)):d(r.elm))}}function w(e,n){if(s(n)||s(e.data)){var t,a=r.remove.length+1;for(s(n)?n.listeners+=a:n=function(e,n){function t(){0==--t.listeners&&d(e)}return t.listeners=n,t}(e.elm,a),s(t=e.componentInstance)&&s(t=t._vnode)&&s(t.data)&&w(t,n),t=0;t<r.remove.length;++t)r.remove[t](e,n);s(t=e.data.hook)&&s(t=t.remove)?t(e,n):n()}else d(e.elm)}function z(e,n,t,r){for(var a=t;a<r;a++){var i=n[a];if(s(i)&&tr(e,i))return a}}function j(e,n,t,a,l,d){if(e!==n){s(n.elm)&&s(a)&&(n=a[l]=be(n));var p=n.elm=e.elm;if(o(e.isAsyncPlaceholder))s(n.asyncFactory.resolved)?P(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(o(n.isStatic)&&o(e.isStatic)&&n.key===e.key&&(o(n.isCloned)||o(n.isOnce)))n.componentInstance=e.componentInstance;else{var f,m=n.data;s(m)&&s(f=m.hook)&&s(f=f.prepatch)&&f(e,n);var g=e.children,v=n.children;if(s(m)&&h(n)){for(f=0;f<r.update.length;++f)r.update[f](e,n);s(f=m.hook)&&s(f=f.update)&&f(e,n)}i(n.text)?s(g)&&s(v)?g!==v&&function(e,n,t,r,a){var o,l,d,p=0,f=0,m=n.length-1,h=n[0],g=n[m],v=t.length-1,y=t[0],x=t[v],w=!a;for(0;p<=m&&f<=v;)i(h)?h=n[++p]:i(g)?g=n[--m]:tr(h,y)?(j(h,y,r,t,f),h=n[++p],y=t[++f]):tr(g,x)?(j(g,x,r,t,v),g=n[--m],x=t[--v]):tr(h,x)?(j(h,x,r,t,v),w&&c.insertBefore(e,h.elm,c.nextSibling(g.elm)),h=n[++p],x=t[--v]):tr(g,y)?(j(g,y,r,t,f),w&&c.insertBefore(e,g.elm,h.elm),g=n[--m],y=t[++f]):(i(o)&&(o=rr(n,p,m)),i(l=s(y.key)?o[y.key]:z(y,n,p,m))?u(y,r,e,h.elm,!1,t,f):tr(d=n[l],y)?(j(d,y,r,t,f),n[l]=void 0,w&&c.insertBefore(e,d.elm,h.elm)):u(y,r,e,h.elm,!1,t,f),y=t[++f]);p>m?b(e,i(t[v+1])?null:t[v+1].elm,t,f,v,r):f>v&&k(n,p,m)}(p,g,v,t,d):s(v)?(s(e.text)&&c.setTextContent(p,""),b(p,null,v,0,v.length-1,t)):s(g)?k(g,0,g.length-1):s(e.text)&&c.setTextContent(p,""):e.text!==n.text&&c.setTextContent(p,n.text),s(m)&&s(f=m.hook)&&s(f=f.postpatch)&&f(e,n)}}}function I(e,n,t){if(o(t)&&s(e.parent))e.parent.data.pendingInsert=n;else for(var r=0;r<n.length;++r)n[r].data.hook.insert(n[r])}var S=v("attrs,class,staticClass,staticStyle,key");function P(e,n,t,r){var a,i=n.tag,l=n.data,c=n.children;if(r=r||l&&l.pre,n.elm=e,o(n.isComment)&&s(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(s(l)&&(s(a=l.hook)&&s(a=a.init)&&a(n,!0),s(a=n.componentInstance)))return p(n,t),!0;if(s(i)){if(s(c))if(e.hasChildNodes())if(s(a=l)&&s(a=a.domProps)&&s(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var d=!0,u=e.firstChild,f=0;f<c.length;f++){if(!u||!P(u,c[f],t,r)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else m(n,c,t);if(s(l)){var h=!1;for(var v in l)if(!S(v)){h=!0,g(n,t);break}!h&&l.class&&an(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,a){if(!i(n)){var l,d=!1,p=[];if(i(e))d=!0,u(n,p);else{var f=s(e.nodeType);if(!f&&tr(e,n))j(e,n,p,null,null,a);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),o(t)&&P(e,n,p))return I(n,p,!0),e;l=e,e=new he(c.tagName(l).toLowerCase(),{},[],void 0,l)}var m=e.elm,g=c.parentNode(m);if(u(n,p,m._leaveCb?null:g,c.nextSibling(m)),s(n.parent))for(var v=n.parent,y=h(n);v;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](v);if(v.elm=n.elm,y){for(var w=0;w<r.create.length;++w)r.create[w](er,v);var z=v.data.hook.insert;if(z.merged)for(var S=1;S<z.fns.length;S++)z.fns[S]()}else Qt(v);v=v.parent}s(g)?k([e],0,0):s(e.tag)&&x(e)}}return I(n,p,d),n.elm}s(e)&&x(e)}}({nodeOps:Yt,modules:[mr,vr,jr,Pr,Lr,W?{create:la,activate:la,remove:function(e,n){!0!==e.data.show?ia(e,n):n()}}:{}].concat(dr)});Y&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&va(e,"input")}));var da={inserted:function(e,n,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?cn(t,"postpatch",(function(){da.componentUpdated(e,n,t)})):ua(e,n,t.context),e._vOptions=[].map.call(e.options,ma)):("textarea"===t.tag||Xt(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",ha),e.addEventListener("compositionend",ga),e.addEventListener("change",ga),Y&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){ua(e,n,t.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,ma);if(a.some((function(e,n){return!_(e,r[n])})))(e.multiple?n.value.some((function(e){return fa(e,a)})):n.value!==n.oldValue&&fa(n.value,a))&&va(e,"change")}}};function ua(e,n,t){pa(e,n,t),(X||Z)&&setTimeout((function(){pa(e,n,t)}),0)}function pa(e,n,t){var r=n.value,a=e.multiple;if(!a||Array.isArray(r)){for(var i,s,o=0,l=e.options.length;o<l;o++)if(s=e.options[o],a)i=E(r,ma(s))>-1,s.selected!==i&&(s.selected=i);else if(_(ma(s),r))return void(e.selectedIndex!==o&&(e.selectedIndex=o));a||(e.selectedIndex=-1)}}function fa(e,n){return n.every((function(n){return!_(n,e)}))}function ma(e){return"_value"in e?e._value:e.value}function ha(e){e.target.composing=!0}function ga(e){e.target.composing&&(e.target.composing=!1,va(e.target,"input"))}function va(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function ya(e){return!e.componentInstance||e.data&&e.data.transition?e:ya(e.componentInstance._vnode)}var ba={model:da,show:{bind:function(e,n,t){var r=n.value,a=(t=ya(t)).data&&t.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(t.data.show=!0,aa(t,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,n,t){var r=n.value;!r!=!n.oldValue&&((t=ya(t)).data&&t.data.transition?(t.data.show=!0,r?aa(t,(function(){e.style.display=e.__vOriginalDisplay})):ia(t,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},xa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ka(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?ka(Wn(n.children)):e}function wa(e){var n={},t=e.$options;for(var r in t.propsData)n[r]=e[r];var a=t._parentListeners;for(var i in a)n[j(i)]=a[i];return n}function za(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var ja=function(e){return e.tag||Vn(e)},Ia=function(e){return"show"===e.name},Sa={name:"transition",props:xa,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(ja)).length){0;var r=this.mode;0;var a=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var i=ka(a);if(!i)return a;if(this._leaving)return za(e,a);var s="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?s+"comment":s+i.tag:l(i.key)?0===String(i.key).indexOf(s)?i.key:s+i.key:i.key;var o=(i.data||(i.data={})).transition=wa(this),c=this._vnode,d=ka(c);if(i.data.directives&&i.data.directives.some(Ia)&&(i.data.show=!0),d&&d.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(i,d)&&!Vn(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=T({},o);if("out-in"===r)return this._leaving=!0,cn(u,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),za(e,a);if("in-out"===r){if(Vn(i))return c;var p,f=function(){p()};cn(o,"afterEnter",f),cn(o,"enterCancelled",f),cn(u,"delayLeave",(function(e){p=e}))}}return a}}},Pa=T({tag:String,moveClass:String},xa);function Da(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Ca(e){e.data.newPos=e.elm.getBoundingClientRect()}function Ta(e){var n=e.data.pos,t=e.data.newPos,r=n.left-t.left,a=n.top-t.top;if(r||a){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+a+"px)",i.transitionDuration="0s"}}delete Pa.mode;var qa={Transition:Sa,TransitionGroup:{props:Pa,beforeMount:function(){var e=this,n=this._update;this._update=function(t,r){var a=Zn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),n.call(e,t,r)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],i=this.children=[],s=wa(this),o=0;o<a.length;o++){var l=a[o];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))i.push(l),t[l.key]=l,(l.data||(l.data={})).transition=s;else;}if(r){for(var c=[],d=[],u=0;u<r.length;u++){var p=r[u];p.data.transition=s,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?c.push(p):d.push(p)}this.kept=e(n,null,c),this.removed=d}return e(n,null,i)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Da),e.forEach(Ca),e.forEach(Ta),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,r=t.style;Yr(t,n),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Wr,t._moveCb=function e(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Wr,e),t._moveCb=null,Zr(t,n))})}})))},methods:{hasMove:function(e,n){if(!Nr)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Br(t,e)})),Ur(t,n),t.style.display="none",this.$el.appendChild(t);var r=na(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};jt.config.mustUseProp=function(e,n,t){return"value"===t&&At(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},jt.config.isReservedTag=$t,jt.config.isReservedAttr=Mt,jt.config.getTagNamespace=function(e){return Ht(e)?"svg":"math"===e?"math":void 0},jt.config.isUnknownElement=function(e){if(!W)return!0;if($t(e))return!1;if(e=e.toLowerCase(),null!=Kt[e])return Kt[e];var n=document.createElement(e);return e.indexOf("-")>-1?Kt[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:Kt[e]=/HTMLUnknownElement/.test(n.toString())},T(jt.options.directives,ba),T(jt.options.components,qa),jt.prototype.__patch__=W?ca:M,jt.prototype.$mount=function(e,n){return function(e,n,t){var r;return e.$el=n,e.$options.render||(e.$options.render=ve),nt(e,"beforeMount"),r=function(){e._update(e._render(),t)},new ft(e,r,M,{before:function(){e._isMounted&&!e._isDestroyed&&nt(e,"beforeUpdate")}},!0),t=!1,null==e.$vnode&&(e._isMounted=!0,nt(e,"mounted")),e}(this,e=e&&W?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},W&&setTimeout((function(){U.devtools&&ie&&ie.emit("init",jt)}),0);var Ma=jt;
/*!
  * vue-router v3.4.9
  * (c) 2020 Evan You
  * @license MIT
  */function Aa(e,n){for(var t in n)e[t]=n[t];return e}var Ra=/[!'()*]/g,_a=function(e){return"%"+e.charCodeAt(0).toString(16)},Ea=/%2C/g,Oa=function(e){return encodeURIComponent(e).replace(Ra,_a).replace(Ea,",")};function La(e){try{return decodeURIComponent(e)}catch(e){0}return e}var Fa=function(e){return null==e||"object"==typeof e?e:String(e)};function Ua(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=La(t.shift()),a=t.length>0?La(t.join("=")):null;void 0===n[r]?n[r]=a:Array.isArray(n[r])?n[r].push(a):n[r]=[n[r],a]})),n):n}function Ba(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return Oa(n);if(Array.isArray(t)){var r=[];return t.forEach((function(e){void 0!==e&&(null===e?r.push(Oa(n)):r.push(Oa(n)+"="+Oa(e)))})),r.join("&")}return Oa(n)+"="+Oa(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var Ga=/\/?$/;function Ja(e,n,t,r){var a=r&&r.options.stringifyQuery,i=n.query||{};try{i=Na(i)}catch(e){}var s={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:i,params:n.params||{},fullPath:Ha(n,a),matched:e?Wa(e):[]};return t&&(s.redirectedFrom=Ha(t,a)),Object.freeze(s)}function Na(e){if(Array.isArray(e))return e.map(Na);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=Na(e[t]);return n}return e}var Va=Ja(null,{path:"/"});function Wa(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function Ha(e,n){var t=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(t||"/")+(n||Ba)(r)+a}function $a(e,n){return n===Va?e===n:!!n&&(e.path&&n.path?e.path.replace(Ga,"")===n.path.replace(Ga,"")&&e.hash===n.hash&&Ka(e.query,n.query):!(!e.name||!n.name)&&(e.name===n.name&&e.hash===n.hash&&Ka(e.query,n.query)&&Ka(e.params,n.params)))}function Ka(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),r=Object.keys(n).sort();return t.length===r.length&&t.every((function(t,a){var i=e[t];if(r[a]!==t)return!1;var s=n[t];return null==i||null==s?i===s:"object"==typeof i&&"object"==typeof s?Ka(i,s):String(i)===String(s)}))}function Xa(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var r in t.instances){var a=t.instances[r],i=t.enteredCbs[r];if(a&&i){delete t.enteredCbs[r];for(var s=0;s<i.length;s++)a._isBeingDestroyed||i[s](a)}}}}var Ya={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,r=n.children,a=n.parent,i=n.data;i.routerView=!0;for(var s=a.$createElement,o=t.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),d=0,u=!1;a&&a._routerRoot!==a;){var p=a.$vnode?a.$vnode.data:{};p.routerView&&d++,p.keepAlive&&a._directInactive&&a._inactive&&(u=!0),a=a.$parent}if(i.routerViewDepth=d,u){var f=c[o],m=f&&f.component;return m?(f.configProps&&Za(m,i,f.route,f.configProps),s(m,i,r)):s()}var h=l.matched[d],g=h&&h.components[o];if(!h||!g)return c[o]=null,s();c[o]={component:g},i.registerRouteInstance=function(e,n){var t=h.instances[o];(n&&t!==e||!n&&t===e)&&(h.instances[o]=n)},(i.hook||(i.hook={})).prepatch=function(e,n){h.instances[o]=n.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==h.instances[o]&&(h.instances[o]=e.componentInstance),Xa(l)};var v=h.props&&h.props[o];return v&&(Aa(c[o],{route:l,configProps:v}),Za(g,i,l,v)),s(g,i,r)}};function Za(e,n,t,r){var a=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,r);if(a){a=n.props=Aa({},a);var i=n.attrs=n.attrs||{};for(var s in a)e.props&&s in e.props||(i[s]=a[s],delete a[s])}}function Qa(e,n,t){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return n+e;var a=n.split("/");t&&a[a.length-1]||a.pop();for(var i=e.replace(/^\//,"").split("/"),s=0;s<i.length;s++){var o=i[s];".."===o?a.pop():"."!==o&&a.push(o)}return""!==a[0]&&a.unshift(""),a.join("/")}function ei(e){return e.replace(/\/\//g,"/")}var ni=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ti=gi,ri=li,ai=function(e,n){return di(li(e,n),n)},ii=di,si=hi,oi=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function li(e,n){for(var t,r=[],a=0,i=0,s="",o=n&&n.delimiter||"/";null!=(t=oi.exec(e));){var l=t[0],c=t[1],d=t.index;if(s+=e.slice(i,d),i=d+l.length,c)s+=c[1];else{var u=e[i],p=t[2],f=t[3],m=t[4],h=t[5],g=t[6],v=t[7];s&&(r.push(s),s="");var y=null!=p&&null!=u&&u!==p,b="+"===g||"*"===g,x="?"===g||"*"===g,k=t[2]||o,w=m||h;r.push({name:f||a++,prefix:p||"",delimiter:k,optional:x,repeat:b,partial:y,asterisk:!!v,pattern:w?pi(w):v?".*":"[^"+ui(k)+"]+?"})}}return i<e.length&&(s+=e.substr(i)),s&&r.push(s),r}function ci(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function di(e,n){for(var t=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(t[r]=new RegExp("^(?:"+e[r].pattern+")$",mi(n)));return function(n,r){for(var a="",i=n||{},s=(r||{}).pretty?ci:encodeURIComponent,o=0;o<e.length;o++){var l=e[o];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ni(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=s(d[u]),!t[o].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(d),!t[o].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function ui(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function pi(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function fi(e,n){return e.keys=n,e}function mi(e){return e&&e.sensitive?"":"i"}function hi(e,n,t){ni(n)||(t=n||t,n=[]);for(var r=(t=t||{}).strict,a=!1!==t.end,i="",s=0;s<e.length;s++){var o=e[s];if("string"==typeof o)i+=ui(o);else{var l=ui(o.prefix),c="(?:"+o.pattern+")";n.push(o),o.repeat&&(c+="(?:"+l+c+")*"),i+=c=o.optional?o.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=ui(t.delimiter||"/"),u=i.slice(-d.length)===d;return r||(i=(u?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=a?"$":r&&u?"":"(?="+d+"|$)",fi(new RegExp("^"+i,mi(t)),n)}function gi(e,n,t){return ni(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return fi(e,n)}(e,n):ni(e)?function(e,n,t){for(var r=[],a=0;a<e.length;a++)r.push(gi(e[a],n,t).source);return fi(new RegExp("(?:"+r.join("|")+")",mi(t)),n)}(e,n,t):function(e,n,t){return hi(li(e,t),n,t)}(e,n,t)}ti.parse=ri,ti.compile=ai,ti.tokensToFunction=ii,ti.tokensToRegExp=si;var vi=Object.create(null);function yi(e,n,t){n=n||{};try{var r=vi[e]||(vi[e]=ti.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),r(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function bi(e,n,t,r){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var i=(a=Aa({},e)).params;return i&&"object"==typeof i&&(a.params=Aa({},i)),a}if(!a.path&&a.params&&n){(a=Aa({},a))._normalized=!0;var s=Aa(Aa({},n.params),a.params);if(n.name)a.name=n.name,a.params=s;else if(n.matched.length){var o=n.matched[n.matched.length-1].path;a.path=yi(o,s,n.path)}else 0;return a}var l=function(e){var n="",t="",r=e.indexOf("#");r>=0&&(n=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(t=e.slice(a+1),e=e.slice(0,a)),{path:e,query:t,hash:n}}(a.path||""),c=n&&n.path||"/",d=l.path?Qa(l.path,c,t||a.append):c,u=function(e,n,t){void 0===n&&(n={});var r,a=t||Ua;try{r=a(e||"")}catch(e){r={}}for(var i in n){var s=n[i];r[i]=Array.isArray(s)?s.map(Fa):Fa(s)}return r}(l.query,a.query,r&&r.options.parseQuery),p=a.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:d,query:u,hash:p}}var xi,ki=function(){},wi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,r=this.$route,a=t.resolve(this.to,r,this.append),i=a.location,s=a.route,o=a.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,u=null==c?"router-link-active":c,p=null==d?"router-link-exact-active":d,f=null==this.activeClass?u:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,h=s.redirectedFrom?Ja(null,bi(s.redirectedFrom),null,t):s;l[m]=$a(r,h),l[f]=this.exact?l[m]:function(e,n){return 0===e.path.replace(Ga,"/").indexOf(n.path.replace(Ga,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(r,h);var g=l[m]?this.ariaCurrentValue:null,v=function(e){zi(e)&&(n.replace?t.replace(i,ki):t.push(i,ki))},y={click:zi};Array.isArray(this.event)?this.event.forEach((function(e){y[e]=v})):y[this.event]=v;var b={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:s,navigate:v,isActive:l[f],isExactActive:l[m]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?e():e("span",{},x)}if("a"===this.tag)b.on=y,b.attrs={href:o,"aria-current":g};else{var k=function e(n){var t;if(n)for(var r=0;r<n.length;r++){if("a"===(t=n[r]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var w=k.data=Aa({},k.data);for(var z in w.on=w.on||{},w.on){var j=w.on[z];z in y&&(w.on[z]=Array.isArray(j)?j:[j])}for(var I in y)I in w.on?w.on[I].push(y[I]):w.on[I]=v;var S=k.data.attrs=Aa({},k.data.attrs);S.href=o,S["aria-current"]=g}else b.on=y}return e(this.tag,b,this.$slots.default)}};function zi(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var ji="undefined"!=typeof window;function Ii(e,n,t,r){var a=n||[],i=t||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(n,t,r,a,i,s){var o=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},d=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return ei(n.path+"/"+e)}(o,i,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var u={path:d,regex:Si(d,c),components:a.components||{default:a.component},instances:{},enteredCbs:{},name:l,parent:i,matchAs:s,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var i=s?ei(s+"/"+a.path):void 0;e(n,t,r,a,u,i)}));t[u.path]||(n.push(u.path),t[u.path]=u);if(void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],f=0;f<p.length;++f){0;var m={path:p[f],children:a.children};e(n,t,r,m,i,u.path||"/")}l&&(r[l]||(r[l]=u))}(a,i,s,e)}));for(var o=0,l=a.length;o<l;o++)"*"===a[o]&&(a.push(a.splice(o,1)[0]),l--,o--);return{pathList:a,pathMap:i,nameMap:s}}function Si(e,n){return ti(e,[],n)}function Pi(e,n){var t=Ii(e),r=t.pathList,a=t.pathMap,i=t.nameMap;function s(e,t,s){var o=bi(e,t,!1,n),c=o.name;if(c){var d=i[c];if(!d)return l(null,o);var u=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof o.params&&(o.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in o.params)&&u.indexOf(p)>-1&&(o.params[p]=t.params[p]);return o.path=yi(d.path,o.params),l(d,o,s)}if(o.path){o.params={};for(var f=0;f<r.length;f++){var m=r[f],h=a[m];if(Di(h.regex,o.path,o.params))return l(h,o,s)}}return l(null,o)}function o(e,t){var r=e.redirect,a="function"==typeof r?r(Ja(e,t,null,n)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var o=a,c=o.name,d=o.path,u=t.query,p=t.hash,f=t.params;if(u=o.hasOwnProperty("query")?o.query:u,p=o.hasOwnProperty("hash")?o.hash:p,f=o.hasOwnProperty("params")?o.params:f,c){i[c];return s({_normalized:!0,name:c,query:u,hash:p,params:f},void 0,t)}if(d){var m=function(e,n){return Qa(e,n.parent?n.parent.path:"/",!0)}(d,e);return s({_normalized:!0,path:yi(m,f),query:u,hash:p},void 0,t)}return l(null,t)}function l(e,t,r){return e&&e.redirect?o(e,r||t):e&&e.matchAs?function(e,n,t){var r=s({_normalized:!0,path:yi(t,n.params)});if(r){var a=r.matched,i=a[a.length-1];return n.params=r.params,l(i,n)}return l(null,n)}(0,t,e.matchAs):Ja(e,t,r,n)}return{match:s,addRoutes:function(e){Ii(e,r,a,i)}}}function Di(e,n,t){var r=n.match(e);if(!r)return!1;if(!t)return!0;for(var a=1,i=r.length;a<i;++a){var s=e.keys[a-1];s&&(t[s.name||"pathMatch"]="string"==typeof r[a]?La(r[a]):r[a])}return!0}var Ci=ji&&window.performance&&window.performance.now?window.performance:Date;function Ti(){return Ci.now().toFixed(3)}var qi=Ti();function Mi(){return qi}function Ai(e){return qi=e}var Ri=Object.create(null);function _i(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=Aa({},window.history.state);return t.key=Mi(),window.history.replaceState(t,"",n),window.addEventListener("popstate",Li),function(){window.removeEventListener("popstate",Li)}}function Ei(e,n,t,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var i=function(){var e=Mi();if(e)return Ri[e]}(),s=a.call(e,n,t,r?i:null);s&&("function"==typeof s.then?s.then((function(e){Ji(e,i)})).catch((function(e){0})):Ji(s,i))}))}}function Oi(){var e=Mi();e&&(Ri[e]={x:window.pageXOffset,y:window.pageYOffset})}function Li(e){Oi(),e.state&&e.state.key&&Ai(e.state.key)}function Fi(e){return Bi(e.x)||Bi(e.y)}function Ui(e){return{x:Bi(e.x)?e.x:window.pageXOffset,y:Bi(e.y)?e.y:window.pageYOffset}}function Bi(e){return"number"==typeof e}var Gi=/^#\d/;function Ji(e,n){var t,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=Gi.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var i=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-t.left-n.x,y:r.top-t.top-n.y}}(a,i={x:Bi((t=i).x)?t.x:0,y:Bi(t.y)?t.y:0})}else Fi(e)&&(n=Ui(e))}else r&&Fi(e)&&(n=Ui(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var Ni,Vi=ji&&((-1===(Ni=window.navigator.userAgent).indexOf("Android 2.")&&-1===Ni.indexOf("Android 4.0")||-1===Ni.indexOf("Mobile Safari")||-1!==Ni.indexOf("Chrome")||-1!==Ni.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Wi(e,n){Oi();var t=window.history;try{if(n){var r=Aa({},t.state);r.key=Mi(),t.replaceState(r,"",e)}else t.pushState({key:Ai(Ti())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function Hi(e){Wi(e,!0)}function $i(e,n,t){var r=function(a){a>=e.length?t():e[a]?n(e[a],(function(){r(a+1)})):r(a+1)};r(0)}var Ki={redirected:2,aborted:4,cancelled:8,duplicated:16};function Xi(e,n){return Zi(e,n,Ki.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Qi.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function Yi(e,n){return Zi(e,n,Ki.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function Zi(e,n,t,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=n,a.type=t,a}var Qi=["params","query","hash"];function es(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ns(e,n){return es(e)&&e._isRouter&&(null==n||e.type===n)}function ts(e){return function(n,t,r){var a=!1,i=0,s=null;rs(e,(function(e,n,t,o){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var l,c=ss((function(n){var a;((a=n).__esModule||is&&"Module"===a[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:xi.extend(n),t.components[o]=n,--i<=0&&r()})),d=ss((function(e){var n="Failed to resolve async component "+o+": "+e;s||(s=es(e)?e:new Error(n),r(s))}));try{l=e(c,d)}catch(e){d(e)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),a||r()}}function rs(e,n){return as(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function as(e){return Array.prototype.concat.apply([],e)}var is="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ss(e){var n=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!n)return n=!0,e.apply(this,t)}}var os=function(e,n){this.router=e,this.base=function(e){if(!e)if(ji){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=Va,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ls(e,n,t,r){var a=rs(e,(function(e,r,a,i){var s=function(e,n){"function"!=typeof e&&(e=xi.extend(e));return e.options[n]}(e,n);if(s)return Array.isArray(s)?s.map((function(e){return t(e,r,a,i)})):t(s,r,a,i)}));return as(r?a.reverse():a)}function cs(e,n){if(n)return function(){return e.apply(n,arguments)}}os.prototype.listen=function(e){this.cb=e},os.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},os.prototype.onError=function(e){this.errorCbs.push(e)},os.prototype.transitionTo=function(e,n,t){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var i=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),n&&n(r),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(r,i)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){t&&t(e),e&&!a.ready&&(ns(e,Ki.redirected)&&i===Va||(a.ready=!0,a.readyErrorCbs.forEach((function(n){n(e)}))))}))},os.prototype.confirmTransition=function(e,n,t){var r=this,a=this.current;this.pending=e;var i,s,o=function(e){!ns(e)&&es(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,c=a.matched.length-1;if($a(e,a)&&l===c&&e.matched[l]===a.matched[c])return this.ensureURL(),o(((s=Zi(i=a,e,Ki.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",s));var d=function(e,n){var t,r=Math.max(e.length,n.length);for(t=0;t<r&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),u=d.updated,p=d.deactivated,f=d.activated,m=[].concat(function(e){return ls(e,"beforeRouteLeave",cs,!0)}(p),this.router.beforeHooks,function(e){return ls(e,"beforeRouteUpdate",cs)}(u),f.map((function(e){return e.beforeEnter})),ts(f)),h=function(n,t){if(r.pending!==e)return o(Yi(a,e));try{n(e,a,(function(n){!1===n?(r.ensureURL(!0),o(function(e,n){return Zi(e,n,Ki.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(a,e))):es(n)?(r.ensureURL(!0),o(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(o(Xi(a,e)),"object"==typeof n&&n.replace?r.replace(n):r.push(n)):t(n)}))}catch(e){o(e)}};$i(m,h,(function(){$i(function(e){return ls(e,"beforeRouteEnter",(function(e,n,t,r){return function(e,n,t){return function(r,a,i){return e(r,a,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),i(e)}))}}(e,t,r)}))}(f).concat(r.router.resolveHooks),h,(function(){if(r.pending!==e)return o(Yi(a,e));r.pending=null,n(e),r.router.app&&r.router.app.$nextTick((function(){Xa(e)}))}))}))},os.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},os.prototype.setupListeners=function(){},os.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Va,this.pending=null};var ds=function(e){function n(n,t){e.call(this,n,t),this._startLocation=us(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,r=Vi&&t;r&&this.listeners.push(_i());var a=function(){var t=e.current,a=us(e.base);e.current===Va&&a===e._startLocation||e.transitionTo(a,(function(e){r&&Ei(n,e,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var r=this,a=this.current;this.transitionTo(e,(function(e){Wi(ei(r.base+e.fullPath)),Ei(r.router,e,a,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,a=this.current;this.transitionTo(e,(function(e){Hi(ei(r.base+e.fullPath)),Ei(r.router,e,a,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(us(this.base)!==this.current.fullPath){var n=ei(this.base+this.current.fullPath);e?Wi(n):Hi(n)}},n.prototype.getCurrentLocation=function(){return us(this.base)},n}(os);function us(e){var n=window.location.pathname;return e&&0===n.toLowerCase().indexOf(e.toLowerCase())&&(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var ps=function(e){function n(n,t,r){e.call(this,n,t),r&&function(e){var n=us(e);if(!/^\/#/.test(n))return window.location.replace(ei(e+"/#"+n)),!0}(this.base)||fs()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=Vi&&n;t&&this.listeners.push(_i());var r=function(){var n=e.current;fs()&&e.transitionTo(ms(),(function(r){t&&Ei(e.router,r,n,!0),Vi||vs(r.fullPath)}))},a=Vi?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},n.prototype.push=function(e,n,t){var r=this,a=this.current;this.transitionTo(e,(function(e){gs(e.fullPath),Ei(r.router,e,a,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,a=this.current;this.transitionTo(e,(function(e){vs(e.fullPath),Ei(r.router,e,a,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;ms()!==n&&(e?gs(n):vs(n))},n.prototype.getCurrentLocation=function(){return ms()},n}(os);function fs(){var e=ms();return"/"===e.charAt(0)||(vs("/"+e),!1)}function ms(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function hs(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function gs(e){Vi?Wi(hs(e)):window.location.hash=e}function vs(e){Vi?Hi(hs(e)):window.location.replace(hs(e))}var ys=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var e=n.current;n.index=t,n.updateRoute(r),n.router.afterHooks.forEach((function(n){n&&n(r,e)}))}),(function(e){ns(e,Ki.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(os),bs=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Pi(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!Vi&&!1!==e.fallback,this.fallback&&(n="hash"),ji||(n="abstract"),this.mode=n,n){case"history":this.history=new ds(this,e.base);break;case"hash":this.history=new ps(this,e.base,this.fallback);break;case"abstract":this.history=new ys(this,e.base);break;default:0}},xs={currentRoute:{configurable:!0}};function ks(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}bs.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},xs.currentRoute.get=function(){return this.history&&this.history.current},bs.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof ds||t instanceof ps){var r=function(e){t.setupListeners(),function(e){var r=t.current,a=n.options.scrollBehavior;Vi&&a&&"fullPath"in e&&Ei(n,e,r,!1)}(e)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},bs.prototype.beforeEach=function(e){return ks(this.beforeHooks,e)},bs.prototype.beforeResolve=function(e){return ks(this.resolveHooks,e)},bs.prototype.afterEach=function(e){return ks(this.afterHooks,e)},bs.prototype.onReady=function(e,n){this.history.onReady(e,n)},bs.prototype.onError=function(e){this.history.onError(e)},bs.prototype.push=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.push(e,n,t)}));this.history.push(e,n,t)},bs.prototype.replace=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.replace(e,n,t)}));this.history.replace(e,n,t)},bs.prototype.go=function(e){this.history.go(e)},bs.prototype.back=function(){this.go(-1)},bs.prototype.forward=function(){this.go(1)},bs.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},bs.prototype.resolve=function(e,n,t){var r=bi(e,n=n||this.history.current,t,this),a=this.match(r,n),i=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,n,t){var r="hash"===t?"#"+n:n;return e?ei(e+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:a}},bs.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Va&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(bs.prototype,xs),bs.install=function e(n){if(!e.installed||xi!==n){e.installed=!0,xi=n;var t=function(e){return void 0!==e},r=function(e,n){var r=e.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",Ya),n.component("RouterLink",wi);var a=n.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},bs.version="3.4.9",bs.isNavigationFailure=ns,bs.NavigationFailureType=Ki,ji&&window.Vue&&window.Vue.use(bs);var ws=bs;t(50),t(209),t(211),t(143),t(144),t(73),t(213),t(51);function zs(e){e.locales&&Object.keys(e.locales).forEach((function(n){e.locales[n].path=n})),Object.freeze(e)}t(190),t(147),t(30),t(192),t(72),t(42),t(62),t(89);function js(e){return(js="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Is=t(44),Ss={NotFound:function(){return t.e(11).then(t.bind(null,389))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,388))}},Ps={"v-15068276":function(){return t.e(12).then(t.bind(null,393))},"v-077f47b6":function(){return t.e(13).then(t.bind(null,394))},"v-509da3fa":function(){return t.e(6).then(t.bind(null,395))},"v-7099b3fc":function(){return t.e(14).then(t.bind(null,396))},"v-f094ee36":function(){return t.e(7).then(t.bind(null,397))},"v-53acc674":function(){return t.e(15).then(t.bind(null,398))},"v-237bf565":function(){return t.e(16).then(t.bind(null,399))},"v-668526c5":function(){return t.e(17).then(t.bind(null,400))},"v-c14010f6":function(){return t.e(18).then(t.bind(null,401))},"v-b712a076":function(){return t.e(19).then(t.bind(null,402))},"v-2a808976":function(){return t.e(20).then(t.bind(null,403))},"v-ddaeefb4":function(){return t.e(21).then(t.bind(null,404))},"v-1569bea6":function(){return t.e(8).then(t.bind(null,405))},"v-3982b6c6":function(){return t.e(22).then(t.bind(null,406))},"v-1f8a4b75":function(){return t.e(23).then(t.bind(null,407))},"v-1e4b4505":function(){return t.e(24).then(t.bind(null,408))},"v-474e933e":function(){return t.e(25).then(t.bind(null,409))},"v-524cc75f":function(){return t.e(26).then(t.bind(null,410))},"v-765c5bb6":function(){return t.e(27).then(t.bind(null,411))},"v-948a15f4":function(){return t.e(28).then(t.bind(null,412))},"v-55390b85":function(){return t.e(9).then(t.bind(null,413))},"v-14a8a366":function(){return t.e(29).then(t.bind(null,414))},"v-b00ffe36":function(){return t.e(30).then(t.bind(null,415))},"v-82e0499e":function(){return t.e(31).then(t.bind(null,416))},"v-60d2eb25":function(){return t.e(32).then(t.bind(null,417))},"v-2e3997e5":function(){return t.e(33).then(t.bind(null,418))},"v-001fe8e5":function(){return t.e(34).then(t.bind(null,419))},"v-4150d23d":function(){return t.e(35).then(t.bind(null,420))},"v-ac4c5bc6":function(){return t.e(36).then(t.bind(null,421))},"v-f2267476":function(){return t.e(37).then(t.bind(null,422))},"v-46860e26":function(){return t.e(38).then(t.bind(null,423))},"v-76877697":function(){return t.e(39).then(t.bind(null,424))}};function Ds(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var Cs=/-(\w)/g,Ts=Ds((function(e){return e.replace(Cs,(function(e,n){return n?n.toUpperCase():""}))})),qs=/\B([A-Z])/g,Ms=Ds((function(e){return e.replace(qs,"-$1").toLowerCase()})),As=Ds((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Rs(e,n){if(n)return e(n)?e(n):n.includes("-")?e(As(Ts(n))):e(As(n))||e(Ms(n))}var _s=Object.assign({},Ss,Ps),Es=function(e){return _s[e]},Os=function(e){return Ps[e]},Ls=function(e){return Ss[e]},Fs=function(e){return Ma.component(e)};function Us(e){return Rs(Os,e)}function Bs(e){return Rs(Ls,e)}function Gs(e){return Rs(Es,e)}function Js(e){return Rs(Fs,e)}function Ns(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return Promise.all(n.filter((function(e){return e})).map(function(){var e=Object(r.a)(regeneratorRuntime.mark((function e(n){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Js(n)||!Gs(n)){e.next=5;break}return e.next=3,Gs(n)();case 3:t=e.sent,Ma.component(n,t.default);case 5:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()))}function Vs(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}t(108),t(185);var Ws=t(102),Hs=t(177),$s=t.n(Hs),Ks={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(Ws.a)(e,1)[0]})).map((function(e){var n=Object(Ws.a)(e,2);n[0];return n[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map((function(e){var n="<meta";return Object.keys(e).forEach((function(t){n+=" ".concat(t,'="').concat(e[t],'"')})),n+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Ys(this.$canonicalUrl)}var n},mounted:function(){this.currentMetaTags=Object(Is.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=Zs(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return $s()([{name:"description",content:this.$description}],e,this.siteMeta,Qs)},updateCanonicalLink:function(){Xs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Ys(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Zs(null,this.currentMetaTags),Xs()}};function Xs(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function Ys(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function Zs(e,n){if(n&&Object(Is.a)(n).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var n=document.createElement("meta");return Object.keys(e).forEach((function(t){n.setAttribute(t,e[t])})),document.head.appendChild(n),n}))}function Qs(e){for(var n=0,t=["name","property","itemprop"];n<t.length;n++){var r=t[n];if(e.hasOwnProperty(r))return e[r]+r}return JSON.stringify(e)}t(178);var eo=t(69),no=t.n(eo),to={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:no()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,n=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return n.some((function(n){return n.hash===e.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,s=0;s<t.length;s++){var o=t[s],l=t[s+1],c=0===s&&0===r||r>=o.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),d=decodeURIComponent(this.$route.hash);if(c&&d!==decodeURIComponent(o.hash)){var u=o;if(i===a)for(var p=s+1;p<t.length;p++)if(d===decodeURIComponent(t[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(u.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ro=(t(90),t(70)),ao=t.n(ro),io={mounted:function(){var e=this;ao.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,n,t){e.path===n.path||Ma.component(e.name)||ao.a.start(),t()})),this.$router.afterEach((function(){ao.a.done(),e.isSidebarOpen=!1}))}},so=(t(100),t(311),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}),oo=function(e){return"IMG"===e.tagName},lo=function(e){return e&&1===e.nodeType},co=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},uo=function(e){try{return Array.isArray(e)?e.filter(oo):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(oo):lo(e)?[e].filter(oo):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(oo):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},po=function(e){var n=document.createElement("div");return n.classList.add("medium-zoom-overlay"),n.style.background=e,n},fo=function(e){var n=e.getBoundingClientRect(),t=n.top,r=n.left,a=n.width,i=n.height,s=e.cloneNode(),o=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return s.removeAttribute("id"),s.style.position="absolute",s.style.top=t+o+"px",s.style.left=r+l+"px",s.style.width=a+"px",s.style.height=i+"px",s.style.transform="",s},mo=function(e,n){var t=so({bubbles:!1,cancelable:!1,detail:void 0},n);if("function"==typeof window.CustomEvent)return new CustomEvent(e,t);var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),r};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===t&&r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var ho=function e(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(e){function n(){}e(n,n)},a=function(e){var n=e.target;n!==I?-1!==b.indexOf(n)&&h({target:n}):m()},i=function(){if(!k&&j.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(w-e)>z.scrollOffset&&setTimeout(m,150)}},s=function(e){var n=e.key||e.keyCode;"Escape"!==n&&"Esc"!==n&&27!==n||m()},o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e;if(e.background&&(I.style.background=e.background),e.container&&e.container instanceof Object&&(n.container=so({},z.container,e.container)),e.template){var t=lo(e.template)?e.template:document.querySelector(e.template);n.template=t}return z=so({},z,n),b.forEach((function(e){e.dispatchEvent(mo("medium-zoom:update",{detail:{zoom:S}}))})),S},l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(so({},z,n))},c=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];var r=n.reduce((function(e,n){return[].concat(e,uo(n))}),[]);return r.filter((function(e){return-1===b.indexOf(e)})).forEach((function(e){b.push(e),e.classList.add("medium-zoom-image")})),x.forEach((function(e){var n=e.type,t=e.listener,a=e.options;r.forEach((function(e){e.addEventListener(n,t,a)}))})),S},d=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];j.zoomed&&m();var r=n.length>0?n.reduce((function(e,n){return[].concat(e,uo(n))}),[]):b;return r.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(mo("medium-zoom:detach",{detail:{zoom:S}}))})),b=b.filter((function(e){return-1===r.indexOf(e)})),S},u=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.addEventListener("medium-zoom:"+e,n,t)})),x.push({type:"medium-zoom:"+e,listener:n,options:t}),S},p=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(r){r.removeEventListener("medium-zoom:"+e,n,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+e&&t.listener.toString()===n.toString())})),S},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target,t=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},n=void 0,t=void 0;if(z.container)if(z.container instanceof Object)n=(e=so({},e,z.container)).width-e.left-e.right-2*z.margin,t=e.height-e.top-e.bottom-2*z.margin;else{var r=(lo(z.container)?z.container:document.querySelector(z.container)).getBoundingClientRect(),a=r.width,i=r.height,s=r.left,o=r.top;e=so({},e,{width:a,height:i,left:s,top:o})}n=n||e.width-2*z.margin,t=t||e.height-2*z.margin;var l=j.zoomedHd||j.original,c=co(l)?n:l.naturalWidth||n,d=co(l)?t:l.naturalHeight||t,u=l.getBoundingClientRect(),p=u.top,f=u.left,m=u.width,h=u.height,g=Math.min(c,n)/m,v=Math.min(d,t)/h,y=Math.min(g,v),b="scale("+y+") translate3d("+((n-m)/2-f+z.margin+e.left)/y+"px, "+((t-h)/2-p+z.margin+e.top)/y+"px, 0)";j.zoomed.style.transform=b,j.zoomedHd&&(j.zoomedHd.style.transform=b)};return new r((function(e){if(n&&-1===b.indexOf(n))e(S);else{if(j.zoomed)e(S);else{if(n)j.original=n;else{if(!(b.length>0))return void e(S);var r=b;j.original=r[0]}if(j.original.dispatchEvent(mo("medium-zoom:open",{detail:{zoom:S}})),w=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,k=!0,j.zoomed=fo(j.original),document.body.appendChild(I),z.template){var a=lo(z.template)?z.template:document.querySelector(z.template);j.template=document.createElement("div"),j.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(j.template)}if(document.body.appendChild(j.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),j.original.classList.add("medium-zoom-image--hidden"),j.zoomed.classList.add("medium-zoom-image--opened"),j.zoomed.addEventListener("click",m),j.zoomed.addEventListener("transitionend",(function n(){k=!1,j.zoomed.removeEventListener("transitionend",n),j.original.dispatchEvent(mo("medium-zoom:opened",{detail:{zoom:S}})),e(S)})),j.original.getAttribute("data-zoom-src")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("srcset"),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.src=j.zoomed.getAttribute("data-zoom-src"),j.zoomedHd.onerror=function(){clearInterval(i),console.warn("Unable to reach the zoom image target "+j.zoomedHd.src),j.zoomedHd=null,t()};var i=setInterval((function(){j.zoomedHd.complete&&(clearInterval(i),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",m),document.body.appendChild(j.zoomedHd),t())}),10)}else if(j.original.hasAttribute("srcset")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.removeAttribute("loading");var s=j.zoomedHd.addEventListener("load",(function(){j.zoomedHd.removeEventListener("load",s),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",m),document.body.appendChild(j.zoomedHd),t()}))}else t()}}}))},m=function(){return new r((function(e){if(!k&&j.original){k=!0,document.body.classList.remove("medium-zoom--opened"),j.zoomed.style.transform="",j.zoomedHd&&(j.zoomedHd.style.transform=""),j.template&&(j.template.style.transition="opacity 150ms",j.template.style.opacity=0),j.original.dispatchEvent(mo("medium-zoom:close",{detail:{zoom:S}})),j.zoomed.addEventListener("transitionend",(function n(){j.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(j.zoomed),j.zoomedHd&&document.body.removeChild(j.zoomedHd),document.body.removeChild(I),j.zoomed.classList.remove("medium-zoom-image--opened"),j.template&&document.body.removeChild(j.template),k=!1,j.zoomed.removeEventListener("transitionend",n),j.original.dispatchEvent(mo("medium-zoom:closed",{detail:{zoom:S}})),j.original=null,j.zoomed=null,j.zoomedHd=null,j.template=null,e(S)}))}else e(S)}))},h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.target;return j.original?m():f({target:n})},g=function(){return z},v=function(){return b},y=function(){return j.original},b=[],x=[],k=!1,w=0,z=t,j={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(n)?z=n:(n||"string"==typeof n)&&c(n),z=so({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},z);var I=po(z.background);document.addEventListener("click",a),document.addEventListener("keyup",s),document.addEventListener("scroll",i),window.addEventListener("resize",m);var S={open:f,close:m,toggle:h,update:o,clone:l,attach:c,detach:d,on:u,off:p,getOptions:g,getImages:v,getZoomedImage:y};return S},go={data:function(){return{zoom:null}},mounted:function(){this.updateZoom()},updated:function(){this.updateZoom()},methods:{updateZoom:function(){var e=this;setTimeout((function(){e.zoom&&e.zoom.detach(),e.zoom=ho(".theme-default-content :not(a) > img",{})}),1e3)}}},vo=t(120),yo=(t(195),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null},copyToClipboard:function(e){var n=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){n.setSuccessTransitions()}),(function(){}));else{var t=document.createElement("textarea");document.body.appendChild(t),t.value=this.code,t.select(),document.execCommand("Copy"),t.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var n=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(n.r,", ").concat(n.g,", ").concat(n.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),bo=(t(315),t(17)),xo=Object(bo.a)(yo,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"code-copy"},[t("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[t("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),t("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),t("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,ko=(t(316),[Ks,to,io,go,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll('div[class*="language-"] pre').forEach((function(e){if(!e.classList.contains("code-copy-added")){var n=new(Ma.extend(xo));n.options=Object(vo.a)({},{align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1}),n.code=e.innerText,n.parent=e,n.$mount(),e.classList.add("code-copy-added"),e.appendChild(n.$el)}}))}),100)}}}]),wo={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Vs("layout",e),Ma.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},zo=Object(bo.a)(wo,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){var r;switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),(r=e[n]).push.apply(r,Object(Is.a)(t));break;default:throw new Error("Unknown option name.")}}(zo,"mixins",ko);var jo=[{name:"v-15068276",path:"/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-15068276").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-077f47b6",path:"/_Footer.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-077f47b6").then(t)}},{name:"v-509da3fa",path:"/about/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-509da3fa").then(t)}},{path:"/about/index.html",redirect:"/about/"},{name:"v-7099b3fc",path:"/intro/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-7099b3fc").then(t)}},{path:"/intro/index.html",redirect:"/intro/"},{name:"v-f094ee36",path:"/intro/architecture.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-f094ee36").then(t)}},{name:"v-53acc674",path:"/operation/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-53acc674").then(t)}},{path:"/operation/index.html",redirect:"/operation/"},{name:"v-237bf565",path:"/operation/client-config.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-237bf565").then(t)}},{name:"v-668526c5",path:"/operation/market-config.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-668526c5").then(t)}},{name:"v-c14010f6",path:"/operation/migrate-v1-to-v2.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-c14010f6").then(t)}},{name:"v-b712a076",path:"/operation/prep-datasets.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-b712a076").then(t)}},{name:"v-2a808976",path:"/questions.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-2a808976").then(t)}},{name:"v-ddaeefb4",path:"/zh/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-ddaeefb4").then(t)}},{path:"/zh/index.html",redirect:"/zh/"},{name:"v-1569bea6",path:"/zh/about/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-1569bea6").then(t)}},{path:"/zh/about/index.html",redirect:"/zh/about/"},{name:"v-3982b6c6",path:"/zh/developer/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-3982b6c6").then(t)}},{path:"/zh/developer/index.html",redirect:"/zh/developer/"},{name:"v-1f8a4b75",path:"/zh/developer/batch-deals.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-1f8a4b75").then(t)}},{name:"v-1e4b4505",path:"/zh/developer/boost-mk-1-2.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-1e4b4505").then(t)}},{name:"v-474e933e",path:"/zh/developer/market-api-v0.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-474e933e").then(t)}},{name:"v-524cc75f",path:"/zh/developer/market-api-v1.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-524cc75f").then(t)}},{name:"v-765c5bb6",path:"/zh/developer/understand-boost.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-765c5bb6").then(t)}},{name:"v-948a15f4",path:"/zh/intro/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-948a15f4").then(t)}},{path:"/zh/intro/index.html",redirect:"/zh/intro/"},{name:"v-55390b85",path:"/zh/intro/architecture.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-55390b85").then(t)}},{name:"v-14a8a366",path:"/zh/operation/",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-14a8a366").then(t)}},{path:"/zh/operation/index.html",redirect:"/zh/operation/"},{name:"v-b00ffe36",path:"/zh/operation/batch-deal.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-b00ffe36").then(t)}},{name:"v-82e0499e",path:"/zh/operation/deal-filter.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-82e0499e").then(t)}},{name:"v-60d2eb25",path:"/zh/operation/extend-claim.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-60d2eb25").then(t)}},{name:"v-2e3997e5",path:"/zh/operation/http-retrieval.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-2e3997e5").then(t)}},{name:"v-001fe8e5",path:"/zh/operation/market-client-config.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-001fe8e5").then(t)}},{name:"v-4150d23d",path:"/zh/operation/market-config.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-4150d23d").then(t)}},{name:"v-ac4c5bc6",path:"/zh/operation/metrics.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-ac4c5bc6").then(t)}},{name:"v-f2267476",path:"/zh/operation/migrate-offline-deal.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-f2267476").then(t)}},{name:"v-46860e26",path:"/zh/operation/prep-datasets.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-46860e26").then(t)}},{name:"v-76877697",path:"/zh/operation/rebuild-signature.html",component:zo,beforeEnter:function(e,n,t){Ns("Layout","v-76877697").then(t)}},{path:"*",component:zo}],Io={title:"Droplet",description:"Droplet, formerly known as Venus Deal Service, is THE Filecoin storage deal solution.",base:"/",headTags:[["link",{rel:"icon",href:"/assets/droplet-icon.png"}],["script",{async:!0,src:"https://www.googletagmanager.com/gtag/js?id=G-GRVZ8072DQ"}],["script",{},["window.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'G-GRVZ8072DQ');"]]],pages:[{title:"Home",frontmatter:{home:!0,heroImage:"/assets/droplet-hero.jpg",actionText:"Get Started →",actionLink:"/intro/",footer:"MIT Apache dual Licensed"},regularPath:"/",relativePath:"README.md",key:"v-15068276",path:"/",lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:null,content:"Storage & Retrieval Infra\n\nFilecoin storage and retrieval infrastructure for enterprise SPs with flexible deployment scheme\n\n\nMulti SP Support\n\nSupport for providing market service to multiple nodes saving SPs CAPex and OPex\n\n\nLight Weight Client\n\nPropose storage deals without the hustle of deploying your own local daemon service",normalizedContent:"storage & retrieval infra\n\nfilecoin storage and retrieval infrastructure for enterprise sps with flexible deployment scheme\n\n\nmulti sp support\n\nsupport for providing market service to multiple nodes saving sps capex and opex\n\n\nlight weight client\n\npropose storage deals without the hustle of deploying your own local daemon service",charsets:{}},{frontmatter:{},regularPath:"/_Footer.html",relativePath:"_Footer.md",key:"v-077f47b6",path:"/_Footer.html",lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:null,content:"See something missing? Have tips to share? File an issue, and we'll follow up as soon as possible. (If you have write permission in this repo, feel free to edit directly.)",normalizedContent:"see something missing? have tips to share? file an issue, and we'll follow up as soon as possible. (if you have write permission in this repo, feel free to edit directly.)",charsets:{}},{frontmatter:{},regularPath:"/about/",relativePath:"about/README.md",key:"v-509da3fa",path:"/about/",headers:[{level:2,title:"Mission, Vision, Value",slug:"mission-vision-value",normalizedTitle:"mission, vision, value",charIndex:2},{level:2,title:"Contacts",slug:"contacts",normalizedTitle:"contacts",charIndex:192},{level:2,title:"Resources",slug:"resources",normalizedTitle:"resources",charIndex:278}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Mission, Vision, Value Contacts Resources",content:"# Mission, Vision, Value\n\n * ❗️Mission: push ecosystem forward by driving Filcoin infrastructure\n * 🌏 Vision: democratize Filecoin ecosystem participation\n * ☯️ Value: Open and trustless\n\n\n# Contacts\n\n * Ask us any questions: #fil-venus, #fil-venus-cn, venus@ipfsforce.com\n\n\n# Resources\n\n * venus-docs: venus.filecoin.io\n * VenusHub: venushub.io\n * Github: droplet, venus, damocles\n * Social Media: Twitter, Wechat\n * Security audit report: link",normalizedContent:"# mission, vision, value\n\n * ❗️mission: push ecosystem forward by driving filcoin infrastructure\n * 🌏 vision: democratize filecoin ecosystem participation\n * ☯️ value: open and trustless\n\n\n# contacts\n\n * ask us any questions: #fil-venus, #fil-venus-cn, venus@ipfsforce.com\n\n\n# resources\n\n * venus-docs: venus.filecoin.io\n * venushub: venushub.io\n * github: droplet, venus, damocles\n * social media: twitter, wechat\n * security audit report: link",charsets:{}},{title:"What is Droplet?",frontmatter:{},regularPath:"/intro/",relativePath:"intro/README.md",key:"v-7099b3fc",path:"/intro/",headers:[{level:2,title:"What is Droplet?",slug:"what-is-droplet",normalizedTitle:"what is droplet?",charIndex:2},{level:2,title:"Features",slug:"features",normalizedTitle:"features",charIndex:217},{level:3,title:"Multi minerID support",slug:"multi-minerid-support",normalizedTitle:"multi minerid support",charIndex:230},{level:3,title:"Multiple data transfer protocol support",slug:"multiple-data-transfer-protocol-support",normalizedTitle:"multiple data transfer protocol support",charIndex:467},{level:3,title:"Light weight storage client",slug:"light-weight-storage-client",normalizedTitle:"light weight storage client",charIndex:676},{level:3,title:"Compatibility with other implementation",slug:"compatibility-with-other-implementation",normalizedTitle:"compatibility with other implementation",charIndex:955},{level:3,title:"Developer friendly",slug:"developer-friendly",normalizedTitle:"developer friendly",charIndex:1227}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"What is Droplet? Features Multi minerID support Multiple data transfer protocol support Light weight storage client Compatibility with other implementation Developer friendly",content:"# What is Droplet?\n\ndroplet is the product within a Venus storage system to handle deal-making and data retrieval. It grants storage providers a seamless deal-taking experience while allowing maximum flexibility.\n\n\n# Features\n\n\n# Multi minerID support\n\nOne of the most distinct features that droplet has is that the support of storage deal and retrieval functionalities for multiple minerIDs, saving both capEx and opEx to support your sroage providing business.\n\n\n# Multiple data transfer protocol support\n\nThe transfer of deal data from the chain service to storage provider will not only support graphsync, OSS but also other popular data transfer protocols like HTTP.\n\n\n# Light weight storage client\n\ndroplet comes with a light weight client that can be used to make storage deals without the need of deploying a fully synced local node. A storage client can go on making storage deals once the client software connects to a Venus Sophon service.\n\n\n# Compatibility with other implementation\n\nAs a storage provider using Venus storage system, you will enjoy complete Compatibility with other implementations, which means you have the flexibility to take deals from other storage clients or deal distribution system too.\n\n\n# Developer friendly\n\nAPIs and SDKs will be opened up to allow storage providers with programming background to further customize their deal-taking workflow.",normalizedContent:"# what is droplet?\n\ndroplet is the product within a venus storage system to handle deal-making and data retrieval. it grants storage providers a seamless deal-taking experience while allowing maximum flexibility.\n\n\n# features\n\n\n# multi minerid support\n\none of the most distinct features that droplet has is that the support of storage deal and retrieval functionalities for multiple minerids, saving both capex and opex to support your sroage providing business.\n\n\n# multiple data transfer protocol support\n\nthe transfer of deal data from the chain service to storage provider will not only support graphsync, oss but also other popular data transfer protocols like http.\n\n\n# light weight storage client\n\ndroplet comes with a light weight client that can be used to make storage deals without the need of deploying a fully synced local node. a storage client can go on making storage deals once the client software connects to a venus sophon service.\n\n\n# compatibility with other implementation\n\nas a storage provider using venus storage system, you will enjoy complete compatibility with other implementations, which means you have the flexibility to take deals from other storage clients or deal distribution system too.\n\n\n# developer friendly\n\napis and sdks will be opened up to allow storage providers with programming background to further customize their deal-taking workflow.",charsets:{}},{title:"Background",frontmatter:{},regularPath:"/intro/architecture.html",relativePath:"intro/architecture.md",key:"v-f094ee36",path:"/intro/architecture.html",headers:[{level:2,title:"Background",slug:"background",normalizedTitle:"background",charIndex:2},{level:2,title:"Architecture",slug:"architecture",normalizedTitle:"architecture",charIndex:680},{level:3,title:"deal flow",slug:"deal-flow",normalizedTitle:"deal flow",charIndex:2187},{level:2,title:"Roadmap",slug:"roadmap",normalizedTitle:"roadmap",charIndex:2562}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Background Architecture deal flow Roadmap",content:"# Background\n\nAs the re-branding of filecoin terminology spearheaded by FIP0018 settled, consensus has been reached across communities (developers, providers, ecosystem partners and etc) to push for taking on more storage deals to improve the public perception on the fact that most of the network storage are still committed capacities (CCs). Given the above sentiment, design and implementation of droplet product has been put into the spot light. A clear long-term roadmap is due for Venus community to discuss and iterate on, also as a means for better communications with filecoin ecosystem in general. As Venus team is picking up the reminiscences of the Filecoin Component Architecture, emergent ways of how market could facilitate the dynamics between storage providers and storage clients are constatntly being intergrated into the long-term vision of Venus filecoin.\n\n\n# Architecture\n\nOne of the most distinctive features of Venus is easing storage providers into the Filecoin network by relieving the overhead coming with interacting with the Filecoin main chain through the usage of Venus chain service. Chain interactions including but not limited to chain synchronization, message sending and consolidated block producing can all be handled by a Venus Sophon service that may be shared among a group of storage providers. Taking another step further in this architecture powered by Venus Sophon service, droplet can be deployed as a component of the chain service to mediate the deal-making process on behalf of the storage provider according to its own configurations and settings. With integration of damocles into the mix, a Venus storage provider can enjoy a deal-taking experience that is close to sealing a CC sector.\n\n\n\nThe above illustration shows a high-level overview of droplet architecture (when deployed as a chain service component). On the left, we have a column of different types of storage clients like the lotus client, droplet light weight client and platforms like Estuary and Filswan. In the middle, we have Venus chain service with droplet at its core along with other components. On the right, we have storage providers using the chain service.\n\n\n# deal flow\n\nA typical storage deal flow would go from clients initiating a deal to droplet, storage providers agree to take the deal, deal data got transferred from the client to the pieceStore sub module of droplet and lastly the deal data got transferred from chain service to storage providers through different types of data transfer protocols like OSS and graphsync.\n\n\n# Roadmap\n\nDetails of the roadmap for droplet can be found here. As of the date we publish this document, droplet is now at phase 2 platform model.",normalizedContent:"# background\n\nas the re-branding of filecoin terminology spearheaded by fip0018 settled, consensus has been reached across communities (developers, providers, ecosystem partners and etc) to push for taking on more storage deals to improve the public perception on the fact that most of the network storage are still committed capacities (ccs). given the above sentiment, design and implementation of droplet product has been put into the spot light. a clear long-term roadmap is due for venus community to discuss and iterate on, also as a means for better communications with filecoin ecosystem in general. as venus team is picking up the reminiscences of the filecoin component architecture, emergent ways of how market could facilitate the dynamics between storage providers and storage clients are constatntly being intergrated into the long-term vision of venus filecoin.\n\n\n# architecture\n\none of the most distinctive features of venus is easing storage providers into the filecoin network by relieving the overhead coming with interacting with the filecoin main chain through the usage of venus chain service. chain interactions including but not limited to chain synchronization, message sending and consolidated block producing can all be handled by a venus sophon service that may be shared among a group of storage providers. taking another step further in this architecture powered by venus sophon service, droplet can be deployed as a component of the chain service to mediate the deal-making process on behalf of the storage provider according to its own configurations and settings. with integration of damocles into the mix, a venus storage provider can enjoy a deal-taking experience that is close to sealing a cc sector.\n\n\n\nthe above illustration shows a high-level overview of droplet architecture (when deployed as a chain service component). on the left, we have a column of different types of storage clients like the lotus client, droplet light weight client and platforms like estuary and filswan. in the middle, we have venus chain service with droplet at its core along with other components. on the right, we have storage providers using the chain service.\n\n\n# deal flow\n\na typical storage deal flow would go from clients initiating a deal to droplet, storage providers agree to take the deal, deal data got transferred from the client to the piecestore sub module of droplet and lastly the deal data got transferred from chain service to storage providers through different types of data transfer protocols like oss and graphsync.\n\n\n# roadmap\n\ndetails of the roadmap for droplet can be found here. as of the date we publish this document, droplet is now at phase 2 platform model.",charsets:{}},{title:"Getting Started",frontmatter:{},regularPath:"/operation/",relativePath:"operation/README.md",key:"v-53acc674",path:"/operation/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:22},{level:2,title:"Configure and Start droplet",slug:"configure-and-start-droplet",normalizedTitle:"configure and start droplet",charIndex:3673},{level:3,title:"Initialization",slug:"initialization",normalizedTitle:"initialization",charIndex:3705},{level:3,title:"General Configuration",slug:"general-configuration",normalizedTitle:"general configuration",charIndex:7944},{level:2,title:"droplet proxy libp2p listener",slug:"droplet-proxy-libp2p-listener",normalizedTitle:"droplet proxy libp2p listener",charIndex:11876},{level:2,title:"Storage Ask",slug:"storage-ask",normalizedTitle:"storage ask",charIndex:13039},{level:3,title:"Storage Deal Ask",slug:"storage-deal-ask",normalizedTitle:"storage deal ask",charIndex:13055},{level:3,title:"Retrieve Deal",slug:"retrieve-deal",normalizedTitle:"retrieve deal",charIndex:13473},{level:2,title:"Configure and Start droplet-client",slug:"configure-and-start-droplet-client",normalizedTitle:"configure and start droplet-client",charIndex:13964},{level:2,title:"Storage Deal",slug:"storage-deal",normalizedTitle:"storage deal",charIndex:13055},{level:3,title:"Import the data to be stored",slug:"import-the-data-to-be-stored",normalizedTitle:"import the data to be stored",charIndex:15673},{level:3,title:"Choose Storage Provider",slug:"choose-storage-provider",normalizedTitle:"choose storage provider",charIndex:15845},{level:3,title:"Initiate Storage Deal",slug:"initiate-storage-deal",normalizedTitle:"initiate storage deal",charIndex:16091},{level:3,title:"Offline Storage Deal",slug:"offline-storage-deal",normalizedTitle:"offline storage deal",charIndex:17432},{level:2,title:"Submit Data Retrieval Request",slug:"submit-data-retrieval-request",normalizedTitle:"submit data retrieval request",charIndex:20775}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Overview Configure and Start droplet Initialization General Configuration droplet proxy libp2p listener Storage Ask Storage Deal Ask Retrieve Deal Configure and Start droplet-client Storage Deal Import the data to be stored Choose Storage Provider Initiate Storage Deal Offline Storage Deal Submit Data Retrieval Request",content:'# Getting Started\n\n\n# Overview\n\ndroplet is the market service component in the venus system, which consists of two parts: droplet and droplet-client, commonly understood as market server and client.\n\n * droplet serves storage providers;\n\n * droplet-client serves users who have retrieval or storage demands.\n\nThe market service of droplet is divided into storage market and retrieval market, and its general process is as follows:\n\nStorage process:\n\nSTAGES                                     STEPS                                                          INSTRUCTIONS\nStart droplet and droplet-client           1. Configure and start [droplet](#Configure and Start          \n                                           droplet)\n                                           2. Configure and start [droplet-client](#Configure and Start\n                                           droplet-client)\nProxy libp2p listener service for miners   via droplet [libp2p listener service for miners](#droplet      \n                                           proxy libp2p listener)\nPost storage ask for miners                via droplet ask                                                \nSpecify miner to propose deal              1. Through droplet-client [import the data to be               After the deal is issued, it takes a certain amount of time\n                                           stored](#import the data to be stored)                         to execute the deal transaction process. After the deal is\n                                           2. According to the demand [select the appropriate storage     confirmed, the storage provider seal the data in the deal\n                                           provider](#select the storage provider) < br> 3. [Initiate     and submits the certificate. droplet will be responsible for\n                                           storage deal](#Initiate storage deal)                          tracking order status.\n\nRetrieval process:\n\nSTAGES                                    STEPS                                                          INSTRUCTIONS\nStart droplet and droplet-client          1. Configure and start [droplet](#Configure and Start          \n                                          droplet)\n                                          2. Configure and start [droplet-client](#Configure and Start\n                                          droplet-client)\nSet retrieval price and payment address   Storage provider through droplet [set search pending order]    \n                                          (#retrieve pending order)\nSubmit data retrieval request             [Submit data retrieval request] (#submit data retrieval        After submitting the data retrieval request, the search\n                                          request)                                                       communication process will start, and the data will be\n                                                                                                         returned in batches according to the agreement and fees will\n                                                                                                         be transferred to the receiving address.\n\n💁 Whether it is a storage deal or a retrieval request, the execution process of the protocol is automatic, and messages will be sent to the chain during the period, so it is necessary to ensure that the messages of both parties to the transaction can be signed normally. There is a necessary fil transfer in the transaction process, and the relevant address needs to have sufficient balance, otherwise the transaction will not be completed.\n\n\n# Configure and Start droplet\n\n\n# Initialization\n\n * On-chain mode\n\nAs a component of the chain service, it cooperates with sophon-auth, venus, sophon-messager, sophon-gateway and other components to provide market services for the miner registered to the chain service.\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--auth-url=http://<ip>:<port>\\\n--gateway-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<shared-token> \\\n--signer-type="gateway"\n\n\nGenerated droplet service component configuration reference:\n\n[Node]\n   Url = "/ip4/192.168.200.151/tcp/3455"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Messager]\n   Url = "/ip4/127.0.0.1/tcp/39812"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Signer]\n   Type = "gateway"\n   Url = "/ip4/127.0.0.1/tcp/45132"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[AuthNode]\n   Url = "http://127.0.0.1:8989"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n\n💁 *shared-token is used to authentication when accessing API of other chain service components. token is managed by sophon-auth and requires admin permission. For details, please refer to sophon-auth token *\n\n * Off-chain mode\n\nTo start with lotus fullnode:\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of lotus> \\\n--signer-type="lotusnode"\n\n\nGenerated droplet service component configuration reference:\n\n[Node]\n   Url = "/ip4/127.0.0.1/tcp/1234"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIiwiYWRtaW4iXX0.Ne3JsfHHhN6BgDtdsvLYfUaRC3eJPH_7KrBsMRBdplc"\n\n[Messager]\n   Url = ""\n   Token = ""\n\n[Signer]\n   Type = "lotusnode"\n   Url = "/ip4/127.0.0.1/tcp/1234"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIiwiYWRtaW4iXX0.Ne3JsfHHhN6BgDtdsvLYfUaRC3eJPH_7KrBsMRBdplc"\n\n[AuthNode]\n   Url = ""\n   Token = ""\n\n\nWhen using chain service and venus-wallet:\n\n./droplet run \\\n--auth-url=http://<ip>:<port>\\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of write-authority> \\\n--signer-url=/ip4/<ip>/tcp/<port> \\\n--signer-token=<token of venus-wallet> \\\n--signer-type="wallet"\n\n\nGenerated droplet service component configuration reference:\n\n[Node]\n   Url = "/ip4/192.168.200.151/tcp/3455"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Messager]\n   Url = "/ip4/127.0.0.1/tcp/39812"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Signer]\n   Type = "wallet"\n   Url = "/ip4/127.0.0.1/tcp/5678/http"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIl19.IVBGlmRW__6g4QGbb1D1Jtr1oy\n   MM6Sqs1tj1GDGR5EQ"\n\n[AuthNode]\n   Url = "http://127.0.0.1:8989"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n\n💁 If signature uses an independent venus-wallet component, then configure it as the listening address of venus-wallet and a token with signing permission.\n\nTo generate venus-wallet token with signing permission:\n\n$ ./venus-wallet auth api-info --perm=sign\n> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIl19.Vr-OP7RNOozf6XXZuahpk-ZGA7IDa5NJjmU9L_znJ-0:/ip4/127.0/567/tcp\n\n\n💁 **After the initialization command is successfully executed, droplet repo will be generated, and it needs to be configured according to the actual environment when using it. **\n\nConfiguration options will be generated when droplet starts for the first time. The default directory is: ~/.droplet/config.toml. Next, we will introduce common configuration options.\n\n\n# General Configuration\n\nFor the description of configuration items of venus-wallet, please refer to droplet configuration, here we explain the more commonly used configuration items.\n\ntips: After modifying the configuration file, you need to restart the droplet service:\n\n$ nohup ./droplet run > droplet.log 2>&1 &\n\n\n> After the repo has been generated, the parameters required for initialization are written into the configuration file, so there is no need to add them for subsequent startups.\n\n# Chain service configuration\n\n * Including: chain synchronization node, message node, signature node and authentication node.\n\n[Node]\n   Url = "/ip4/192.168.200.21/tcp/3453"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[Messager]\n   Url = "/ip4/192.168.200.21/tcp/39812"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[Signer]\n   Type = "gateway"\n   Url = "/ip4/192.168.200.21/tcp/45132"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[AuthNode]\n   Url = "http://192.168.200.21:8989"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n\n\n# API listener configuration\n\nThe default listening port of droplet is 127.0.0.1:41235, in order to support access requests from different networks, the listening address of API needs to be modified:\n\n[API]\nListenAddress = "/ip4/0.0.0.0/tcp/41235"\n\n\n# PublishMsgPeriod configuration\n\nWhen droplet receives a deal from droplet-client, it will not publish the ClientDealProposal message immediately, but will wait for a certain period of time, which is controlled by the PublishMsgPeriod option in the configuration file, which can be used during testing Setting this to a small value reduces waiting time. The following settings, set the wait time to 10 seconds.\n\nPublishMsgPeriod = "10s"\n\n\n# PieceStorage Configuration\n\nCurrently droplet supports two storage modes for Piece data:\n\n * File system\n * Object storage\n\n[Piece Storage]\n   [[PieceStorage. Fs]]\n     Name = "local"\n     Enable = true\n     Path = "/mnt/pieces"\n   [[PieceStorage.S3]]\n     Name = "oss"\n     Enable = false\n     EndPoint = ""\n     AccessKey = ""\n     SecretKey = ""\n     Token = ""\n\n\nIt can also be configured by command:\n\n# Local file system storage\n./droplet piece-storage add-fs --path="/piece/storage/path" --name="local"\n\n# object storage\n./droplet piece-storage add-s3 --endpoint=<url> --name="oss"\n\n\n# Miners Configuration\n\nThe miners of the droplet service and the parameters of each miner are configured as follows:\n\n[[Miners]]\n   Addr = "f01000"\n   Account = "testuser01"\n  \n   ConsiderOnlineStorageDeals = true\n   Consider OfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1h0m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   TransferPath = ""\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   [CommonProviderConfig. RetrievalPricing]\n     Strategy = "default"\n     [CommonProviderConfig. RetrievalPricing. Default]\n       VerifiedDealsFreeTransfer = true\n     [CommonProviderConfig. RetrievalPricing. External]\n       Path = ""\n     [CommonProviderConfig. AddressConfig]\n       DisableWorkerFallback = false\n\n\nTIP\n\nIf there are multiple miners, just copy the above configuration. *** If there are many miners, the configuration file will be very long, consider optimizing? ***\n\n\n# droplet proxy libp2p listener\n\nSetting droplet as miner\'s libp2p listener proxy is to set the entrance of a specific miner market service to the current running droplet instance.\n\n * Query droplet peer node listening address\n\n./droplet net listen\n\n/ip4/127.0.0.1/tcp/58418/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n/ip4/192.168.19.67/tcp/58418/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n/ip6/::1/tcp/49770/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n\n\n * set Mutiadrs and peerid of miners to Mutiadrs and peerid of droplet\n\n./droplet actor set-addrs --miner=t01041 /ip4/192.168.19.67/tcp/58418\nRequested multiaddrs change in message bafy2bzaceceqgxmiledunzjwbajpghzzn4iibvxhoifsrz4q2grzsirgznzdg\n\n./droplet actor set-peer-id --miner=f01041 12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n   Requested peerid change in message bafy2bzacea4ruzf4hvyezzhjkt6hnzz5tpk7ttuw6jmyoadqasqtujypqitp2\n\n\n * After waiting for the message to be on-chained, check the agent information of miner\n\n./droplet actor info --miner t01041\npeers: 12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\naddr: /ip4/192.168.19.67/tcp/58418\n\n\n\n# Storage Ask\n\n\n# Storage Deal Ask\n\n./droplet storage ask set --price=0.01fil --verified-price=0.02fil --min-piece-size=512b --max-piece-size=512M t01041\n\n\nPricing information can be checked via the command line tool:\n\n./droplet storage ask get t01041\nPrice per GiB/Epoch Verified Min. Piece Size (padded) Max. Piece Size (padded) Expiry (Epoch) Expiry (Appx. Rem. Time) Seq. No.\n0.01 FIL 0.02 FIL 512 B 521 MiB 161256 719h59m0s 0\n\n\n\n# Retrieve Deal\n\nThe storage provider should at least set the payment address\n\n./droplet retrieval ask set t3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\nAt the same time, you can also set the price of the data retrieval request, if not set, the default is 0.\n\n./droplet retrieval ask set \\\n--price 0.02fil \\\n--unseal-price 0.01fil \\\n--payment-interval 1MB \\\nt3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n\n# Configure and Start droplet-client\n\nThe normal operation of droplet-client requires synchronization node, signature node (venus fullnode and lotus fullnode can be used as signature nodes), message nodes (venus fullnode and lotus fullnode can be used as message nodes) and droplet, which means it can be configured flexibly, as long as the message can be signed properly and snet to the chain.\n\ndroplet-client needs to be configured with --addr to bind the client’s wallet address, which is used to pay client collateral and retrieval fees.\n\nHere are three commonly used startup methods:\n\n * Access to the Venus chain service\n\nThe signature API of sophon-gateway can only be accessed with admin permission (for security considerations). It is not recommended to use sophon-gateway for droplet-client. We use the local venus-wallet for sign in this case.\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--messager-url=/ip4/<sophon-messager_ip>/tcp/<port> \\\n--auth-token=<user-signed-token> \\\n--signer-type=wallet \\\n--signer-url=/ip4/<venus-wallet_ip>/tcp/<port> \\\n--signer-toke=<wallet-token> \\\n--addr=<signer address> \\\n\n\n> venus-wallet generates token with signature permission. please refer to the above.\n\n * Connect to lotus fullnode and start\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--node-token=<node-token> \\\n--signer-type=lotusnode\\\n--addr=<signer address> \\\n\n\n * Connect to venus fullnode and start\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--node-token=<node-token> \\\n--signer-type=wallet \\\n--addr=<signer address> \\\n\n\nThese configuration items can also be set in configuration files, see droplet-client configuration\n\n\n# Storage Deal\n\n\n# Import the data to be stored\n\n./droplet-client data import <file path>\nImport 1642491708527303001, Root bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n\n\n\n# Choose Storage Provider\n\nUse droplet-client to query miner storage ask information:\n\n./droplet-client storage asks query f01041\nAsk: t01041\nPrice per GiB: 0.02 FIL\nVerified Price per GiB: 0.01 FIL\nMax Piece size: 8 MiB\nMin Piece size: 512 B\n\n\n\n# Initiate Storage Deal\n\n/droplet-client storage deals init\n# Enter the cid of the data to be stored, `./droplet-client data local`command to view\nData CID (from lotus client import): bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n.. calculating data size\nPieceCid: baga6ea4seaqpz47j4kqdiixpehmzk3uw5c4cmqvs5iyi7xf7rwkepfhdvowdiai PayLoadSize: 809 PieceSize: 1024\n# Enter the data storage period\nDeal duration (days): 180\nMiner Addresses (f0.. f0..), none to find: t01041\n.. querying miner asks\n-----\nProposing from t16qnfduxzpneb2m3rbdasvhgk7rmmo32zpiypkaq\nBalance: 9499.999999856612207905 FIL\nPiece size: 1KiB (Payload size: 809B)\nDuration: 4320h0m0s\nTotal price: ~0.0098876953124352 FIL (0.000000019073486328 FIL per epoch)\nVerified: false\n# Confirm whether to accept the order price\nAccept (yes/no): yes\n.. executing\nDeal (t01051) CID: bafyreihiln2ha6eaaos7kuhwpnvjvjlxmjnpsklym6hhucu2z776bf2or4\n\n\nThen wait for the dael message to be sent to the chain and the storage provider to complete the data sealing.\n\ndroplet-client view daels:\n\n./droplet-client storage deals list\nDealCid DealId Provider State On Chain? Slashed? PieceCID Size Price Duration Verified\n...76bf2or4 0 t01051 StorageDealCheckForAcceptance N N ...dvowdiai 1016 B 0.00992212295525724 FIL 520205 false\n   Message: Provider state: StorageDealPublish\n\n\n\n# Offline Storage Deal\n\n 1. Import storage deal file\n\n./droplet-client data import ./README.md\nImport 1642643014364955003, Root bafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c\n\n\n 2. Convert to CAR file\n\n./droplet-client data generate-car ./README.md ./readme.md.car\n\n\n 3. Calculate the CID and Piece size of the CAR file\n\n./droplet-client data commP ./readme.md.car\nCID: baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq\nPiece size: 3.969 KiB\n\n\n 4. Initiate a deal\n\n./droplet-client storage deals init \\\n--manual-piece-cid=baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq \\\n--manual-piece-size=4064 \\\nbafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c \\\nf01051\\\n0.01fil \\\n518400\nbafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm\n\n\n * manual-piece-cid: CID output after executing data commP in step 3\n * manual-piece-size: Piece size output after executing data commP in step 3. It should be noted that when using this parameter, this value needs to be converted into the size of byte, here The size converted to byte for 3.969kib is 4064. The next four parameters are:\n * The Root entered after executing the import command in the first step\n * miner ID\n * Negotiate to pay 0.01fil for the order, **this value must be greater than the minimum value in storage ask set by miner, otherwise the request will be rejected.\n * Contract period, must be greater than or equal to 180 days, this value also needs to be replaced by epoch, each epoch=30 seconds, in the example: 518400 = 180 days.\n\nThe final output bafyreidfs2w7lxacq6zpqck7q4zimyitidxyahojf7dbbuz5zr7irdlmqa is the proposed CID. Like online deals, you can check the deal information through the droplet-client at this time, and the final status of the order will stop at StorageDealWaitingForData\n\n./droplet-client storage deals list\nDealCid DealId Provider State On Chain? Slashed? PieceCID Size Price Duration Verified\n...s7r6hftm0 t01051 StorageDealCheckForAcceptance N N ... u7o3d6mq 3.969 KiB 5196.63 FIL 519663 false\n   Message: Provider state: StorageDealWaitingForData\n\n\n💁 If droplet-client shows the following content:\n\n2022-01-20T12:47:27.966+0800  ERROR storagemarket_impl   clientstates/client_states.go:324   deal bafyreif2k2e4acraxk33z3llwo5gqmk32tfrdj2kocjanojbfbf6vj72vm failed: adding market funds failed: estimating gas used: message execution failed: exit SysErrInsufficientFunds(6)\n\n\nIt means that the balance in the wallet is insufficient, call the command ./droplet-client actor-funds add 100fil and re-execute the command.\n\n 5. Import data files of offline deal It is necessary to transfer the .car file generated in the previous step 2 to droplet offline, and import the data through the droplet command:\n\n./droplet storage-deals import-data bafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm ./readme.md.car\n\n\nCheck the status again, the order status is updated to StorageDealPublishing:\n\n./droplet-client storage deals list\nDealCid DealId Provider State On Chain? Slashed? PieceCID Size Price Duration Verified\n...s7r6hftm 0 t01051 StorageDealCheckForAcceptance N N ...u7o3d6mq 3.969 KiB 5196.63 FIL 519663 false\nMessage: Provider state: StorageDealPublishing\n\n\nFinally, wait for the deal status to change to StorageDealAwaitingPreCommit, then the deal data is ready to be sealed.\n\n\n# Submit Data Retrieval Request\n\nUsers can initiate data retrieval request by minerID and Data CID\n\n./droplet-client retrieval retrieve --provider t01020 bafk2bzacearla6en6crpouxo72d5lhr3buajbzjippl63bfsd2m7rsyughu42 test.txt\nRecv 0 B, Paid 0 FIL, Open (New), 0s\nRecv 0 B, Paid 0 FIL, DealProposed (WaitForAcceptance), 16ms\nRecv 0 B, Paid 0 FIL, DealAccepted (Accepted), 26ms\nRecv 0 B, Paid 0 FIL, PaymentChannelSkip (Ongoing), 27ms\nRecv 1.479 KiB, Paid 0 FIL, Blocks Received (Ongoing), 30ms\nRecv 1.479 KiB, Paid 0 FIL, AllBlocksReceived (BlocksComplete), 33ms\nRecv 1.479 KiB, Paid 0 FIL, Complete (CheckComplete), 35ms\nRecv 1.479 KiB, Paid 0 FIL, CompleteVerified (Finalizing Blockstore), 36ms\nRecv 1.479 KiB, Paid 0 FIL, BlockstoreFinalized (Completed), 36ms\nSuccess\n',normalizedContent:'# getting started\n\n\n# overview\n\ndroplet is the market service component in the venus system, which consists of two parts: droplet and droplet-client, commonly understood as market server and client.\n\n * droplet serves storage providers;\n\n * droplet-client serves users who have retrieval or storage demands.\n\nthe market service of droplet is divided into storage market and retrieval market, and its general process is as follows:\n\nstorage process:\n\nstages                                     steps                                                          instructions\nstart droplet and droplet-client           1. configure and start [droplet](#configure and start          \n                                           droplet)\n                                           2. configure and start [droplet-client](#configure and start\n                                           droplet-client)\nproxy libp2p listener service for miners   via droplet [libp2p listener service for miners](#droplet      \n                                           proxy libp2p listener)\npost storage ask for miners                via droplet ask                                                \nspecify miner to propose deal              1. through droplet-client [import the data to be               after the deal is issued, it takes a certain amount of time\n                                           stored](#import the data to be stored)                         to execute the deal transaction process. after the deal is\n                                           2. according to the demand [select the appropriate storage     confirmed, the storage provider seal the data in the deal\n                                           provider](#select the storage provider) < br> 3. [initiate     and submits the certificate. droplet will be responsible for\n                                           storage deal](#initiate storage deal)                          tracking order status.\n\nretrieval process:\n\nstages                                    steps                                                          instructions\nstart droplet and droplet-client          1. configure and start [droplet](#configure and start          \n                                          droplet)\n                                          2. configure and start [droplet-client](#configure and start\n                                          droplet-client)\nset retrieval price and payment address   storage provider through droplet [set search pending order]    \n                                          (#retrieve pending order)\nsubmit data retrieval request             [submit data retrieval request] (#submit data retrieval        after submitting the data retrieval request, the search\n                                          request)                                                       communication process will start, and the data will be\n                                                                                                         returned in batches according to the agreement and fees will\n                                                                                                         be transferred to the receiving address.\n\n💁 whether it is a storage deal or a retrieval request, the execution process of the protocol is automatic, and messages will be sent to the chain during the period, so it is necessary to ensure that the messages of both parties to the transaction can be signed normally. there is a necessary fil transfer in the transaction process, and the relevant address needs to have sufficient balance, otherwise the transaction will not be completed.\n\n\n# configure and start droplet\n\n\n# initialization\n\n * on-chain mode\n\nas a component of the chain service, it cooperates with sophon-auth, venus, sophon-messager, sophon-gateway and other components to provide market services for the miner registered to the chain service.\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--auth-url=http://<ip>:<port>\\\n--gateway-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<shared-token> \\\n--signer-type="gateway"\n\n\ngenerated droplet service component configuration reference:\n\n[node]\n   url = "/ip4/192.168.200.151/tcp/3455"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[messager]\n   url = "/ip4/127.0.0.1/tcp/39812"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[signer]\n   type = "gateway"\n   url = "/ip4/127.0.0.1/tcp/45132"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[authnode]\n   url = "http://127.0.0.1:8989"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n\n💁 *shared-token is used to authentication when accessing api of other chain service components. token is managed by sophon-auth and requires admin permission. for details, please refer to sophon-auth token *\n\n * off-chain mode\n\nto start with lotus fullnode:\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of lotus> \\\n--signer-type="lotusnode"\n\n\ngenerated droplet service component configuration reference:\n\n[node]\n   url = "/ip4/127.0.0.1/tcp/1234"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduiiwiywrtaw4ixx0.ne3jsfhhhn6bgdtdsvlyfuarc3ejph_7krbsmrbdplc"\n\n[messager]\n   url = ""\n   token = ""\n\n[signer]\n   type = "lotusnode"\n   url = "/ip4/127.0.0.1/tcp/1234"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduiiwiywrtaw4ixx0.ne3jsfhhhn6bgdtdsvlyfuarc3ejph_7krbsmrbdplc"\n\n[authnode]\n   url = ""\n   token = ""\n\n\nwhen using chain service and venus-wallet:\n\n./droplet run \\\n--auth-url=http://<ip>:<port>\\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of write-authority> \\\n--signer-url=/ip4/<ip>/tcp/<port> \\\n--signer-token=<token of venus-wallet> \\\n--signer-type="wallet"\n\n\ngenerated droplet service component configuration reference:\n\n[node]\n   url = "/ip4/192.168.200.151/tcp/3455"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[messager]\n   url = "/ip4/127.0.0.1/tcp/39812"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[signer]\n   type = "wallet"\n   url = "/ip4/127.0.0.1/tcp/5678/http"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduil19.ivbglmrw__6g4qgbb1d1jtr1oy\n   mm6sqs1tj1gdgr5eq"\n\n[authnode]\n   url = "http://127.0.0.1:8989"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n\n💁 if signature uses an independent venus-wallet component, then configure it as the listening address of venus-wallet and a token with signing permission.\n\nto generate venus-wallet token with signing permission:\n\n$ ./venus-wallet auth api-info --perm=sign\n> eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduil19.vr-op7rnoozf6xxzuahpk-zga7ida5njjmu9l_znj-0:/ip4/127.0/567/tcp\n\n\n💁 **after the initialization command is successfully executed, droplet repo will be generated, and it needs to be configured according to the actual environment when using it. **\n\nconfiguration options will be generated when droplet starts for the first time. the default directory is: ~/.droplet/config.toml. next, we will introduce common configuration options.\n\n\n# general configuration\n\nfor the description of configuration items of venus-wallet, please refer to droplet configuration, here we explain the more commonly used configuration items.\n\ntips: after modifying the configuration file, you need to restart the droplet service:\n\n$ nohup ./droplet run > droplet.log 2>&1 &\n\n\n> after the repo has been generated, the parameters required for initialization are written into the configuration file, so there is no need to add them for subsequent startups.\n\n# chain service configuration\n\n * including: chain synchronization node, message node, signature node and authentication node.\n\n[node]\n   url = "/ip4/192.168.200.21/tcp/3453"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[messager]\n   url = "/ip4/192.168.200.21/tcp/39812"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[signer]\n   type = "gateway"\n   url = "/ip4/192.168.200.21/tcp/45132"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[authnode]\n   url = "http://192.168.200.21:8989"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n\n\n# api listener configuration\n\nthe default listening port of droplet is 127.0.0.1:41235, in order to support access requests from different networks, the listening address of api needs to be modified:\n\n[api]\nlistenaddress = "/ip4/0.0.0.0/tcp/41235"\n\n\n# publishmsgperiod configuration\n\nwhen droplet receives a deal from droplet-client, it will not publish the clientdealproposal message immediately, but will wait for a certain period of time, which is controlled by the publishmsgperiod option in the configuration file, which can be used during testing setting this to a small value reduces waiting time. the following settings, set the wait time to 10 seconds.\n\npublishmsgperiod = "10s"\n\n\n# piecestorage configuration\n\ncurrently droplet supports two storage modes for piece data:\n\n * file system\n * object storage\n\n[piece storage]\n   [[piecestorage. fs]]\n     name = "local"\n     enable = true\n     path = "/mnt/pieces"\n   [[piecestorage.s3]]\n     name = "oss"\n     enable = false\n     endpoint = ""\n     accesskey = ""\n     secretkey = ""\n     token = ""\n\n\nit can also be configured by command:\n\n# local file system storage\n./droplet piece-storage add-fs --path="/piece/storage/path" --name="local"\n\n# object storage\n./droplet piece-storage add-s3 --endpoint=<url> --name="oss"\n\n\n# miners configuration\n\nthe miners of the droplet service and the parameters of each miner are configured as follows:\n\n[[miners]]\n   addr = "f01000"\n   account = "testuser01"\n  \n   consideronlinestoragedeals = true\n   consider offlinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1h0m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   transferpath = ""\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   [commonproviderconfig. retrievalpricing]\n     strategy = "default"\n     [commonproviderconfig. retrievalpricing. default]\n       verifieddealsfreetransfer = true\n     [commonproviderconfig. retrievalpricing. external]\n       path = ""\n     [commonproviderconfig. addressconfig]\n       disableworkerfallback = false\n\n\ntip\n\nif there are multiple miners, just copy the above configuration. *** if there are many miners, the configuration file will be very long, consider optimizing? ***\n\n\n# droplet proxy libp2p listener\n\nsetting droplet as miner\'s libp2p listener proxy is to set the entrance of a specific miner market service to the current running droplet instance.\n\n * query droplet peer node listening address\n\n./droplet net listen\n\n/ip4/127.0.0.1/tcp/58418/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n/ip4/192.168.19.67/tcp/58418/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n/ip6/::1/tcp/49770/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n\n\n * set mutiadrs and peerid of miners to mutiadrs and peerid of droplet\n\n./droplet actor set-addrs --miner=t01041 /ip4/192.168.19.67/tcp/58418\nrequested multiaddrs change in message bafy2bzaceceqgxmiledunzjwbajpghzzn4iibvxhoifsrz4q2grzsirgznzdg\n\n./droplet actor set-peer-id --miner=f01041 12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n   requested peerid change in message bafy2bzacea4ruzf4hvyezzhjkt6hnzz5tpk7ttuw6jmyoadqasqtujypqitp2\n\n\n * after waiting for the message to be on-chained, check the agent information of miner\n\n./droplet actor info --miner t01041\npeers: 12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\naddr: /ip4/192.168.19.67/tcp/58418\n\n\n\n# storage ask\n\n\n# storage deal ask\n\n./droplet storage ask set --price=0.01fil --verified-price=0.02fil --min-piece-size=512b --max-piece-size=512m t01041\n\n\npricing information can be checked via the command line tool:\n\n./droplet storage ask get t01041\nprice per gib/epoch verified min. piece size (padded) max. piece size (padded) expiry (epoch) expiry (appx. rem. time) seq. no.\n0.01 fil 0.02 fil 512 b 521 mib 161256 719h59m0s 0\n\n\n\n# retrieve deal\n\nthe storage provider should at least set the payment address\n\n./droplet retrieval ask set t3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\nat the same time, you can also set the price of the data retrieval request, if not set, the default is 0.\n\n./droplet retrieval ask set \\\n--price 0.02fil \\\n--unseal-price 0.01fil \\\n--payment-interval 1mb \\\nt3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n\n# configure and start droplet-client\n\nthe normal operation of droplet-client requires synchronization node, signature node (venus fullnode and lotus fullnode can be used as signature nodes), message nodes (venus fullnode and lotus fullnode can be used as message nodes) and droplet, which means it can be configured flexibly, as long as the message can be signed properly and snet to the chain.\n\ndroplet-client needs to be configured with --addr to bind the client’s wallet address, which is used to pay client collateral and retrieval fees.\n\nhere are three commonly used startup methods:\n\n * access to the venus chain service\n\nthe signature api of sophon-gateway can only be accessed with admin permission (for security considerations). it is not recommended to use sophon-gateway for droplet-client. we use the local venus-wallet for sign in this case.\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--messager-url=/ip4/<sophon-messager_ip>/tcp/<port> \\\n--auth-token=<user-signed-token> \\\n--signer-type=wallet \\\n--signer-url=/ip4/<venus-wallet_ip>/tcp/<port> \\\n--signer-toke=<wallet-token> \\\n--addr=<signer address> \\\n\n\n> venus-wallet generates token with signature permission. please refer to the above.\n\n * connect to lotus fullnode and start\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--node-token=<node-token> \\\n--signer-type=lotusnode\\\n--addr=<signer address> \\\n\n\n * connect to venus fullnode and start\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\\n--node-token=<node-token> \\\n--signer-type=wallet \\\n--addr=<signer address> \\\n\n\nthese configuration items can also be set in configuration files, see droplet-client configuration\n\n\n# storage deal\n\n\n# import the data to be stored\n\n./droplet-client data import <file path>\nimport 1642491708527303001, root bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n\n\n\n# choose storage provider\n\nuse droplet-client to query miner storage ask information:\n\n./droplet-client storage asks query f01041\nask: t01041\nprice per gib: 0.02 fil\nverified price per gib: 0.01 fil\nmax piece size: 8 mib\nmin piece size: 512 b\n\n\n\n# initiate storage deal\n\n/droplet-client storage deals init\n# enter the cid of the data to be stored, `./droplet-client data local`command to view\ndata cid (from lotus client import): bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n.. calculating data size\npiececid: baga6ea4seaqpz47j4kqdiixpehmzk3uw5c4cmqvs5iyi7xf7rwkepfhdvowdiai payloadsize: 809 piecesize: 1024\n# enter the data storage period\ndeal duration (days): 180\nminer addresses (f0.. f0..), none to find: t01041\n.. querying miner asks\n-----\nproposing from t16qnfduxzpneb2m3rbdasvhgk7rmmo32zpiypkaq\nbalance: 9499.999999856612207905 fil\npiece size: 1kib (payload size: 809b)\nduration: 4320h0m0s\ntotal price: ~0.0098876953124352 fil (0.000000019073486328 fil per epoch)\nverified: false\n# confirm whether to accept the order price\naccept (yes/no): yes\n.. executing\ndeal (t01051) cid: bafyreihiln2ha6eaaos7kuhwpnvjvjlxmjnpsklym6hhucu2z776bf2or4\n\n\nthen wait for the dael message to be sent to the chain and the storage provider to complete the data sealing.\n\ndroplet-client view daels:\n\n./droplet-client storage deals list\ndealcid dealid provider state on chain? slashed? piececid size price duration verified\n...76bf2or4 0 t01051 storagedealcheckforacceptance n n ...dvowdiai 1016 b 0.00992212295525724 fil 520205 false\n   message: provider state: storagedealpublish\n\n\n\n# offline storage deal\n\n 1. import storage deal file\n\n./droplet-client data import ./readme.md\nimport 1642643014364955003, root bafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c\n\n\n 2. convert to car file\n\n./droplet-client data generate-car ./readme.md ./readme.md.car\n\n\n 3. calculate the cid and piece size of the car file\n\n./droplet-client data commp ./readme.md.car\ncid: baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq\npiece size: 3.969 kib\n\n\n 4. initiate a deal\n\n./droplet-client storage deals init \\\n--manual-piece-cid=baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq \\\n--manual-piece-size=4064 \\\nbafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c \\\nf01051\\\n0.01fil \\\n518400\nbafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm\n\n\n * manual-piece-cid: cid output after executing data commp in step 3\n * manual-piece-size: piece size output after executing data commp in step 3. it should be noted that when using this parameter, this value needs to be converted into the size of byte, here the size converted to byte for 3.969kib is 4064. the next four parameters are:\n * the root entered after executing the import command in the first step\n * miner id\n * negotiate to pay 0.01fil for the order, **this value must be greater than the minimum value in storage ask set by miner, otherwise the request will be rejected.\n * contract period, must be greater than or equal to 180 days, this value also needs to be replaced by epoch, each epoch=30 seconds, in the example: 518400 = 180 days.\n\nthe final output bafyreidfs2w7lxacq6zpqck7q4zimyitidxyahojf7dbbuz5zr7irdlmqa is the proposed cid. like online deals, you can check the deal information through the droplet-client at this time, and the final status of the order will stop at storagedealwaitingfordata\n\n./droplet-client storage deals list\ndealcid dealid provider state on chain? slashed? piececid size price duration verified\n...s7r6hftm0 t01051 storagedealcheckforacceptance n n ... u7o3d6mq 3.969 kib 5196.63 fil 519663 false\n   message: provider state: storagedealwaitingfordata\n\n\n💁 if droplet-client shows the following content:\n\n2022-01-20t12:47:27.966+0800  error storagemarket_impl   clientstates/client_states.go:324   deal bafyreif2k2e4acraxk33z3llwo5gqmk32tfrdj2kocjanojbfbf6vj72vm failed: adding market funds failed: estimating gas used: message execution failed: exit syserrinsufficientfunds(6)\n\n\nit means that the balance in the wallet is insufficient, call the command ./droplet-client actor-funds add 100fil and re-execute the command.\n\n 5. import data files of offline deal it is necessary to transfer the .car file generated in the previous step 2 to droplet offline, and import the data through the droplet command:\n\n./droplet storage-deals import-data bafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm ./readme.md.car\n\n\ncheck the status again, the order status is updated to storagedealpublishing:\n\n./droplet-client storage deals list\ndealcid dealid provider state on chain? slashed? piececid size price duration verified\n...s7r6hftm 0 t01051 storagedealcheckforacceptance n n ...u7o3d6mq 3.969 kib 5196.63 fil 519663 false\nmessage: provider state: storagedealpublishing\n\n\nfinally, wait for the deal status to change to storagedealawaitingprecommit, then the deal data is ready to be sealed.\n\n\n# submit data retrieval request\n\nusers can initiate data retrieval request by minerid and data cid\n\n./droplet-client retrieval retrieve --provider t01020 bafk2bzacearla6en6crpouxo72d5lhr3buajbzjippl63bfsd2m7rsyughu42 test.txt\nrecv 0 b, paid 0 fil, open (new), 0s\nrecv 0 b, paid 0 fil, dealproposed (waitforacceptance), 16ms\nrecv 0 b, paid 0 fil, dealaccepted (accepted), 26ms\nrecv 0 b, paid 0 fil, paymentchannelskip (ongoing), 27ms\nrecv 1.479 kib, paid 0 fil, blocks received (ongoing), 30ms\nrecv 1.479 kib, paid 0 fil, allblocksreceived (blockscomplete), 33ms\nrecv 1.479 kib, paid 0 fil, complete (checkcomplete), 35ms\nrecv 1.479 kib, paid 0 fil, completeverified (finalizing blockstore), 36ms\nrecv 1.479 kib, paid 0 fil, blockstorefinalized (completed), 36ms\nsuccess\n',charsets:{}},{title:"Droplet Client Configurations",frontmatter:{},regularPath:"/operation/client-config.html",relativePath:"operation/client-config.md",key:"v-237bf565",path:"/operation/client-config.html",headers:[{level:2,title:"DROPLET Client network configuration",slug:"droplet-client-network-configuration",normalizedTitle:"droplet client network configuration",charIndex:1169},{level:3,title:"[API]",slug:"api",normalizedTitle:"[api]",charIndex:317},{level:3,title:"[Libp2p]",slug:"libp2p",normalizedTitle:"[libp2p]",charIndex:435},{level:2,title:"Venus Chain Service Configuration",slug:"venus-chain-service-configuration",normalizedTitle:"venus chain service configuration",charIndex:2344},{level:3,title:"[Node]",slug:"node",normalizedTitle:"[node]",charIndex:583},{level:3,title:"[Messager]",slug:"messager",normalizedTitle:"[messager]",charIndex:781},{level:3,title:"[Signer]",slug:"signer",normalizedTitle:"[signer]",charIndex:954},{level:2,title:"Other configuration",slug:"other-configuration",normalizedTitle:"other configuration",charIndex:4242}],headersStr:"DROPLET Client network configuration [API] [Libp2p] Venus Chain Service Configuration [Node] [Messager] [Signer] Other configuration",content:'# Droplet Client Configurations\n\nA typical configuration of droplet-client is as follows...\n\n\nSimultaneous Transfers For Retrieval = 20\nSimultaneous Transfers For Storage = 20\n\n[Default MarketAddress]\n   Addr = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q"\n   Account = ""\n\n[API]\n   ListenAddress = "/ip4/127.0.0.1/tcp/41231/ws"\n   RemoteListenAddress = ""\n   Secret = ""\n   Timeout = "30s"\n\n[Libp2p]\n   ListenAddresses = ["/ip4/0.0.0.0/tcp/34123", "/ip6/::/tcp/0"]\n   AnnounceAddresses = []\n   NoAnnounceAddresses = []\n   PrivateKey = ""\n\n[Node]\n   Url = "/ip4/192.168.200.106/tcp/3453"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Messager]\n   Url = ""\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Signer]\n   Type = ""\n   Url = ""\n   Token = ""\n\n\n\nAmong them, it can be divided into three parts: 1) client network configuration, 2) configuration of Venus chain service components and 3) other configurations\n\n\n# DROPLET Client network configuration\n\nThis part of the configuration determines the interface between the droplet client and external actors\n\n\n# [API]\n\nThis section defines the external interface of droplet-client\n\n[API]\n# droplet-client provides the address where the service listens\n# String type, required, default: "/ip4/127.0.0.1/tcp/41235"\nListenAddress = "/ip4/127.0.0.1/tcp/41235"\n\n# reserved text\nRemoteListenAddress = ""\n\n# key used for encrypted communication\n# String type, optional, automatically generated none is supplied\nSecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# reserved text\nTimeout = "30s"\n\n\n\n# [Libp2p]\n\nThe communication address used for P2P network\n\n[Libp2p]\n# Listening network address\n# string array, required, default: ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# reserved text\nAnnounceAddresses = []\n\n# reserved text\nNoAnnounceAddresses = []\n\n# Private key for p2p encrypted communication\n# string, optional, automatically generated if none is supplied\nPrivateKey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# Venus Chain Service Configuration\n\nWhen the droplet-client is connected to the venus components, the API of the related component needs to be configured.\n\n\n# [Node]\n\nVenus chain service access configuration\n\n[Node]\n# Entrance of the chain service\n# String type, mandatory, can also be configured directly through the --node-url flag of the command line\nUrl = "/ip4/192.168.200.128/tcp/3453"\n\n# Authentication token of Venus series components\n# String type, mandatory, can also be configured directly through the --auth-token flag of the command line\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n\n# [Messager]\n\nsophon-messager service access configuration\n\n[Messager]\n# Message service entry\n# String type, mandatory, can also be configured directly through the --messager-url flag on the command line\nUrl = "/ip4/192.168.200.128/tcp/39812/"\n\n# Authentication token of venus series components\n# String type, mandatory, can also be configured directly through the --auth-token flag of the command line\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# [Signer]\n\nThe Venus component that provide signing services Only signature services of wallet type can be used in droplet-client\n\n[Signer]\n# Type of signature service component\n# String type can only be "wallet"\nType = "wallet"\n\n# Signature service entry\n# String type, mandatory, can also be configured directly through the --signer-url flag on the command line\nUrl = "/ip4/192.168.200.128/tcp/5678/"\n\n# wallet token for authentication\n# string type, mandatory\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# Other configuration\n\n# Get the maximum number of retrieval request for simultaneous transfers\n# Integer type Default: 20\nSimultaneous Transfers For Retrieval = 20\n\n# Store the maximum number of simultaneous transfers of storage deals\n# Integer type Default: 20\nSimultaneous Transfers For Storage = 20\n\n# The default address of the current droplet-client\n# String type, optional, can also be configured directly through the --addr flag of the command line\nDefaultMarketAddress = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q:username"\n',normalizedContent:'# droplet client configurations\n\na typical configuration of droplet-client is as follows...\n\n\nsimultaneous transfers for retrieval = 20\nsimultaneous transfers for storage = 20\n\n[default marketaddress]\n   addr = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q"\n   account = ""\n\n[api]\n   listenaddress = "/ip4/127.0.0.1/tcp/41231/ws"\n   remotelistenaddress = ""\n   secret = ""\n   timeout = "30s"\n\n[libp2p]\n   listenaddresses = ["/ip4/0.0.0.0/tcp/34123", "/ip6/::/tcp/0"]\n   announceaddresses = []\n   noannounceaddresses = []\n   privatekey = ""\n\n[node]\n   url = "/ip4/192.168.200.106/tcp/3453"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiywrtaw4ilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.0fylymsnjp8dktrclykfqsjo9fokdkxrl5dqgpmdaoe"\n\n[messager]\n   url = ""\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiywrtaw4ilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.0fylymsnjp8dktrclykfqsjo9fokdkxrl5dqgpmdaoe"\n\n[signer]\n   type = ""\n   url = ""\n   token = ""\n\n\n\namong them, it can be divided into three parts: 1) client network configuration, 2) configuration of venus chain service components and 3) other configurations\n\n\n# droplet client network configuration\n\nthis part of the configuration determines the interface between the droplet client and external actors\n\n\n# [api]\n\nthis section defines the external interface of droplet-client\n\n[api]\n# droplet-client provides the address where the service listens\n# string type, required, default: "/ip4/127.0.0.1/tcp/41235"\nlistenaddress = "/ip4/127.0.0.1/tcp/41235"\n\n# reserved text\nremotelistenaddress = ""\n\n# key used for encrypted communication\n# string type, optional, automatically generated none is supplied\nsecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# reserved text\ntimeout = "30s"\n\n\n\n# [libp2p]\n\nthe communication address used for p2p network\n\n[libp2p]\n# listening network address\n# string array, required, default: ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nlistenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# reserved text\nannounceaddresses = []\n\n# reserved text\nnoannounceaddresses = []\n\n# private key for p2p encrypted communication\n# string, optional, automatically generated if none is supplied\nprivatekey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus chain service configuration\n\nwhen the droplet-client is connected to the venus components, the api of the related component needs to be configured.\n\n\n# [node]\n\nvenus chain service access configuration\n\n[node]\n# entrance of the chain service\n# string type, mandatory, can also be configured directly through the --node-url flag of the command line\nurl = "/ip4/192.168.200.128/tcp/3453"\n\n# authentication token of venus series components\n# string type, mandatory, can also be configured directly through the --auth-token flag of the command line\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n\n# [messager]\n\nsophon-messager service access configuration\n\n[messager]\n# message service entry\n# string type, mandatory, can also be configured directly through the --messager-url flag on the command line\nurl = "/ip4/192.168.200.128/tcp/39812/"\n\n# authentication token of venus series components\n# string type, mandatory, can also be configured directly through the --auth-token flag of the command line\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# [signer]\n\nthe venus component that provide signing services only signature services of wallet type can be used in droplet-client\n\n[signer]\n# type of signature service component\n# string type can only be "wallet"\ntype = "wallet"\n\n# signature service entry\n# string type, mandatory, can also be configured directly through the --signer-url flag on the command line\nurl = "/ip4/192.168.200.128/tcp/5678/"\n\n# wallet token for authentication\n# string type, mandatory\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# other configuration\n\n# get the maximum number of retrieval request for simultaneous transfers\n# integer type default: 20\nsimultaneous transfers for retrieval = 20\n\n# store the maximum number of simultaneous transfers of storage deals\n# integer type default: 20\nsimultaneous transfers for storage = 20\n\n# the default address of the current droplet-client\n# string type, optional, can also be configured directly through the --addr flag of the command line\ndefaultmarketaddress = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q:username"\n',charsets:{}},{title:"Configurations of droplet",frontmatter:{},regularPath:"/operation/market-config.html",relativePath:"operation/market-config.md",key:"v-668526c5",path:"/operation/market-config.html",headers:[{level:2,title:"Data Transfer Parameter Configuration",slug:"data-transfer-parameter-configuration",normalizedTitle:"data transfer parameter configuration",charIndex:5040},{level:2,title:"Basic Parameter Configuration",slug:"basic-parameter-configuration",normalizedTitle:"basic parameter configuration",charIndex:279},{level:2,title:"droplet Network Configuration",slug:"droplet-network-configuration",normalizedTitle:"droplet network configuration",charIndex:9166},{level:3,title:"[API]",slug:"api",normalizedTitle:"[api]",charIndex:2382},{level:3,title:"[Libp2p]",slug:"libp2p",normalizedTitle:"[libp2p]",charIndex:2561},{level:2,title:"Venus Chain Service Configuration",slug:"venus-chain-service-configuration",normalizedTitle:"venus chain service configuration",charIndex:2852},{level:3,title:"[Node]",slug:"node",normalizedTitle:"[node]",charIndex:2898},{level:3,title:"[Messager]",slug:"messager",normalizedTitle:"[messager]",charIndex:3102},{level:3,title:"[Signer]",slug:"signer",normalizedTitle:"[signer]",charIndex:3305},{level:3,title:"[AuthNode]",slug:"authnode",normalizedTitle:"[authnode]",charIndex:3526},{level:2,title:"Miner Configuration",slug:"miner-configuration",normalizedTitle:"miner configuration",charIndex:13139},{level:2,title:"Database Configuration",slug:"database-configuration",normalizedTitle:"database configuration",charIndex:14950},{level:3,title:"[Mysql]",slug:"mysql",normalizedTitle:"[mysql]",charIndex:3768},{level:2,title:"Sector Storage Configuration",slug:"sector-storage-configuration",normalizedTitle:"sector storage configuration",charIndex:15931},{level:3,title:"[[PieceStorage. Fs]]",slug:"piecestorage-fs",normalizedTitle:"[[piecestorage. fs]]",charIndex:3945},{level:2,title:"Log Settings",slug:"log-settings",normalizedTitle:"log settings",charIndex:4038},{level:2,title:"DAG Storage Settings",slug:"dag-storage-settings",normalizedTitle:"dag storage settings",charIndex:4105},{level:2,title:"Data Retrieval",slug:"data-retrieval",normalizedTitle:"data retrieval",charIndex:4352},{level:3,title:"[RetrievalPaymentAddress]",slug:"retrievalpaymentaddress",normalizedTitle:"[retrievalpaymentaddress]",charIndex:19313},{level:2,title:"Metric Configuration",slug:"metric-configuration",normalizedTitle:"metric configuration",charIndex:4432}],headersStr:"Data Transfer Parameter Configuration Basic Parameter Configuration droplet Network Configuration [API] [Libp2p] Venus Chain Service Configuration [Node] [Messager] [Signer] [AuthNode] Miner Configuration Database Configuration [Mysql] Sector Storage Configuration [[PieceStorage. Fs]] Log Settings DAG Storage Settings Data Retrieval [RetrievalPaymentAddress] Metric Configuration",content:'# Configurations of droplet\n\nA typical droplet configuration looks like this:\n\n\n# ****** Data transfer parameter configuration ***********\nSimultaneousTransfersForStorage = 20\nSimultaneousTransfersForStoragePerClient = 20\nSimultaneousTransfersForRetrieval = 20\n\n\n# ****** Global Basic Parameter Configuration ***********\n[CommonProvider]\n   ConsiderOnlineStorageDeals = true\n   Consider OfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1h0m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   TransferPath = ""\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   RetrievalPaymentAddress = ""\n   DealPublishAddress = []\n   [CommonProvider. RetrievalPricing]\n     Strategy = "default"\n     [CommonProvider. RetrievalPricing. Default]\n       VerifiedDealsFreeTransfer = true\n     [CommonProvider. RetrievalPricing. External]\n       Path = ""\n    \n\nEach miner can have independent basic parameters. If there is no configuration, the global configuration will be used. The configuration options are as follows:\n\n# ****** Miner Basic Parameter Configuration ********\n[[Miners]]\n   Addr = "f01000"\n   Account = "testuser01"\n  \n    ConsiderOnlineStorageDeals = true\n    ConsiderOfflineStorageDeals = true\n    ConsiderOnlineRetrievalDeals = true\n    ConsiderOfflineRetrievalDeals = true\n    ConsiderVerifiedStorageDeals = true\n    ConsiderUnverifiedStorageDeals = true\n    PieceCidBlocklist = []\n    ExpectedSealDuration = "24h0m0s"\n    MaxDealStartDelay = "336h0m0s"\n    PublishMsgPeriod = "1h0m0s"\n    MaxDealsPerPublishMsg = 8\n    MaxProviderCollateralMultiplier = 2\n    Filter = ""\n    RetrievalFilter = ""\n    TransferPath = "/mnt/transfer"\n    MaxPublishDealsFee = "0 FIL"\n    MaxMarketBalanceAddFee = "0 FIL"\n    RetrievalPaymentAddress = ""\n    DealPublishAddress = []\n    [CommonProvider. RetrievalPricing]\n      Strategy = "default"\n      [CommonProvider. RetrievalPricing. Default]\n        VerifiedDealsFreeTransfer = true\n      [CommonProvider. RetrievalPricing. External]\n        Path = ""\n\n# ****** droplet network configuration ***********\n[API]\n   ListenAddress = "/ip4/127.0.0.1/tcp/41235"\n   RemoteListenAddress = ""\n   Secret = "e647ee23cf95424162b974cd641b6a6479cbc7cb1209cc755f762c8248d50ba4"\n   Timeout = "30s"\n\n[Libp2p]\n   ListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n   AnnounceAddresses = []\n   NoAnnounceAddresses = []\n   PrivateKey = "08011240d47934b6fccf8b79786335a55ccc04bdb9c92866cae2c0cea2fdefe0f2e7c18650dfbde5dd126c2a23a0d1c60686d3dedd064b67ba97c6161dd8007f0675e"\n\n\n# ****** Venus Chain Service Configuration ***********\n[Node]\n   Url = "/ip4/192.168.200.151/tcp/3453"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[Messager]\n   Url = "/ip4/127.0.0.1/tcp/39812"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[Signer]\n   Type = "gateway"\n   Url = "/ip4/127.0.0.1/tcp/45132"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[AuthNode]\n   Url = "http://127.0.0.1:8989"\n   Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n\n\n# ********** Database Settings ********\n[Mysql]\nConnectionString = ""\nMaxOpenConn = 100\nMaxIdleConn = 100\nConnMaxLifeTime = "1m"\nDebug = false\n\n\n# ********* Sector Storage Setting ***********\n[Piece Storage]\nS3 = []\n\n[[PieceStorage. Fs]]\nName = "local"\nReadOnly = false\nPath = "./.vscode/test"\n\n\n# *********** Log Settings ***********\n[Journal]\nPath = "journal"\n\n\n# ********** DAG Storage Settings ********\n\n[DAGStore]\nRootDir = "/root/.droplet/dagstore"\nMaxConcurrentIndex = 5\nMaxConcurrentReadyFetches = 0\nMaxConcurrencyStorageCalls = 100\nGCInterval = "1m0s"\nTransient = ""\nIndex = ""\nUse Transient = false\n\n\n# ********** Data Retrieval Configuration ********\n\nRetrievalPaymentAddress = ""\n\n\n\n# ****** Metric Configuration ***********\n[Metrics]\n   Enabled = false\n   [Metrics. Exporter]\n     Type = "prometheus"\n     [Metrics. Exporter. Prometheus]\n       RegistryType = "define"\n       Namespace = ""\n       EndPoint = "/ip4/0.0.0.0/tcp/4568"\n       Path = "/debug/metrics"\n       ReportingPeriod = "10s"\n     [Metrics. Exporter. Graphite]\n       Namespace = ""\n       Host = "127.0.0.1"\n       Port = 4568\n       ReportingPeriod = "10s"\n\n\n\nNext, using the above as the base, we will walk you through basic parameters, network configuration, Venus component configuration and other configuration options.\n\n\n# Data Transfer Parameter Configuration\n\n# Store the maximum number of simultaneous transfers for storage deals\n# Integer type, default: 20\nSimultaneousTransfersForStorage = 20\n\n# The maximum number of simultaneous transfers of storage deal per client\n# Integer type, default: 20\nSimultaneousTransfersForStoragePerClient = 20\n\n# The maximum number of simultaneous data transfers\n# Integer type, default: 20\nSimultaneousTransfersForRetrieval = 20\n\n\n\n# Basic Parameter Configuration\n\nThe configuration mainly sets the preferences of how the market service should work. The functions of each configuration options are as follows:\n\n# Whether to accept online storage deals\n# Boolean value, defaults to true\nConsiderOnlineStorageDeals = true\n\n# Whether to accept offline storage deals\n# Boolean value, defaults to true\nConsiderOfflineStorageDeals = true\n\n# Whether to accept online data retrieval requests\n# Boolean value, defaults to true\nConsiderOnlineRetrievalDeals = true\n\n# Decide whether to accept offline data retrieval requests\n# Boolean value, defaults to true\nConsiderOfflineRetrievalDeals = true\n\n# Whether to accept verified storage deals\n# Boolean value, defaults to true\nConsiderVerifiedStorageDeals = true\n\n# Whether to accept unverified storage deals\n# Boolean value, defaults to true\nConsiderUnverifiedStorageDeals = true\n\n# Storage deal data blacklist\n# string array where each string is a CID, the default is empty\n# CID data in the blacklist will not be used to fullfil deals\nPieceCidBlocklist = []\n\n# The maximum expected time for the storage deal to be sealed\n# Time string, default: "24h0m0s"\n# The time string is a string composed of numbers and time units. Numbers include integers and decimals. Legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\nExpectedSealDuration = "24h0m0s"\n\n# Max delay before starting sealing a storage deal\n# Time string, default: "336h0m0s"\nMaxDealStartDelay = "336h0m0s"\n\n# Periods between publishing messages\n# Time string Default: "1h0m0s"\nPublishMsgPeriod = "5m0s"\n\n# The maximum number of deals in a publish message\n# Integer type, default is 8\nMaxDealsPerPublishMsg = 8\n\n# Maximum storage provider collateral multiplication factor\n# Integer type, default: 2\nMaxProviderCollateralMultiplier = 2\n\n# Filter storage deals through external executors, which can be executable programs or scripts\nFilter = ""\n\n# Filter retrieval requests through external executors, which can be executable programs or scripts\nRetrievalFilter = ""\n\n# Storage location of transferred deal data\n# string type, optional, when it is empty, the path of `DROPLET_REPO` is used by default\nTransferPath = ""\n\n# Maximum fee for sending deal related messages\n# FIL type, default: "0 FIL"\n# The format of the FIL type string is integer + " FIL"\nMaxPublishDealsFee = "0 FIL"\n\n# The maximum fee spent when sending escrow related message\n# FIL type, default: "0 FIL"\nMaxMarketBalanceAddFee = "0 FIL"\n\n# Reserved fields, this configuration option is invalid\n[Retrieval Pricing]\n\n# The type of strategy to use\n# String type, you can choose "default" and "external", the default is: "default"\n# The former uses the built-in default strategy, and the latter uses the strategy customized by the script provided externally\nStrategy = "default"\n\n[RetrievalPricing.Default]\n\n# For verified storage deal, whether the price is 0\n# boolean, defaults to "true"\n# Only taking effects when Strategy = "default" \nVerifiedDealsFreeTransfer = true\n\n[RetrievalPricing.External]\n# Path to scripts that define external policies\n# String type, Required if external strategy is selected\nPath = ""\n\n# This setting is a reserved field and is currently invalid\n[AddressConfig]\n\n# Whether to lower the priority of using the woker address to publish messages, if set to true, the woker address will be used to send messages only if there are no other applicable addresses\n# Boolean, default is false\nDisableWorkerFallback = false\n\n[[AddressConfig. DealPublishControl]]\n\n# Address to publish deal messages\n# string type, required\nAddr = ""\n\n# The account holding the corresponding address\n# string type, required\nAccount=""\n\n\n\n# droplet Network Configuration\n\nThis part of the configuration determines the interface between the droplet and others\n\n\n# [API]\n\nThe interface that market provides external services\n\n[API]\n# Market address where the service listens\n# String type, required, default: "/ip4/127.0.0.1/tcp/41235"\nListenAddress = "/ip4/127.0.0.1/tcp/41235"\n\n# reserved text\nRemoteListenAddress = ""\n\n# token used for encrypted communication\n# String type, optional (automatically generated if there is none)\nSecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# reserved text\nTimeout = "30s"\n\n\n\n# [Libp2p]\n\nThe communication address used by the Market when communicating in the P2P network\n\n[Libp2p]\n# Listening network address\n# string array, required default: ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# reserved text\nAnnounceAddresses = []\n\n# reserved text\nNoAnnounceAddresses = []\n\n# token used to generate peerid for p2p connections\n# string, optional (automatically generated if not set)\nPrivateKey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# Venus Chain Service Configuration\n\nWhen accessing Venus Chain Service, the API of the relevant component needs to be configured.\n\n\n# [Node]\n\nVenus chain service access configuration\n\n[Node]\n# Chain service\n# String type, Mandatory (can also be configured directly through the --node-url flag of the command line)\nUrl = "/ip4/192.168.200.128/tcp/3453"\n\n# Authentication token of Venus chain service\n# String type, Mandatory (can also be configured directly through the --auth-token flag of the command line)\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n\n# [Messager]\n\nvenus message service access configuration\n\n[Messager]\n# Message service\n# String type, optional (can also be configured directly through the --messager-url flag on the command line) It can be left blank when not connecting to the chain service\nUrl = "/ip4/192.168.200.128/tcp/39812/"\n\n# Authentication token of Venus chain service \n# String type, optional (can also be configured directly through the --auth-token flag of the command line) It can be left blank when not connecting to the chain service\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# [Signer]\n\nAccessing Venus signature service, which can be of two types: signature services directly provided by venus-wallet and indirect signature services provided by sophon-gateway\n\n[Signer]\n# Type of signature service\n# String type enumeration: "gateway", "wallet", "lotusnode"\nType = "gateway"\n\n# Signature service\n# String type, Mandatory (can also be configured directly through the --signer-url flag on the command line)\nUrl = "/ip4/192.168.200.128/tcp/45132/"\n\n# Authentication token of Venus chain service\n# String type, Mandatory (can also be configured directly through the --auth-token flag of the command line)\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# [AuthNode]\n\nVenus authentication service access configuration\n\n[AuthNode]\n\n# Authentication service\n# String type， Optional (can also be configured directly through the --signer-url flag of the command line) It can be left blank when not connecting to the chain service\nUrl = "http://192.168.200.128:8989"\n\n# Authentication token of Venus chain service\n# String type, Optional (can also be configured directly through the --auth-token flag of the command line) It can be left blank when not connecting to the chain service\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# Miner Configuration\n\nPreset miner information\n\n[[Miners]]\n# Miner\'s address\n# string type, required\nAddr=""\n\n# account name\n# string type required\nAccount = ""\n\n# Basic parameters, see above\n\n\nTIP\n\nBasic parameters will use CommonProvider when not configured, which is as follows:\n\n[[Miners]]\n   Addr = "f02472"\n   Account = "litao"\n\n\nIf one of the basic parameters is configured, then all items must be configured. For example:\n\n[[Miners]]\n   Addr = "f02472"\n   Account = "litao"\n   TransferPath = "/mnt/transfer/2472"\n\n\nSuch a configuration will cause other configuration items in the basic parameters to have zero values, instead of using the configuration in default CommonProvider. For example, ConsiderOnlineStorageDeals corresponding to f02472 will be equal to false, not true in CommonProvider.\n\nAt this point, it requires special attention. The correct configuration are as following:\n\n[[Miners]]\n   Addr = "f02472"\n   Account = "litao"\n   TransferPath = "/mnt/transfer/2472"\n   ConsiderOnlineStorageDeals = true\n   ConsiderOfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   RetrievalPaymentAddress = ""\n   [Retrieval Pricing]\n     Strategy = "default"\n     [RetrievalPricing. Default]\n       VerifiedDealsFreeTransfer = true\n     [RetrievalPricing.External]\n       Path = ""\n\n\nThis is not very flexible, and will be considered for optimization in the future.\n\n\n# Database Configuration\n\nThe setting of the storage database for the data generated during the operation of the droplet. BadgerDB and MySQLDB are currently supported, and BadgerDB is used by default.\n\n\n# [Mysql]\n\nMySQLDB configuration\n\n[Mysql]\n\n# The connection string used to connect to the MySQL database\n# String type, If you want to use MySQL database, this is required, otherwise use the default BadgerDB\nConnectionString = ""\n\n# Maximum number of open connections\n# Integer type, defaults to 100\nMaxOpenConn = 100\n\n# Maximum number of idle connections\n# Integer type, defaults to 100\nMaxIdleConn = 100\n\n# The maximum lifetime of a reusable connection\n# time string, default: "1m"\n# The time string is a string composed of numbers and time units. Numbers include integers and decimals. Legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\nConnMaxLifeTime = "1m"\n\n# Whether to output database-related debugging information\n# boolean default, false\nDebug = false\n\n\n\n# Sector Storage Configuration\n\nConfigure the storage space of imported data from droplet. Two types of data storage are supported: file system storage or object storage.\n\n\n# [[PieceStorage. Fs]]\n\nConfigure the local file system as sector storage For sectors with a large amount of data, it is recommended to mount the file system shared with sophon-cluster\n\n[Piece Storage]\n[[PieceStorage. Fs]]\n\n# The name of the storage space, which must be unique among all storage spaces in the market\n# string type, required\nName = "local"\n\n# Whether the storage space is writable (readOnly=false means writable)\n# boolean, default is false\nReadOnly = false\n\n# The path of the storage space in the local file system\n# string type, required\nPath = "/piecestorage/"\n\n\n\n[Piece Storage]\n[[PieceStorage.S3]]\n# The name of the storage space, which must be unique among all storage spaces in the market\n# string type, required\nName = "s3"\n\n# Whether the storage space is writable (readOnly=false means writable)\n# boolean, default is false\nReadOnly = true\n\n# Object storage service\n# string type, required\n# Support individual EndPoint ("oss-cn-shanghai.aliyuncs.com") or complete EndPoint Url ("http://oss-cn-shanghai.aliyuncs.com")\nEndPoint = "oss-cn-shanghai.aliyuncs.com"\n\n# Bucket name of the object storage service\n# string type, required\nBucket = "droplet"\n\n# Specify the subdirectory in the Bucket\n# string type, optional\nSubDir = "dir1/dir2"\n\n# Access the parameters of the object storage service\n# String type, AccessKey and SecretKey are mandatory, and Token is optional\nAccessKey = "LTAI5t6HiFgsqN6eVJ..."\nSecretKey = "AlFNH9NakUsVjVRxMHaaYP7p..."\nToken = ""\n\n\n\n\n# Log Settings\n\nConfigure the location where the log is stored during the use of the market.\n\n[Journal]\n\n# The location of the log storage\n# String type, The default is: "journal" (that is, the journal folder under the `DROPLET_REPO` folder)\nPath = "journal"\n\n\n\n# DAG Storage Settings\n\nConfiguration of the DAG datastore.\n\n# Refer to github.com/filecoin-project/dagstore/dagstore.go\n[DAGStore]\n\n# The root directory of the DAG data store\n# String type, Default: "<DROPLET_REPO_PATH>/dagstore"\nRootDir = "/root/.droplet/dagstore"\n\n# The maximum number of index jobs that can be performed at the same time\n# Integer type, defaults to 5, 0 means unlimited\nMaxConcurrentIndex = 5\n\n# The maximum number of unsealed deals that can be fetched at the same time\n# Integer type, defaults to 0, 0 means unlimited\nMaxConcurrentReadyFetches = 0\n\n# The maximum number of storage APIs that can be called simultaneously\n# Integer type, defaults to 100\nMaxConcurrencyStorageCalls = 100\n\n# DAG data garbage collection interval\n# time string, default: "1m0s"\n# The time string is a string composed of numbers and time units. Numbers include integers and decimals. Legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\nGCInterval = "1m0s"\n\n# Storage path for temporary files\n# string type, optional, if not set, the \'transients\' folder in the RooDir directory will be used\nTransient = ""\n\n# Path to store sector index data\n# String type, optional, if not set, the \'index\' folder under the RooDir directory will be used\nIndex = ""\n\n# Do not use local cache, read data source directly\n# Boolean type, defaults to false\nUse Transient = false\n\n\n\n# Data Retrieval\n\nRelevant configuration when obtaining the sector data stored in the deal\n\n\n# [RetrievalPaymentAddress]\n\nThe receiving address used for retrieval requests\n\nRetrievalPaymentAddress = ""\n\n\n\n# Metric Configuration\n\nConfigure Metric-related parameters.\n\n[Metrics]\n\n# Whether to enable Metric\n# boolean, default is false\nEnabled = false\n\n# Metric export settings\n[Metrics. Exporter]\n\n# The type of Metric export\n# String type, Optional values are "prometheus" and "graphite" Default is "prometheus"\nType = "prometheus"\n\n# Prometheus export settings\n[Metrics.Exporter.Prometheus]\n\n# type of register\n# String type, Optional, values are "define" and "default"; Default is "define"\n# define: use new registry; default: use default registry provided by Prometheus\nRegistryType = "define"\n\n# Namespaces\n# string type, defaults to ""\nNamespace = ""\n\n# listen address\n# String type, Default is "/ip4/0.0.0.0/tcp/4568"\nEndPoint = "/ip4/0.0.0.0/tcp/4568"\n\n# The access path of the Metrics indicator\n# string type, defaults to "/debug/metrics"\nPath = "/debug/metrics"\n\n# Metric index aggregation cycle\n# time string, defaults to "10s"\nReportingPeriod = "10s"\n\n\n# Graphite export settings\n[Metrics. Exporter. Graphite]\n\n# Namespaces\n# string type, defaults to ""\nNamespace = ""\n\n# listen address\n# String type, Default is "127.0.0.1"\nHost = "127.0.0.1"\n\n# Listen port\n# integer type, default is 4568\nPort = 4568\n\n# Metric index aggregation cycle\n# time string, defaults to "10s"\nReportingPeriod = "10s"\n',normalizedContent:'# configurations of droplet\n\na typical droplet configuration looks like this:\n\n\n# ****** data transfer parameter configuration ***********\nsimultaneoustransfersforstorage = 20\nsimultaneoustransfersforstorageperclient = 20\nsimultaneoustransfersforretrieval = 20\n\n\n# ****** global basic parameter configuration ***********\n[commonprovider]\n   consideronlinestoragedeals = true\n   consider offlinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1h0m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   transferpath = ""\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   retrievalpaymentaddress = ""\n   dealpublishaddress = []\n   [commonprovider. retrievalpricing]\n     strategy = "default"\n     [commonprovider. retrievalpricing. default]\n       verifieddealsfreetransfer = true\n     [commonprovider. retrievalpricing. external]\n       path = ""\n    \n\neach miner can have independent basic parameters. if there is no configuration, the global configuration will be used. the configuration options are as follows:\n\n# ****** miner basic parameter configuration ********\n[[miners]]\n   addr = "f01000"\n   account = "testuser01"\n  \n    consideronlinestoragedeals = true\n    considerofflinestoragedeals = true\n    consideronlineretrievaldeals = true\n    considerofflineretrievaldeals = true\n    considerverifiedstoragedeals = true\n    considerunverifiedstoragedeals = true\n    piececidblocklist = []\n    expectedsealduration = "24h0m0s"\n    maxdealstartdelay = "336h0m0s"\n    publishmsgperiod = "1h0m0s"\n    maxdealsperpublishmsg = 8\n    maxprovidercollateralmultiplier = 2\n    filter = ""\n    retrievalfilter = ""\n    transferpath = "/mnt/transfer"\n    maxpublishdealsfee = "0 fil"\n    maxmarketbalanceaddfee = "0 fil"\n    retrievalpaymentaddress = ""\n    dealpublishaddress = []\n    [commonprovider. retrievalpricing]\n      strategy = "default"\n      [commonprovider. retrievalpricing. default]\n        verifieddealsfreetransfer = true\n      [commonprovider. retrievalpricing. external]\n        path = ""\n\n# ****** droplet network configuration ***********\n[api]\n   listenaddress = "/ip4/127.0.0.1/tcp/41235"\n   remotelistenaddress = ""\n   secret = "e647ee23cf95424162b974cd641b6a6479cbc7cb1209cc755f762c8248d50ba4"\n   timeout = "30s"\n\n[libp2p]\n   listenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n   announceaddresses = []\n   noannounceaddresses = []\n   privatekey = "08011240d47934b6fccf8b79786335a55ccc04bdb9c92866cae2c0cea2fdefe0f2e7c18650dfbde5dd126c2a23a0d1c60686d3dedd064b67ba97c6161dd8007f0675e"\n\n\n# ****** venus chain service configuration ***********\n[node]\n   url = "/ip4/192.168.200.151/tcp/3453"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[messager]\n   url = "/ip4/127.0.0.1/tcp/39812"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[signer]\n   type = "gateway"\n   url = "/ip4/127.0.0.1/tcp/45132"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[authnode]\n   url = "http://127.0.0.1:8989"\n   token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n\n\n# ********** database settings ********\n[mysql]\nconnectionstring = ""\nmaxopenconn = 100\nmaxidleconn = 100\nconnmaxlifetime = "1m"\ndebug = false\n\n\n# ********* sector storage setting ***********\n[piece storage]\ns3 = []\n\n[[piecestorage. fs]]\nname = "local"\nreadonly = false\npath = "./.vscode/test"\n\n\n# *********** log settings ***********\n[journal]\npath = "journal"\n\n\n# ********** dag storage settings ********\n\n[dagstore]\nrootdir = "/root/.droplet/dagstore"\nmaxconcurrentindex = 5\nmaxconcurrentreadyfetches = 0\nmaxconcurrencystoragecalls = 100\ngcinterval = "1m0s"\ntransient = ""\nindex = ""\nuse transient = false\n\n\n# ********** data retrieval configuration ********\n\nretrievalpaymentaddress = ""\n\n\n\n# ****** metric configuration ***********\n[metrics]\n   enabled = false\n   [metrics. exporter]\n     type = "prometheus"\n     [metrics. exporter. prometheus]\n       registrytype = "define"\n       namespace = ""\n       endpoint = "/ip4/0.0.0.0/tcp/4568"\n       path = "/debug/metrics"\n       reportingperiod = "10s"\n     [metrics. exporter. graphite]\n       namespace = ""\n       host = "127.0.0.1"\n       port = 4568\n       reportingperiod = "10s"\n\n\n\nnext, using the above as the base, we will walk you through basic parameters, network configuration, venus component configuration and other configuration options.\n\n\n# data transfer parameter configuration\n\n# store the maximum number of simultaneous transfers for storage deals\n# integer type, default: 20\nsimultaneoustransfersforstorage = 20\n\n# the maximum number of simultaneous transfers of storage deal per client\n# integer type, default: 20\nsimultaneoustransfersforstorageperclient = 20\n\n# the maximum number of simultaneous data transfers\n# integer type, default: 20\nsimultaneoustransfersforretrieval = 20\n\n\n\n# basic parameter configuration\n\nthe configuration mainly sets the preferences of how the market service should work. the functions of each configuration options are as follows:\n\n# whether to accept online storage deals\n# boolean value, defaults to true\nconsideronlinestoragedeals = true\n\n# whether to accept offline storage deals\n# boolean value, defaults to true\nconsiderofflinestoragedeals = true\n\n# whether to accept online data retrieval requests\n# boolean value, defaults to true\nconsideronlineretrievaldeals = true\n\n# decide whether to accept offline data retrieval requests\n# boolean value, defaults to true\nconsiderofflineretrievaldeals = true\n\n# whether to accept verified storage deals\n# boolean value, defaults to true\nconsiderverifiedstoragedeals = true\n\n# whether to accept unverified storage deals\n# boolean value, defaults to true\nconsiderunverifiedstoragedeals = true\n\n# storage deal data blacklist\n# string array where each string is a cid, the default is empty\n# cid data in the blacklist will not be used to fullfil deals\npiececidblocklist = []\n\n# the maximum expected time for the storage deal to be sealed\n# time string, default: "24h0m0s"\n# the time string is a string composed of numbers and time units. numbers include integers and decimals. legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\nexpectedsealduration = "24h0m0s"\n\n# max delay before starting sealing a storage deal\n# time string, default: "336h0m0s"\nmaxdealstartdelay = "336h0m0s"\n\n# periods between publishing messages\n# time string default: "1h0m0s"\npublishmsgperiod = "5m0s"\n\n# the maximum number of deals in a publish message\n# integer type, default is 8\nmaxdealsperpublishmsg = 8\n\n# maximum storage provider collateral multiplication factor\n# integer type, default: 2\nmaxprovidercollateralmultiplier = 2\n\n# filter storage deals through external executors, which can be executable programs or scripts\nfilter = ""\n\n# filter retrieval requests through external executors, which can be executable programs or scripts\nretrievalfilter = ""\n\n# storage location of transferred deal data\n# string type, optional, when it is empty, the path of `droplet_repo` is used by default\ntransferpath = ""\n\n# maximum fee for sending deal related messages\n# fil type, default: "0 fil"\n# the format of the fil type string is integer + " fil"\nmaxpublishdealsfee = "0 fil"\n\n# the maximum fee spent when sending escrow related message\n# fil type, default: "0 fil"\nmaxmarketbalanceaddfee = "0 fil"\n\n# reserved fields, this configuration option is invalid\n[retrieval pricing]\n\n# the type of strategy to use\n# string type, you can choose "default" and "external", the default is: "default"\n# the former uses the built-in default strategy, and the latter uses the strategy customized by the script provided externally\nstrategy = "default"\n\n[retrievalpricing.default]\n\n# for verified storage deal, whether the price is 0\n# boolean, defaults to "true"\n# only taking effects when strategy = "default" \nverifieddealsfreetransfer = true\n\n[retrievalpricing.external]\n# path to scripts that define external policies\n# string type, required if external strategy is selected\npath = ""\n\n# this setting is a reserved field and is currently invalid\n[addressconfig]\n\n# whether to lower the priority of using the woker address to publish messages, if set to true, the woker address will be used to send messages only if there are no other applicable addresses\n# boolean, default is false\ndisableworkerfallback = false\n\n[[addressconfig. dealpublishcontrol]]\n\n# address to publish deal messages\n# string type, required\naddr = ""\n\n# the account holding the corresponding address\n# string type, required\naccount=""\n\n\n\n# droplet network configuration\n\nthis part of the configuration determines the interface between the droplet and others\n\n\n# [api]\n\nthe interface that market provides external services\n\n[api]\n# market address where the service listens\n# string type, required, default: "/ip4/127.0.0.1/tcp/41235"\nlistenaddress = "/ip4/127.0.0.1/tcp/41235"\n\n# reserved text\nremotelistenaddress = ""\n\n# token used for encrypted communication\n# string type, optional (automatically generated if there is none)\nsecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# reserved text\ntimeout = "30s"\n\n\n\n# [libp2p]\n\nthe communication address used by the market when communicating in the p2p network\n\n[libp2p]\n# listening network address\n# string array, required default: ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nlistenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# reserved text\nannounceaddresses = []\n\n# reserved text\nnoannounceaddresses = []\n\n# token used to generate peerid for p2p connections\n# string, optional (automatically generated if not set)\nprivatekey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus chain service configuration\n\nwhen accessing venus chain service, the api of the relevant component needs to be configured.\n\n\n# [node]\n\nvenus chain service access configuration\n\n[node]\n# chain service\n# string type, mandatory (can also be configured directly through the --node-url flag of the command line)\nurl = "/ip4/192.168.200.128/tcp/3453"\n\n# authentication token of venus chain service\n# string type, mandatory (can also be configured directly through the --auth-token flag of the command line)\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n\n# [messager]\n\nvenus message service access configuration\n\n[messager]\n# message service\n# string type, optional (can also be configured directly through the --messager-url flag on the command line) it can be left blank when not connecting to the chain service\nurl = "/ip4/192.168.200.128/tcp/39812/"\n\n# authentication token of venus chain service \n# string type, optional (can also be configured directly through the --auth-token flag of the command line) it can be left blank when not connecting to the chain service\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# [signer]\n\naccessing venus signature service, which can be of two types: signature services directly provided by venus-wallet and indirect signature services provided by sophon-gateway\n\n[signer]\n# type of signature service\n# string type enumeration: "gateway", "wallet", "lotusnode"\ntype = "gateway"\n\n# signature service\n# string type, mandatory (can also be configured directly through the --signer-url flag on the command line)\nurl = "/ip4/192.168.200.128/tcp/45132/"\n\n# authentication token of venus chain service\n# string type, mandatory (can also be configured directly through the --auth-token flag of the command line)\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# [authnode]\n\nvenus authentication service access configuration\n\n[authnode]\n\n# authentication service\n# string type， optional (can also be configured directly through the --signer-url flag of the command line) it can be left blank when not connecting to the chain service\nurl = "http://192.168.200.128:8989"\n\n# authentication token of venus chain service\n# string type, optional (can also be configured directly through the --auth-token flag of the command line) it can be left blank when not connecting to the chain service\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# miner configuration\n\npreset miner information\n\n[[miners]]\n# miner\'s address\n# string type, required\naddr=""\n\n# account name\n# string type required\naccount = ""\n\n# basic parameters, see above\n\n\ntip\n\nbasic parameters will use commonprovider when not configured, which is as follows:\n\n[[miners]]\n   addr = "f02472"\n   account = "litao"\n\n\nif one of the basic parameters is configured, then all items must be configured. for example:\n\n[[miners]]\n   addr = "f02472"\n   account = "litao"\n   transferpath = "/mnt/transfer/2472"\n\n\nsuch a configuration will cause other configuration items in the basic parameters to have zero values, instead of using the configuration in default commonprovider. for example, consideronlinestoragedeals corresponding to f02472 will be equal to false, not true in commonprovider.\n\nat this point, it requires special attention. the correct configuration are as following:\n\n[[miners]]\n   addr = "f02472"\n   account = "litao"\n   transferpath = "/mnt/transfer/2472"\n   consideronlinestoragedeals = true\n   considerofflinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   retrievalpaymentaddress = ""\n   [retrieval pricing]\n     strategy = "default"\n     [retrievalpricing. default]\n       verifieddealsfreetransfer = true\n     [retrievalpricing.external]\n       path = ""\n\n\nthis is not very flexible, and will be considered for optimization in the future.\n\n\n# database configuration\n\nthe setting of the storage database for the data generated during the operation of the droplet. badgerdb and mysqldb are currently supported, and badgerdb is used by default.\n\n\n# [mysql]\n\nmysqldb configuration\n\n[mysql]\n\n# the connection string used to connect to the mysql database\n# string type, if you want to use mysql database, this is required, otherwise use the default badgerdb\nconnectionstring = ""\n\n# maximum number of open connections\n# integer type, defaults to 100\nmaxopenconn = 100\n\n# maximum number of idle connections\n# integer type, defaults to 100\nmaxidleconn = 100\n\n# the maximum lifetime of a reusable connection\n# time string, default: "1m"\n# the time string is a string composed of numbers and time units. numbers include integers and decimals. legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\nconnmaxlifetime = "1m"\n\n# whether to output database-related debugging information\n# boolean default, false\ndebug = false\n\n\n\n# sector storage configuration\n\nconfigure the storage space of imported data from droplet. two types of data storage are supported: file system storage or object storage.\n\n\n# [[piecestorage. fs]]\n\nconfigure the local file system as sector storage for sectors with a large amount of data, it is recommended to mount the file system shared with sophon-cluster\n\n[piece storage]\n[[piecestorage. fs]]\n\n# the name of the storage space, which must be unique among all storage spaces in the market\n# string type, required\nname = "local"\n\n# whether the storage space is writable (readonly=false means writable)\n# boolean, default is false\nreadonly = false\n\n# the path of the storage space in the local file system\n# string type, required\npath = "/piecestorage/"\n\n\n\n[piece storage]\n[[piecestorage.s3]]\n# the name of the storage space, which must be unique among all storage spaces in the market\n# string type, required\nname = "s3"\n\n# whether the storage space is writable (readonly=false means writable)\n# boolean, default is false\nreadonly = true\n\n# object storage service\n# string type, required\n# support individual endpoint ("oss-cn-shanghai.aliyuncs.com") or complete endpoint url ("http://oss-cn-shanghai.aliyuncs.com")\nendpoint = "oss-cn-shanghai.aliyuncs.com"\n\n# bucket name of the object storage service\n# string type, required\nbucket = "droplet"\n\n# specify the subdirectory in the bucket\n# string type, optional\nsubdir = "dir1/dir2"\n\n# access the parameters of the object storage service\n# string type, accesskey and secretkey are mandatory, and token is optional\naccesskey = "ltai5t6hifgsqn6evj..."\nsecretkey = "alfnh9nakusvjvrxmhaayp7p..."\ntoken = ""\n\n\n\n\n# log settings\n\nconfigure the location where the log is stored during the use of the market.\n\n[journal]\n\n# the location of the log storage\n# string type, the default is: "journal" (that is, the journal folder under the `droplet_repo` folder)\npath = "journal"\n\n\n\n# dag storage settings\n\nconfiguration of the dag datastore.\n\n# refer to github.com/filecoin-project/dagstore/dagstore.go\n[dagstore]\n\n# the root directory of the dag data store\n# string type, default: "<droplet_repo_path>/dagstore"\nrootdir = "/root/.droplet/dagstore"\n\n# the maximum number of index jobs that can be performed at the same time\n# integer type, defaults to 5, 0 means unlimited\nmaxconcurrentindex = 5\n\n# the maximum number of unsealed deals that can be fetched at the same time\n# integer type, defaults to 0, 0 means unlimited\nmaxconcurrentreadyfetches = 0\n\n# the maximum number of storage apis that can be called simultaneously\n# integer type, defaults to 100\nmaxconcurrencystoragecalls = 100\n\n# dag data garbage collection interval\n# time string, default: "1m0s"\n# the time string is a string composed of numbers and time units. numbers include integers and decimals. legal units include "ns", "us" (or "µs"), "ms", "s", "m" , "h".\ngcinterval = "1m0s"\n\n# storage path for temporary files\n# string type, optional, if not set, the \'transients\' folder in the roodir directory will be used\ntransient = ""\n\n# path to store sector index data\n# string type, optional, if not set, the \'index\' folder under the roodir directory will be used\nindex = ""\n\n# do not use local cache, read data source directly\n# boolean type, defaults to false\nuse transient = false\n\n\n\n# data retrieval\n\nrelevant configuration when obtaining the sector data stored in the deal\n\n\n# [retrievalpaymentaddress]\n\nthe receiving address used for retrieval requests\n\nretrievalpaymentaddress = ""\n\n\n\n# metric configuration\n\nconfigure metric-related parameters.\n\n[metrics]\n\n# whether to enable metric\n# boolean, default is false\nenabled = false\n\n# metric export settings\n[metrics. exporter]\n\n# the type of metric export\n# string type, optional values are "prometheus" and "graphite" default is "prometheus"\ntype = "prometheus"\n\n# prometheus export settings\n[metrics.exporter.prometheus]\n\n# type of register\n# string type, optional, values are "define" and "default"; default is "define"\n# define: use new registry; default: use default registry provided by prometheus\nregistrytype = "define"\n\n# namespaces\n# string type, defaults to ""\nnamespace = ""\n\n# listen address\n# string type, default is "/ip4/0.0.0.0/tcp/4568"\nendpoint = "/ip4/0.0.0.0/tcp/4568"\n\n# the access path of the metrics indicator\n# string type, defaults to "/debug/metrics"\npath = "/debug/metrics"\n\n# metric index aggregation cycle\n# time string, defaults to "10s"\nreportingperiod = "10s"\n\n\n# graphite export settings\n[metrics. exporter. graphite]\n\n# namespaces\n# string type, defaults to ""\nnamespace = ""\n\n# listen address\n# string type, default is "127.0.0.1"\nhost = "127.0.0.1"\n\n# listen port\n# integer type, default is 4568\nport = 4568\n\n# metric index aggregation cycle\n# time string, defaults to "10s"\nreportingperiod = "10s"\n',charsets:{}},{title:"Upgrade market v1 to market v2",frontmatter:{},regularPath:"/operation/migrate-v1-to-v2.html",relativePath:"operation/migrate-v1-to-v2.md",key:"v-c14010f6",path:"/operation/migrate-v1-to-v2.html",headers:[{level:2,title:"Upgrade market v1 to market v2",slug:"upgrade-market-v1-to-market-v2",normalizedTitle:"upgrade market v1 to market v2",charIndex:2}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Upgrade market v1 to market v2",content:"# Upgrade market v1 to market v2\n\nWARNING\n\nBefore upgrading, please make sure that there are no deals in the state of Publish, Publishing or StorageDealAwaitingPreCommit.\n\nStop venus-market process.\n\n# grep [PID] of venus-market process\n$ ps -ef | grep market\nroot   6704  2.3  0.0 2361236 43148 pts/2   Sl   17:33   0:18 ./venus-market run\n\n$ kill -9 [PID]\n\n\nBackup venus-market repo. Default path is ~/.venusmarket.\n\n$ cp -a ~/.venusmarket ~/.venusmarket-bak\n\n\n(Optional) Export v1 data\n\nTIP\n\nAs v1 meta data structure depreciates, in order to view deals sealed using v1, an export tools could be built to export v1 data and import data into v2.\n\nTIP\n\nBuild export tool.\n\ngit clone https://github.com/filecoin-project/venus-market.git\ngit checkout feat/export_v1_data\n\nmake deps\ncd cli/market_export\ngo build\n\n\nTIP\n\nExport v1 data.\n\n$ ./market_export --repo <VENUS_MARKET_REPO> export <EXPORT_DATA_FILE_PATH>\n\n\nBuild and init market v2 (2.0.0-rc2 or higher). Please refer to market v2 document for more details.\n\n(Optional) Lastly import v1 data to market v2.\n\n$ ./market_export --repo <VENUS_MARKET_REPO> migrate import_v1 <EXPORT_DATA_FILE_PATH>\n",normalizedContent:"# upgrade market v1 to market v2\n\nwarning\n\nbefore upgrading, please make sure that there are no deals in the state of publish, publishing or storagedealawaitingprecommit.\n\nstop venus-market process.\n\n# grep [pid] of venus-market process\n$ ps -ef | grep market\nroot   6704  2.3  0.0 2361236 43148 pts/2   sl   17:33   0:18 ./venus-market run\n\n$ kill -9 [pid]\n\n\nbackup venus-market repo. default path is ~/.venusmarket.\n\n$ cp -a ~/.venusmarket ~/.venusmarket-bak\n\n\n(optional) export v1 data\n\ntip\n\nas v1 meta data structure depreciates, in order to view deals sealed using v1, an export tools could be built to export v1 data and import data into v2.\n\ntip\n\nbuild export tool.\n\ngit clone https://github.com/filecoin-project/venus-market.git\ngit checkout feat/export_v1_data\n\nmake deps\ncd cli/market_export\ngo build\n\n\ntip\n\nexport v1 data.\n\n$ ./market_export --repo <venus_market_repo> export <export_data_file_path>\n\n\nbuild and init market v2 (2.0.0-rc2 or higher). please refer to market v2 document for more details.\n\n(optional) lastly import v1 data to market v2.\n\n$ ./market_export --repo <venus_market_repo> migrate import_v1 <export_data_file_path>\n",charsets:{cjk:!0}},{title:"Preping large datasets",frontmatter:{},regularPath:"/operation/prep-datasets.html",relativePath:"operation/prep-datasets.md",key:"v-b712a076",path:"/operation/prep-datasets.html",headers:[{level:2,title:"Preping large datasets",slug:"preping-large-datasets",normalizedTitle:"preping large datasets",charIndex:2},{level:2,title:"Download large datasets",slug:"download-large-datasets",normalizedTitle:"download large datasets",charIndex:225},{level:2,title:"go-graphsplit",slug:"go-graphsplit",normalizedTitle:"go-graphsplit",charIndex:351},{level:2,title:"Getting piece files",slug:"getting-piece-files",normalizedTitle:"getting piece files",charIndex:594},{level:2,title:"Sealing the deal",slug:"sealing-the-deal",normalizedTitle:"sealing the deal",charIndex:1850},{level:3,title:"venus-market",slug:"venus-market",normalizedTitle:"venus-market",charIndex:1654},{level:3,title:"venus-sector-manager",slug:"venus-sector-manager",normalizedTitle:"venus-sector-manager",charIndex:1671}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Preping large datasets Download large datasets go-graphsplit Getting piece files Sealing the deal venus-market venus-sector-manager",content:'# Preping large datasets\n\nA typic workflow for preping large datasets are as following:\n\n * Download datasets\n * Process data into piece files\n * Store them to pieceStore of both venus-cluster and venus-maket for sealing\n\n\n# Download large datasets\n\nDownload large datasets from your storage client to your storage system by means of your choice.\n\n\n# go-graphsplit\n\nInstall go-graphsplit for splitting deal data.\n\ngit clone https://github.com/filedrive-team/go-graphsplit.git\n\ncd go-graphsplit\n\n# get submodules\ngit submodule update --init --recursive\n\n# build filecoin-ffi\nmake ffi\n\nmake\n\n\n\n# Getting piece files\n\nUse TMPDIR to specify where the cache files for processing piece files should be stored.\n\nTIP\n\nThe process requires large volumes of disk IOs. A Bus error may indicate that you may need faster disks.\n\n$ TMPDIR=/mnt/nvme01 /root/graphsplit chunk \\\n--car-dir=/mnt/nas/venus-data/16g-pice-data \\\n--slice-size=1073741824 \\\n--parallel=1 \\\n--graph-name=gs-test \\\n--calc-commp \\\n--rename \\\n--parent-path=/mnt/nas/venus-data/tess/ \\\n/mnt/nas/venus-data/tess/ >> /root/nas-nas-para15-30.log 2>&1 &\n\n\nTIP\n\n--car-dir: Specify the path where the CAR files should be stored; --slice-size: Specify the output piece file size (byte as unit); Eg, 1024 * 1024 * 1024 = 1073741824 means 1G of piece file; It is recommended to use either 16G(17179869184) or 32G(34359738368); --parallel: Max parallel processes allowed; --calc-commp: Compute value of commp; --rename: Convert CAR files to piece data;\n\nWhen processing is done, there will be many piece files and a manifest.csv under --car-dir. Transfer piece files to the path defined by pieceStore for both venus-market and venus-sector-manager.\n\nTIP\n\nmanifest.csv contains information for proposing storage deals.\n\nTIP\n\nCheck deal start epoch and make sure to seal the deal before the deal starts.\n\n\n# Sealing the deal\n\n\n# venus-market\n\nCheck deal status using venus-market.\n\nTIP\n\nIf deal status is Undefined, it means deal is waiting for venus-sector-manager to prepare the deal sector id.\n\nvenus-market storage-deals list\n/root/.venusmarket\nProposalCid  DealId  State              PieceState  Client                                     Provider  Size    Price  Duration\n...hbgguc6a  172163  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...t2wycjiq  172164  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...5tkvirfe  172165  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...btsawgt2  172166  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...feczgggg  172167  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n\n\n\n# venus-sector-manager\n\nPlease make sure the configurations of venus-sector-manager are set to take storage deals.\n\nTIP\n\nCheck if both Enabled and EnableDeals are set to true in .venus-sector-manager/sector-manager.cfg\n\n[Miners.Sector]\nInitNumber = 1000\nMaxNumber = 1000000\nEnabled = true\nEnableDeals = true\nLifetimeDays = 210\n\n\nTIP\n\nPlease make sure that RPC configuration of venus-worker is properly set with token informantion so that it can fetch Piece data from path defined in venus-sector-manager.\n\n[sector_manager]\n  rpc_client.addr = "/ip4/192.168.100.1/tcp/1789"\n  rpc_client.headers = { User-Agent = "jsonrpc-core-client" }\n  piece_token = "eyJhbGciOiJIUzxxxxxxxx.eyJuYW1lIjoibGpoOG1xxx.gY3ymGxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n  \n  \n[[sealing_thread]]\n  sealing.enable_deals = true\n  sealing.max_retries = 5\n',normalizedContent:'# preping large datasets\n\na typic workflow for preping large datasets are as following:\n\n * download datasets\n * process data into piece files\n * store them to piecestore of both venus-cluster and venus-maket for sealing\n\n\n# download large datasets\n\ndownload large datasets from your storage client to your storage system by means of your choice.\n\n\n# go-graphsplit\n\ninstall go-graphsplit for splitting deal data.\n\ngit clone https://github.com/filedrive-team/go-graphsplit.git\n\ncd go-graphsplit\n\n# get submodules\ngit submodule update --init --recursive\n\n# build filecoin-ffi\nmake ffi\n\nmake\n\n\n\n# getting piece files\n\nuse tmpdir to specify where the cache files for processing piece files should be stored.\n\ntip\n\nthe process requires large volumes of disk ios. a bus error may indicate that you may need faster disks.\n\n$ tmpdir=/mnt/nvme01 /root/graphsplit chunk \\\n--car-dir=/mnt/nas/venus-data/16g-pice-data \\\n--slice-size=1073741824 \\\n--parallel=1 \\\n--graph-name=gs-test \\\n--calc-commp \\\n--rename \\\n--parent-path=/mnt/nas/venus-data/tess/ \\\n/mnt/nas/venus-data/tess/ >> /root/nas-nas-para15-30.log 2>&1 &\n\n\ntip\n\n--car-dir: specify the path where the car files should be stored; --slice-size: specify the output piece file size (byte as unit); eg, 1024 * 1024 * 1024 = 1073741824 means 1g of piece file; it is recommended to use either 16g(17179869184) or 32g(34359738368); --parallel: max parallel processes allowed; --calc-commp: compute value of commp; --rename: convert car files to piece data;\n\nwhen processing is done, there will be many piece files and a manifest.csv under --car-dir. transfer piece files to the path defined by piecestore for both venus-market and venus-sector-manager.\n\ntip\n\nmanifest.csv contains information for proposing storage deals.\n\ntip\n\ncheck deal start epoch and make sure to seal the deal before the deal starts.\n\n\n# sealing the deal\n\n\n# venus-market\n\ncheck deal status using venus-market.\n\ntip\n\nif deal status is undefined, it means deal is waiting for venus-sector-manager to prepare the deal sector id.\n\nvenus-market storage-deals list\n/root/.venusmarket\nproposalcid  dealid  state              piecestate  client                                     provider  size    price  duration\n...hbgguc6a  172163  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...t2wycjiq  172164  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...5tkvirfe  172165  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...btsawgt2  172166  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...feczgggg  172167  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n\n\n\n# venus-sector-manager\n\nplease make sure the configurations of venus-sector-manager are set to take storage deals.\n\ntip\n\ncheck if both enabled and enabledeals are set to true in .venus-sector-manager/sector-manager.cfg\n\n[miners.sector]\ninitnumber = 1000\nmaxnumber = 1000000\nenabled = true\nenabledeals = true\nlifetimedays = 210\n\n\ntip\n\nplease make sure that rpc configuration of venus-worker is properly set with token informantion so that it can fetch piece data from path defined in venus-sector-manager.\n\n[sector_manager]\n  rpc_client.addr = "/ip4/192.168.100.1/tcp/1789"\n  rpc_client.headers = { user-agent = "jsonrpc-core-client" }\n  piece_token = "eyjhbgcioijiuzxxxxxxxx.eyjuyw1lijoibgpoog1xxx.gy3ymgxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n  \n  \n[[sealing_thread]]\n  sealing.enable_deals = true\n  sealing.max_retries = 5\n',charsets:{}},{title:"Have a question?",frontmatter:{editLink:!1},regularPath:"/questions.html",relativePath:"questions.md",key:"v-2a808976",path:"/questions.html",headers:[{level:3,title:"Have a question?",slug:"have-a-question",normalizedTitle:"have a question?",charIndex:2}],lastUpdated:"10/25/2023, 7:37:37 AM",headersStr:"Have a question?",content:"# Have a question?\n\nFilecoin.io - general information about the Filecoin network\n\nCommunity Channels - links to Filecoin community chat and forum",normalizedContent:"# have a question?\n\nfilecoin.io - general information about the filecoin network\n\ncommunity channels - links to filecoin community chat and forum",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/assets/droplet-hero.jpg",actionText:"快速上手 →",actionLink:"/zh/intro/",footer:"MIT Apache dual Licensed"},regularPath:"/zh/",relativePath:"zh/README.md",key:"v-ddaeefb4",path:"/zh/",lastUpdated:"2023/10/25 07:37:37",headersStr:null,content:"存储&检索基建\n\n具有灵活部署方案的企业级 SP 的 Filecoin 存储和检索基础设施\n\n\n多 SP 节点支持\n\n支持为多个 SP 节点提供市场服务，节省 SP 的 CAPex 和 OPex 支出\n\n\n轻量级客户端\n\n无需部署自己的本地节点服务即可发送存储订单",normalizedContent:"存储&检索基建\n\n具有灵活部署方案的企业级 sp 的 filecoin 存储和检索基础设施\n\n\n多 sp 节点支持\n\n支持为多个 sp 节点提供市场服务，节省 sp 的 capex 和 opex 支出\n\n\n轻量级客户端\n\n无需部署自己的本地节点服务即可发送存储订单",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/zh/about/",relativePath:"zh/about/README.md",key:"v-1569bea6",path:"/zh/about/",headers:[{level:2,title:"使命，愿景，价值观",slug:"使命-愿景-价值观",normalizedTitle:"使命，愿景，价值观",charIndex:2},{level:2,title:"联系方式",slug:"联系方式",normalizedTitle:"联系方式",charIndex:100},{level:2,title:"其他资源",slug:"其他资源",normalizedTitle:"其他资源",charIndex:172}],lastUpdated:"2023/10/25 07:37:37",headersStr:"使命，愿景，价值观 联系方式 其他资源",content:"# 使命，愿景，价值观\n\n * ❗️使命：建设 Filecoin 基础设施和工具，支持生态繁荣发展\n * 🌏 愿景：人人都能参与 Filecoin 生态\n * ☯️ 价值观：开放并且去信任\n\n\n# 联系方式\n\n * Slack:#fil-venus, Slack:#fil-venus-cn, venus@ipfsforce.com\n\n\n# 其他资源\n\n * venus-docs: venus.filecoin.io\n * VenusHub: venushub.io\n * Github: droplet, venus, damocles\n * Social Media: Twitter, Wechat\n * 安全审计报告：link",normalizedContent:"# 使命，愿景，价值观\n\n * ❗️使命：建设 filecoin 基础设施和工具，支持生态繁荣发展\n * 🌏 愿景：人人都能参与 filecoin 生态\n * ☯️ 价值观：开放并且去信任\n\n\n# 联系方式\n\n * slack:#fil-venus, slack:#fil-venus-cn, venus@ipfsforce.com\n\n\n# 其他资源\n\n * venus-docs: venus.filecoin.io\n * venushub: venushub.io\n * github: droplet, venus, damocles\n * social media: twitter, wechat\n * 安全审计报告：link",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/zh/developer/",relativePath:"zh/developer/README.md",key:"v-3982b6c6",path:"/zh/developer/",headers:[{level:2,title:"Simple Summary (概述)",slug:"simple-summary-概述",normalizedTitle:"simple summary (概述)",charIndex:13},{level:2,title:"Abstract (功能简介)",slug:"abstract-功能简介",normalizedTitle:"abstract (功能简介)",charIndex:60},{level:2,title:"Motivation (来源/背景)",slug:"motivation-来源-背景",normalizedTitle:"motivation (来源/背景)",charIndex:183},{level:3,title:"延伸问题",slug:"延伸问题",normalizedTitle:"延伸问题",charIndex:1073},{level:2,title:"Specification (feature Spec)",slug:"specification-feature-spec",normalizedTitle:"specification (feature spec)",charIndex:1188},{level:3,title:"属性配置",slug:"属性配置",normalizedTitle:"属性配置",charIndex:4},{level:3,title:"用户界面",slug:"用户界面",normalizedTitle:"用户界面",charIndex:4062},{level:2,title:"Design Rationale (设计思路)",slug:"design-rationale-设计思路",normalizedTitle:"design rationale (设计思路)",charIndex:4141},{level:2,title:"Backwards Compatibility（兼容性）",slug:"backwards-compatibility-兼容性",normalizedTitle:"backwards compatibility（兼容性）",charIndex:4169},{level:2,title:"Test Cases (测试用例)",slug:"test-cases-测试用例",normalizedTitle:"test cases (测试用例)",charIndex:4234},{level:2,title:"Security Considerations (安全考量)",slug:"security-considerations-安全考量",normalizedTitle:"security considerations (安全考量)",charIndex:4297},{level:2,title:"Implementation（实施）",slug:"implementation-实施",normalizedTitle:"implementation（实施）",charIndex:4332}],lastUpdated:"2023/10/25 07:37:37",headersStr:"Simple Summary (概述) Abstract (功能简介) Motivation (来源/背景) 延伸问题 Specification (feature Spec) 属性配置 用户界面 Design Rationale (设计思路) Backwards Compatibility（兼容性） Test Cases (测试用例) Security Considerations (安全考量) Implementation（实施）",content:'# 市场属性配置\n\n\n# Simple Summary (概述)\n\n矿工可以自己配置存储市场和检索市场的属性。\n\n\n# Abstract (功能简介)\n\nvenus-market 支持矿工的市场交易属性可独立配置，并可以由矿工自己配置，而不是通过链服务维护人员间接进行。\n\n关联：\n\n * [ ] 提案的issue\n * [ ] 社区 discussion\n\n\n# Motivation (来源/背景)\n\nFilecoin 网络中的矿工参与市场交易需要一些属性来保证交易过程正常进行，也可以通过一些属性来设置自己的交易取向，如：仅接受可验证订单、只进行离线订单等。可配置属性如下：\n\n# Default config:\nConsiderOnlineStorageDeals = true\nConsiderOfflineStorageDeals = true\nConsiderOnlineRetrievalDeals = true\nConsiderOfflineRetrievalDeals = true\nConsiderVerifiedStorageDeals = true\nConsiderUnverifiedStorageDeals = true\nPieceCidBlocklist = []\nExpectedSealDuration = "24h0m0s"\nMaxDealStartDelay = "336h0m0s"\nPublishMsgPeriod = "30s"\nMaxDealsPerPublishMsg = 8\nMaxProviderCollateralMultiplier = 2\nFilter = ""\nRetrievalFilter = ""\nTransfePath = ""\nMaxPublishDealsFee = "0 FIL"\nMaxMarketBalanceAddFee = "0 FIL"\n\n[AddressConfig]\n  DisableWorkerFallback = false\n  \n[RetrievalPricing]\n  Strategy = "default"\n  [RetrievalPricing.Default]\n    VerifiedDealsFreeTransfer = true\n  [RetrievalPricing.External]\n    Path = ""\n\n\n在目前的 venus-market 实现中，所有的矿工共用一份配置，无法单独为某个矿工配置交易属性。\n\n\n# 延伸问题\n\n * 批量发单的问题：market-client 需要支持批量发单：自动切分文件、发单；\n\n * venus-market 统一 pool-run 和 solo-run 两种部署模式为一种，倾向于部署在链下。\n\n\n# Specification (feature Spec)\n\n\n# 属性配置\n\n * 有一套全局的属性表，当矿工没有独立配置时采用全局配置；\n * 支持矿工有独立的属性表；\n * 提供更新属性的 API及界面。\n\n支持多矿工属性的配置项如下：\n\n# global\n[CommonProviderConfig]\n  ConsiderOnlineStorageDeals = true\n  ConsiderOfflineStorageDeals = true\n  ConsiderOnlineRetrievalDeals = true\n  ConsiderOfflineRetrievalDeals = true\n  ConsiderVerifiedStorageDeals = true\n  ConsiderUnverifiedStorageDeals = true\n  PieceCidBlocklist = []\n  ExpectedSealDuration = "24h0m0s"\n  MaxDealStartDelay = "336h0m0s"\n  PublishMsgPeriod = "1h0m0s"\n  MaxDealsPerPublishMsg = 8\n  MaxProviderCollateralMultiplier = 2\n  Filter = ""\n  RetrievalFilter = ""\n  TransferPath = ""\n  MaxPublishDealsFee = "0 FIL"\n  MaxMarketBalanceAddFee = "0 FIL"\n  [CommonProviderConfig.RetrievalPricing]\n    Strategy = "default"\n    [CommonProviderConfig.RetrievalPricing.Default]\n      VerifiedDealsFreeTransfer = true\n    [CommonProviderConfig.RetrievalPricing.External]\n      Path = ""\n  [CommonProviderConfig.AddressConfig]\n    DisableWorkerFallback = false\n\n# 每个矿工的属性表，没有配置则使用全局配置\n[[Miners]]\n  Addr = "f01000"\n  Account = "testuser01"\n  \n   ConsiderOnlineStorageDeals = true\n   ConsiderOfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1h0m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   TransferPath = ""\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   [CommonProviderConfig.RetrievalPricing]\n     Strategy = "default"\n     [CommonProviderConfig.RetrievalPricing.Default]\n       VerifiedDealsFreeTransfer = true\n     [CommonProviderConfig.RetrievalPricing.External]\n       Path = ""\n   [CommonProviderConfig.AddressConfig]\n     DisableWorkerFallback = false\n      \n[[Miners]]\n  Addr = "f01002"\n  Account = "testuser02"\n  \n   ConsiderOnlineStorageDeals = true\n   ConsiderOfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1h0m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   TransferPath = ""\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   [CommonProviderConfig.RetrievalPricing]\n     Strategy = "default"\n     [CommonProviderConfig.RetrievalPricing.Default]\n       VerifiedDealsFreeTransfer = true\n     [CommonProviderConfig.RetrievalPricing.External]\n       Path = ""\n   [CommonProviderConfig.AddressConfig]\n     DisableWorkerFallback = false\n\n\n\n# 用户界面\n\n * venus-market 的命令行;\n * venus-sector-manager/venus-tools 的命令行 (可选);\n\n\n# Design Rationale (设计思路)\n\n\n# Backwards Compatibility（兼容性）\n\n本需求的实现会改变配置项的结构，需要实现配置文件的自动升级。\n\n\n# Test Cases (测试用例)\n\n * 配置文件自动升级；\n * 矿工交易属性可通过命令行或手动改配置文件设置；\n\n\n# Security Considerations (安全考量)\n\n\n# Implementation（实施）',normalizedContent:'# 市场属性配置\n\n\n# simple summary (概述)\n\n矿工可以自己配置存储市场和检索市场的属性。\n\n\n# abstract (功能简介)\n\nvenus-market 支持矿工的市场交易属性可独立配置，并可以由矿工自己配置，而不是通过链服务维护人员间接进行。\n\n关联：\n\n * [ ] 提案的issue\n * [ ] 社区 discussion\n\n\n# motivation (来源/背景)\n\nfilecoin 网络中的矿工参与市场交易需要一些属性来保证交易过程正常进行，也可以通过一些属性来设置自己的交易取向，如：仅接受可验证订单、只进行离线订单等。可配置属性如下：\n\n# default config:\nconsideronlinestoragedeals = true\nconsiderofflinestoragedeals = true\nconsideronlineretrievaldeals = true\nconsiderofflineretrievaldeals = true\nconsiderverifiedstoragedeals = true\nconsiderunverifiedstoragedeals = true\npiececidblocklist = []\nexpectedsealduration = "24h0m0s"\nmaxdealstartdelay = "336h0m0s"\npublishmsgperiod = "30s"\nmaxdealsperpublishmsg = 8\nmaxprovidercollateralmultiplier = 2\nfilter = ""\nretrievalfilter = ""\ntransfepath = ""\nmaxpublishdealsfee = "0 fil"\nmaxmarketbalanceaddfee = "0 fil"\n\n[addressconfig]\n  disableworkerfallback = false\n  \n[retrievalpricing]\n  strategy = "default"\n  [retrievalpricing.default]\n    verifieddealsfreetransfer = true\n  [retrievalpricing.external]\n    path = ""\n\n\n在目前的 venus-market 实现中，所有的矿工共用一份配置，无法单独为某个矿工配置交易属性。\n\n\n# 延伸问题\n\n * 批量发单的问题：market-client 需要支持批量发单：自动切分文件、发单；\n\n * venus-market 统一 pool-run 和 solo-run 两种部署模式为一种，倾向于部署在链下。\n\n\n# specification (feature spec)\n\n\n# 属性配置\n\n * 有一套全局的属性表，当矿工没有独立配置时采用全局配置；\n * 支持矿工有独立的属性表；\n * 提供更新属性的 api及界面。\n\n支持多矿工属性的配置项如下：\n\n# global\n[commonproviderconfig]\n  consideronlinestoragedeals = true\n  considerofflinestoragedeals = true\n  consideronlineretrievaldeals = true\n  considerofflineretrievaldeals = true\n  considerverifiedstoragedeals = true\n  considerunverifiedstoragedeals = true\n  piececidblocklist = []\n  expectedsealduration = "24h0m0s"\n  maxdealstartdelay = "336h0m0s"\n  publishmsgperiod = "1h0m0s"\n  maxdealsperpublishmsg = 8\n  maxprovidercollateralmultiplier = 2\n  filter = ""\n  retrievalfilter = ""\n  transferpath = ""\n  maxpublishdealsfee = "0 fil"\n  maxmarketbalanceaddfee = "0 fil"\n  [commonproviderconfig.retrievalpricing]\n    strategy = "default"\n    [commonproviderconfig.retrievalpricing.default]\n      verifieddealsfreetransfer = true\n    [commonproviderconfig.retrievalpricing.external]\n      path = ""\n  [commonproviderconfig.addressconfig]\n    disableworkerfallback = false\n\n# 每个矿工的属性表，没有配置则使用全局配置\n[[miners]]\n  addr = "f01000"\n  account = "testuser01"\n  \n   consideronlinestoragedeals = true\n   considerofflinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1h0m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   transferpath = ""\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   [commonproviderconfig.retrievalpricing]\n     strategy = "default"\n     [commonproviderconfig.retrievalpricing.default]\n       verifieddealsfreetransfer = true\n     [commonproviderconfig.retrievalpricing.external]\n       path = ""\n   [commonproviderconfig.addressconfig]\n     disableworkerfallback = false\n      \n[[miners]]\n  addr = "f01002"\n  account = "testuser02"\n  \n   consideronlinestoragedeals = true\n   considerofflinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1h0m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   transferpath = ""\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   [commonproviderconfig.retrievalpricing]\n     strategy = "default"\n     [commonproviderconfig.retrievalpricing.default]\n       verifieddealsfreetransfer = true\n     [commonproviderconfig.retrievalpricing.external]\n       path = ""\n   [commonproviderconfig.addressconfig]\n     disableworkerfallback = false\n\n\n\n# 用户界面\n\n * venus-market 的命令行;\n * venus-sector-manager/venus-tools 的命令行 (可选);\n\n\n# design rationale (设计思路)\n\n\n# backwards compatibility（兼容性）\n\n本需求的实现会改变配置项的结构，需要实现配置文件的自动升级。\n\n\n# test cases (测试用例)\n\n * 配置文件自动升级；\n * 矿工交易属性可通过命令行或手动改配置文件设置；\n\n\n# security considerations (安全考量)\n\n\n# implementation（实施）',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/zh/developer/batch-deals.html",relativePath:"zh/developer/batch-deals.md",key:"v-1f8a4b75",path:"/zh/developer/batch-deals.html",headers:[{level:2,title:"Simple Summary (概述)",slug:"simple-summary-概述",normalizedTitle:"simple summary (概述)",charIndex:2},{level:2,title:"Abstract (功能简介)",slug:"abstract-功能简介",normalizedTitle:"abstract (功能简介)",charIndex:97},{level:2,title:"Motivation (来源/背景)",slug:"motivation-来源-背景",normalizedTitle:"motivation (来源/背景)",charIndex:298},{level:2,title:"Specification (feature Spec)",slug:"specification-feature-spec",normalizedTitle:"specification (feature spec)",charIndex:410},{level:3,title:"名词解释",slug:"名词解释",normalizedTitle:"名词解释",charIndex:443},{level:3,title:"订单持久化",slug:"订单持久化",normalizedTitle:"订单持久化",charIndex:162},{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:154},{level:3,title:"新增命令",slug:"新增命令",normalizedTitle:"新增命令",charIndex:1579},{level:2,title:"Design Rationale (设计思路)",slug:"design-rationale-设计思路",normalizedTitle:"design rationale (设计思路)",charIndex:1862},{level:2,title:"Backwards Compatibility（兼容性）",slug:"backwards-compatibility-兼容性",normalizedTitle:"backwards compatibility（兼容性）",charIndex:1978},{level:2,title:"Test Cases (测试用例)",slug:"test-cases-测试用例",normalizedTitle:"test cases (测试用例)",charIndex:2024},{level:2,title:"Security Considerations (安全考量)",slug:"security-considerations-安全考量",normalizedTitle:"security considerations (安全考量)",charIndex:2046},{level:2,title:"Implementation（实施）",slug:"implementation-实施",normalizedTitle:"implementation（实施）",charIndex:2081},{level:3,title:"查询离线订单",slug:"查询离线订单",normalizedTitle:"查询离线订单",charIndex:1644},{level:3,title:"持久化订单数据",slug:"持久化订单数据",normalizedTitle:"持久化订单数据",charIndex:2161},{level:3,title:"离线订单状态追踪",slug:"离线订单状态追踪",normalizedTitle:"离线订单状态追踪",charIndex:2841},{level:3,title:"批量发布订单接口",slug:"批量发布订单接口",normalizedTitle:"批量发布订单接口",charIndex:3029},{level:3,title:"统计 DC 订单分布情况",slug:"统计-dc-订单分布情况",normalizedTitle:"统计 dc 订单分布情况",charIndex:3339}],lastUpdated:"2023/10/25 07:37:37",headersStr:"Simple Summary (概述) Abstract (功能简介) Motivation (来源/背景) Specification (feature Spec) 名词解释 订单持久化 接口 新增命令 Design Rationale (设计思路) Backwards Compatibility（兼容性） Test Cases (测试用例) Security Considerations (安全考量) Implementation（实施） 查询离线订单 持久化订单数据 离线订单状态追踪 批量发布订单接口 统计 DC 订单分布情况",content:"# Simple Summary (概述)\n\ndroplet 批量发单是指基于 go-graphsplit 工具实现一个能够批量发离线订单的工具，并且 DC 订单符合 DC 发单要求。\n\n\n# Abstract (功能简介)\n\ndroplet-client 需要实现以下功能：\n\n * 增加批量发布订单命令和接口\n * 离线订单持久化存储，订单状态追踪\n * 增加获取离线订单、订单分布情况接口\n * 命令行可以输出离线订单信息和 DC 订单分布信息\n * 批量导入订单及聚合抵押\n * 支持 f+ 对 LDN 发单要求，简称：DC 发单要求\n\n关联：\n\n * [x] 提案的issue\n\n\n# Motivation (来源/背景)\n\n目前 droplet-client 一次只能发布一个订单，当有大量订单需要发布时，需要一个一个发，发单的效率并不高。批量发单可以一次对多个 SP 发布多个订单，可以提高效率。\n\n\n# Specification (feature Spec)\n\n\n# 名词解释\n\n * 批量发单：指批量发布离线订单\n * 订单：分普通订单和 DC 订单，DC 订单是被分配了 datacap 的订单\n * SP：存储提供者\n * 发单地址：发单时使用的地址，可以是具有 datacap 的地址\n * go-graphsplit：一种用于将数据集切分成固定大小的 car 文件的工具\n * datacap 发单要求：\n   * Storage provider should not exceed 25% of total datacap(client 给一个 SP 发的 DC 订单不能超过 SP 总 DC 订单的 25%)\n   * Storage provider should not be storing duplicate data for more than 20%(SP 不能超过 20% 的重复数据)\n   * Storage provider should have published its public IP address(SP 需要公开公告 IP 地址)\n   * All storage providers should be located in different regions(SP 需要位于不同地区)\n\n\n# 订单持久化\n\n把离线订单存储到 badger 数据库，以 proposal cid 作为 key，把订单 JSON marshal 后的结果作为 value。\n\n\n# 接口\n\ndroplet-client 新增接口\n\n# 批量导入订单\nClientBatchDeal(ctx context.Context, params *client.DealsParams) (*client.DealResults, error)\n# 获取 DC 订单分布情况\nClientGetVerifiedDealDistribution(ctx context.Context, providers []address.Address, client address.Address) (*client.DealDistribution, error)\n# 查询所有离线订单\nClientListOfflineDeals(ctx context.Context) ([]client.DealInfo, error)    \n\n\ndroplet 新增接口\n\n# 批量导入离线订单数据\nDealsBatchImportData(ctx context.Context, refs market.ImportDataRefs) ([]*market.ImportDataResult, error)\n\n\n\n# 新增命令\n\n * droplet-client 批量发单：支持对多 SP 发布多个离线订单，\n * droplet-client 查询离线订单：能够查询单个订单和列出所有离线订单\n * droplet-client 查询订单分布情况：可以按 SP 和 发单地址查询\n * droplet-client 导出离线订单：当订单状态为 StorageDealWaitingForData 时，导出订单 proposalcid 和 piececid\n * droplet 批量导入订单：支持输入多个 proposalcid 和 car 文件组合，也支持根据文件导入\n\n\n# Design Rationale (设计思路)\n\n存储离线订单使用 JSON marshal 是为了方便以后加字段\n\n根据用户使用 go-graphsplit 生成的 manifest.csv 文件内容来批量生成离线订单。\n\n\n# Backwards Compatibility（兼容性）\n\n需要兼容已有的发单逻辑\n\n\n# Test Cases (测试用例)\n\n\n# Security Considerations (安全考量)\n\n\n# Implementation（实施）\n\n\n# 查询离线订单\n\n 1. 按 proposal cid 查询单个离线订单信息\n 2. 列出所有离线订单信息\n\n\n# 持久化订单数据\n\n离线订单数据结构如下：\n\nClientDealProposal\n\n  types.ClientDealProposal\n  ProposalCID    cid.Cid\n\tDataRef        *storagemarket.DataRef\n\tMessage        string\n\tState          uint64\n\tDealID         uint64\n\tAddFundsCid    *cid.Cid\n\tPublishMessage *cid.Cid\n\tFastRetrieval  bool\n\tSlashEpoch     abi.ChainEpoch\n\tCreatedAt      time.Time\n\tUpdatedAt      time.Time\n\n\n接口：\n\ntype ClientOfflineDealRepo interface {\n\tSaveDeal(ctx context.Context, deal *ClientOfflineDeal) error\n\tGetDeal(ctx context.Context, proposalCid cid.Cid) (*ClientOfflineDeal, error)\n\tListDeal(ctx context.Context) ([]*ClientOfflineDeal, error)\n  ListDeal(ctx context.Context) ([]*types2.ClientOfflineDeal, error)\n}\n\n\n\n# 离线订单状态追踪\n\n粗略的把订单分成 active 订单和 inactive 订单，循序检查订单状态，如果订单状态是 StorageDealActive 则为 active 订单，反之是 inactive 订单。\n\n * active 订单：间隔一段较长时间去链上查询订单是否 slash\n * inactive 订单：间隔较短时间使用 libp2p 去获取订单状态\n\n\n# 批量发布订单接口\n\nDealsParams\n\nClientBatchDeal(ctx context.Context, params *client.DealsParams) (*client.DealResults, error)\ntype DealResults struct {\n\tResults []*DealResult\n}\ntype DealResult struct {\n\tProposalCID cid.Cid\n\t// Create deal failed\n\tMessage string\n}\ntype DealsParams struct {\n\tParams []*DealParams\n}\n\n\n\n# 统计 DC 订单分布情况\n\n 1. 统计 SP DC 订单数据重复率，重复率 = 不重复 DC 订单 / SP 所有 DC 订单。\n\n假如有两个 piece1，三个 piece3，则重复率 = 1 - (piece1+piece3) / (2 * piece1 + 3 * piece3)\n\n\n 2. 统计发单地址分配给 SP 的 DC 订单占比\n\n# 获取 DC 订单分布情况\nClientGetVerifiedDealDistribution(ctx context.Context) (*PieceDistribution, error) \ntype ProviderDistribution struct {\n\tProvider address.Address\n\t// Total deal\n\tTotal uint64\n\t// Uniq deal\n\tUniq uint64\n\t// May be too large\n\tUniqPieces map[string]uint64\n\t// (Total-Uniq) / Total\n\tDuplicationPercentage float64\n}\ntype ReplicaDistribution struct {\n\t// Datacap address\n\tClient address.Address\n\t// Total deal\n\tTotal uint64\n\t// Uniq deal\n\tUniq uint64\n\t// (Total-Uniq) / Uniq\n\tDuplicationPercentage float64\n\t// ProviderTotalDeal / Total\n\tReplicasPercentage   map[string]float64\n\tReplicasDistribution []*ProviderDistribution\n}\ntype DealDistribution struct {\n\tProvidersDistribution []*ProviderDistribution\n\tReplicasDistribution  []*ReplicaDistribution\n}\n",normalizedContent:"# simple summary (概述)\n\ndroplet 批量发单是指基于 go-graphsplit 工具实现一个能够批量发离线订单的工具，并且 dc 订单符合 dc 发单要求。\n\n\n# abstract (功能简介)\n\ndroplet-client 需要实现以下功能：\n\n * 增加批量发布订单命令和接口\n * 离线订单持久化存储，订单状态追踪\n * 增加获取离线订单、订单分布情况接口\n * 命令行可以输出离线订单信息和 dc 订单分布信息\n * 批量导入订单及聚合抵押\n * 支持 f+ 对 ldn 发单要求，简称：dc 发单要求\n\n关联：\n\n * [x] 提案的issue\n\n\n# motivation (来源/背景)\n\n目前 droplet-client 一次只能发布一个订单，当有大量订单需要发布时，需要一个一个发，发单的效率并不高。批量发单可以一次对多个 sp 发布多个订单，可以提高效率。\n\n\n# specification (feature spec)\n\n\n# 名词解释\n\n * 批量发单：指批量发布离线订单\n * 订单：分普通订单和 dc 订单，dc 订单是被分配了 datacap 的订单\n * sp：存储提供者\n * 发单地址：发单时使用的地址，可以是具有 datacap 的地址\n * go-graphsplit：一种用于将数据集切分成固定大小的 car 文件的工具\n * datacap 发单要求：\n   * storage provider should not exceed 25% of total datacap(client 给一个 sp 发的 dc 订单不能超过 sp 总 dc 订单的 25%)\n   * storage provider should not be storing duplicate data for more than 20%(sp 不能超过 20% 的重复数据)\n   * storage provider should have published its public ip address(sp 需要公开公告 ip 地址)\n   * all storage providers should be located in different regions(sp 需要位于不同地区)\n\n\n# 订单持久化\n\n把离线订单存储到 badger 数据库，以 proposal cid 作为 key，把订单 json marshal 后的结果作为 value。\n\n\n# 接口\n\ndroplet-client 新增接口\n\n# 批量导入订单\nclientbatchdeal(ctx context.context, params *client.dealsparams) (*client.dealresults, error)\n# 获取 dc 订单分布情况\nclientgetverifieddealdistribution(ctx context.context, providers []address.address, client address.address) (*client.dealdistribution, error)\n# 查询所有离线订单\nclientlistofflinedeals(ctx context.context) ([]client.dealinfo, error)    \n\n\ndroplet 新增接口\n\n# 批量导入离线订单数据\ndealsbatchimportdata(ctx context.context, refs market.importdatarefs) ([]*market.importdataresult, error)\n\n\n\n# 新增命令\n\n * droplet-client 批量发单：支持对多 sp 发布多个离线订单，\n * droplet-client 查询离线订单：能够查询单个订单和列出所有离线订单\n * droplet-client 查询订单分布情况：可以按 sp 和 发单地址查询\n * droplet-client 导出离线订单：当订单状态为 storagedealwaitingfordata 时，导出订单 proposalcid 和 piececid\n * droplet 批量导入订单：支持输入多个 proposalcid 和 car 文件组合，也支持根据文件导入\n\n\n# design rationale (设计思路)\n\n存储离线订单使用 json marshal 是为了方便以后加字段\n\n根据用户使用 go-graphsplit 生成的 manifest.csv 文件内容来批量生成离线订单。\n\n\n# backwards compatibility（兼容性）\n\n需要兼容已有的发单逻辑\n\n\n# test cases (测试用例)\n\n\n# security considerations (安全考量)\n\n\n# implementation（实施）\n\n\n# 查询离线订单\n\n 1. 按 proposal cid 查询单个离线订单信息\n 2. 列出所有离线订单信息\n\n\n# 持久化订单数据\n\n离线订单数据结构如下：\n\nclientdealproposal\n\n  types.clientdealproposal\n  proposalcid    cid.cid\n\tdataref        *storagemarket.dataref\n\tmessage        string\n\tstate          uint64\n\tdealid         uint64\n\taddfundscid    *cid.cid\n\tpublishmessage *cid.cid\n\tfastretrieval  bool\n\tslashepoch     abi.chainepoch\n\tcreatedat      time.time\n\tupdatedat      time.time\n\n\n接口：\n\ntype clientofflinedealrepo interface {\n\tsavedeal(ctx context.context, deal *clientofflinedeal) error\n\tgetdeal(ctx context.context, proposalcid cid.cid) (*clientofflinedeal, error)\n\tlistdeal(ctx context.context) ([]*clientofflinedeal, error)\n  listdeal(ctx context.context) ([]*types2.clientofflinedeal, error)\n}\n\n\n\n# 离线订单状态追踪\n\n粗略的把订单分成 active 订单和 inactive 订单，循序检查订单状态，如果订单状态是 storagedealactive 则为 active 订单，反之是 inactive 订单。\n\n * active 订单：间隔一段较长时间去链上查询订单是否 slash\n * inactive 订单：间隔较短时间使用 libp2p 去获取订单状态\n\n\n# 批量发布订单接口\n\ndealsparams\n\nclientbatchdeal(ctx context.context, params *client.dealsparams) (*client.dealresults, error)\ntype dealresults struct {\n\tresults []*dealresult\n}\ntype dealresult struct {\n\tproposalcid cid.cid\n\t// create deal failed\n\tmessage string\n}\ntype dealsparams struct {\n\tparams []*dealparams\n}\n\n\n\n# 统计 dc 订单分布情况\n\n 1. 统计 sp dc 订单数据重复率，重复率 = 不重复 dc 订单 / sp 所有 dc 订单。\n\n假如有两个 piece1，三个 piece3，则重复率 = 1 - (piece1+piece3) / (2 * piece1 + 3 * piece3)\n\n\n 2. 统计发单地址分配给 sp 的 dc 订单占比\n\n# 获取 dc 订单分布情况\nclientgetverifieddealdistribution(ctx context.context) (*piecedistribution, error) \ntype providerdistribution struct {\n\tprovider address.address\n\t// total deal\n\ttotal uint64\n\t// uniq deal\n\tuniq uint64\n\t// may be too large\n\tuniqpieces map[string]uint64\n\t// (total-uniq) / total\n\tduplicationpercentage float64\n}\ntype replicadistribution struct {\n\t// datacap address\n\tclient address.address\n\t// total deal\n\ttotal uint64\n\t// uniq deal\n\tuniq uint64\n\t// (total-uniq) / uniq\n\tduplicationpercentage float64\n\t// providertotaldeal / total\n\treplicaspercentage   map[string]float64\n\treplicasdistribution []*providerdistribution\n}\ntype dealdistribution struct {\n\tprovidersdistribution []*providerdistribution\n\treplicasdistribution  []*replicadistribution\n}\n",charsets:{cjk:!0}},{title:"Simple Summary (概述)",frontmatter:{},regularPath:"/zh/developer/boost-mk-1-2.html",relativePath:"zh/developer/boost-mk-1-2.md",key:"v-1e4b4505",path:"/zh/developer/boost-mk-1-2.html",headers:[{level:2,title:"协议层支持",slug:"协议层支持",normalizedTitle:"协议层支持",charIndex:675},{level:2,title:"数据层需要改动存储表结构",slug:"数据层需要改动存储表结构",normalizedTitle:"数据层需要改动存储表结构",charIndex:805},{level:2,title:"服务端支持",slug:"服务端支持",normalizedTitle:"服务端支持",charIndex:1190},{level:2,title:"客户端",slug:"客户端",normalizedTitle:"客户端",charIndex:1484},{level:2,title:"对于查询订单状态的协议接口",slug:"对于查询订单状态的协议接口",normalizedTitle:"对于查询订单状态的协议接口",charIndex:1707}],lastUpdated:"2023/10/25 07:37:37",headersStr:"协议层支持 数据层需要改动存储表结构 服务端支持 客户端 对于查询订单状态的协议接口",content:"# Simple Summary (概述)\n\n和官方 boost 开发人员共同，大家确定在未来的存储和检索协议层次上达成一致。本期工作期望能够在支持 boost 制定的存储订单协议mk/1.2.0\n\n\n# Abstract (功能简介)\n\n 1. 网络层增加mk/1.2.0协议的handler，处理订单结合现有的存储订单的功能来实现。\n 2. 类似原来的 piece resource 下载功能，实现一个基于 http 的文件查询接口，协议上可以参考 boost 实现，尽量保持一致。\n 3. market-client 上增加一个 http 文件服务器，文件来源和现有的 local data 存储打通，尽量的结合系统现有的功能来实现。\n\n\n# Motivation (来源/背景)\n\n新版本存储协议（mk/1.2.0）制定新的存储和存储订单查询协议，其中最大的特点是制定一个更加宽松的数据传输方式。在协议层次上并没有固定某种传输方式，在实际实现中该协议支持了 http 的传输方式，基于这种方式未来一些基于 http 的传输手段都可以应用在该协议的实际应用当中，比如（ftp/oss/s3/网盘等). 另外这种模式相对与原来的 graphsync 协议更加的轻量化，增加了传输效率，减少了实现的复杂度。\n\n适应 http 的传输方式，boost 也提供了基于 http 的文件检索方式，此方式和我们目前的实现和应用方式具有相似之处。统一之后有助于在应用上支持这种数据协议的应用和推广。\n\n\n# Specification (Spec)\n\n\n# 协议层支持\n\n网络层支持/fil/storage/mk/1.2.0协议及处理函数,参考 https://github.com/filecoin-project/boost/blob/main/storagemarket/lp2pimpl/net.go\n\n\n# 数据层需要改动存储表结构\n\n协议中数据对应到订单数据\n\nIsOffline           TransferType为true,则TransferType为TTManual\nClientDealProposal 按原来的\nDealDataRoot       dataroot\nTransfer.Type      增加http\nTransfer.ClientID  数据类型不变，重新封装一个ClientID, 新老共用，需要转成PeerId时按需转换。\nTransfer.Params    需增加\nTransfer.Size      PayloadSize\n\n\n存储订单增加字段\n\nDealUUID           改变主键为字符串形式使用uuid类型\nVersion            增加版本字段，用于区分新老协议， 待定，可能会有用\n\n\n\n# 服务端支持\n\n增加一个新包用于实现新协议功能是这个可能可以复用现有的 storageprovider 中已经实现的组件\n\n现有可能用到的功能\n\n 1. deal handler 可能可以直接复用此 handler 来处理订单信息\n 2. deal publisher 订单发布\n\n确保可以正常运行的功能：\n\n 1. deal_assign, 确保 deal assigner 需要的字段信息和字段状态没有问题\n 2. deal_track 确保订单状态追踪可用\n\n改造现有的 piece 的 piece 文件下载功能，希望能够和 boost 的 http 下载方式能够结合起来。\n\n\n# 客户端\n\n 1. 增加新协议的存储订单推送命令，支持设置 http url\n 2. 增加新的 http 检索方式支持，通过 http 的方式从 market 服务上下载数据。\n 3. market client 支持一个 http 本地文件服务，协议具体实现方式可以参考 boost，文件数据来源想办法和 data 打通。\n 4. data list 的时候可以显示一个文件的 http 地址，发起新版本存储订单命令可以使用此 url。\n\n\n# 对于查询订单状态的协议接口\n\n在返回的信息当中 NBytesReceived 信息的获取可能会存在困难，如果存在负载均衡的情况可能会不太好统计处理，落库更新压力会有些大，而且是这个字段的意义不是很大，第一版实现可以先忽略该字段。\n\n\n# Design Rationale (设计思路)\n\n未来 go-fil-market 协议会被替换，但是预计会是一个比较长的过程。因而当前的做法是在具体的订单工作上尽量复用，在协议交互部分尽量隔离。既保持功能的紧凑又保证未来能够安全方便的删除 go-fil-market。\n\n\n# Backwards Compatibility (兼容性)\n\n 1. 数据兼容，需要迁移数据。老数据生成随机 uuid，proposalcid 设置成可空且唯一索引类型。为了保证各个表风格一致，考虑所有表都改成 uuid 主键。\n 2. http 文件下载功能中，boost 的默认行为和现在的默认行为不一致，直接改动会导致 cluster 出现问题，因此可能需要两个版本的协议共存一段时间\n 3. 新的协议保存的字段数据很少很多，可能会造成现有的功能出现损坏或者这些新版本的订单无法正常工作\n\n\n# Test Cases (测试用例)\n\n\n# Security Considerations (安全考量)",normalizedContent:"# simple summary (概述)\n\n和官方 boost 开发人员共同，大家确定在未来的存储和检索协议层次上达成一致。本期工作期望能够在支持 boost 制定的存储订单协议mk/1.2.0\n\n\n# abstract (功能简介)\n\n 1. 网络层增加mk/1.2.0协议的handler，处理订单结合现有的存储订单的功能来实现。\n 2. 类似原来的 piece resource 下载功能，实现一个基于 http 的文件查询接口，协议上可以参考 boost 实现，尽量保持一致。\n 3. market-client 上增加一个 http 文件服务器，文件来源和现有的 local data 存储打通，尽量的结合系统现有的功能来实现。\n\n\n# motivation (来源/背景)\n\n新版本存储协议（mk/1.2.0）制定新的存储和存储订单查询协议，其中最大的特点是制定一个更加宽松的数据传输方式。在协议层次上并没有固定某种传输方式，在实际实现中该协议支持了 http 的传输方式，基于这种方式未来一些基于 http 的传输手段都可以应用在该协议的实际应用当中，比如（ftp/oss/s3/网盘等). 另外这种模式相对与原来的 graphsync 协议更加的轻量化，增加了传输效率，减少了实现的复杂度。\n\n适应 http 的传输方式，boost 也提供了基于 http 的文件检索方式，此方式和我们目前的实现和应用方式具有相似之处。统一之后有助于在应用上支持这种数据协议的应用和推广。\n\n\n# specification (spec)\n\n\n# 协议层支持\n\n网络层支持/fil/storage/mk/1.2.0协议及处理函数,参考 https://github.com/filecoin-project/boost/blob/main/storagemarket/lp2pimpl/net.go\n\n\n# 数据层需要改动存储表结构\n\n协议中数据对应到订单数据\n\nisoffline           transfertype为true,则transfertype为ttmanual\nclientdealproposal 按原来的\ndealdataroot       dataroot\ntransfer.type      增加http\ntransfer.clientid  数据类型不变，重新封装一个clientid, 新老共用，需要转成peerid时按需转换。\ntransfer.params    需增加\ntransfer.size      payloadsize\n\n\n存储订单增加字段\n\ndealuuid           改变主键为字符串形式使用uuid类型\nversion            增加版本字段，用于区分新老协议， 待定，可能会有用\n\n\n\n# 服务端支持\n\n增加一个新包用于实现新协议功能是这个可能可以复用现有的 storageprovider 中已经实现的组件\n\n现有可能用到的功能\n\n 1. deal handler 可能可以直接复用此 handler 来处理订单信息\n 2. deal publisher 订单发布\n\n确保可以正常运行的功能：\n\n 1. deal_assign, 确保 deal assigner 需要的字段信息和字段状态没有问题\n 2. deal_track 确保订单状态追踪可用\n\n改造现有的 piece 的 piece 文件下载功能，希望能够和 boost 的 http 下载方式能够结合起来。\n\n\n# 客户端\n\n 1. 增加新协议的存储订单推送命令，支持设置 http url\n 2. 增加新的 http 检索方式支持，通过 http 的方式从 market 服务上下载数据。\n 3. market client 支持一个 http 本地文件服务，协议具体实现方式可以参考 boost，文件数据来源想办法和 data 打通。\n 4. data list 的时候可以显示一个文件的 http 地址，发起新版本存储订单命令可以使用此 url。\n\n\n# 对于查询订单状态的协议接口\n\n在返回的信息当中 nbytesreceived 信息的获取可能会存在困难，如果存在负载均衡的情况可能会不太好统计处理，落库更新压力会有些大，而且是这个字段的意义不是很大，第一版实现可以先忽略该字段。\n\n\n# design rationale (设计思路)\n\n未来 go-fil-market 协议会被替换，但是预计会是一个比较长的过程。因而当前的做法是在具体的订单工作上尽量复用，在协议交互部分尽量隔离。既保持功能的紧凑又保证未来能够安全方便的删除 go-fil-market。\n\n\n# backwards compatibility (兼容性)\n\n 1. 数据兼容，需要迁移数据。老数据生成随机 uuid，proposalcid 设置成可空且唯一索引类型。为了保证各个表风格一致，考虑所有表都改成 uuid 主键。\n 2. http 文件下载功能中，boost 的默认行为和现在的默认行为不一致，直接改动会导致 cluster 出现问题，因此可能需要两个版本的协议共存一段时间\n 3. 新的协议保存的字段数据很少很多，可能会造成现有的功能出现损坏或者这些新版本的订单无法正常工作\n\n\n# test cases (测试用例)\n\n\n# security considerations (安全考量)",charsets:{cjk:!0}},{title:"Sample code of curl",frontmatter:{},regularPath:"/zh/developer/market-api-v0.html",relativePath:"zh/developer/market-api-v0.md",key:"v-474e933e",path:"/zh/developer/market-api-v0.html",headers:[{level:2,title:"Market",slug:"market",normalizedTitle:"market",charIndex:285},{level:3,title:"ActorDelete",slug:"actordelete",normalizedTitle:"actordelete",charIndex:297},{level:3,title:"ActorExist",slug:"actorexist",normalizedTitle:"actorexist",charIndex:314},{level:3,title:"ActorList",slug:"actorlist",normalizedTitle:"actorlist",charIndex:330},{level:3,title:"ActorSectorSize",slug:"actorsectorsize",normalizedTitle:"actorsectorsize",charIndex:345},{level:3,title:"ActorUpsert",slug:"actorupsert",normalizedTitle:"actorupsert",charIndex:366},{level:3,title:"AddFsPieceStorage",slug:"addfspiecestorage",normalizedTitle:"addfspiecestorage",charIndex:383},{level:3,title:"AddS3PieceStorage",slug:"adds3piecestorage",normalizedTitle:"adds3piecestorage",charIndex:406},{level:3,title:"AssignUnPackedDeals",slug:"assignunpackeddeals",normalizedTitle:"assignunpackeddeals",charIndex:429},{level:3,title:"DagstoreDestroyShard",slug:"dagstoredestroyshard",normalizedTitle:"dagstoredestroyshard",charIndex:454},{level:3,title:"DagstoreGC",slug:"dagstoregc",normalizedTitle:"dagstoregc",charIndex:480},{level:3,title:"DagstoreInitializeAll",slug:"dagstoreinitializeall",normalizedTitle:"dagstoreinitializeall",charIndex:496},{level:3,title:"DagstoreInitializeShard",slug:"dagstoreinitializeshard",normalizedTitle:"dagstoreinitializeshard",charIndex:523},{level:3,title:"DagstoreInitializeStorage",slug:"dagstoreinitializestorage",normalizedTitle:"dagstoreinitializestorage",charIndex:552},{level:3,title:"DagstoreListShards",slug:"dagstorelistshards",normalizedTitle:"dagstorelistshards",charIndex:583},{level:3,title:"DagstoreRecoverShard",slug:"dagstorerecovershard",normalizedTitle:"dagstorerecovershard",charIndex:607},{level:3,title:"DealsBatchImportData",slug:"dealsbatchimportdata",normalizedTitle:"dealsbatchimportdata",charIndex:633},{level:3,title:"DealsConsiderOfflineRetrievalDeals",slug:"dealsconsiderofflineretrievaldeals",normalizedTitle:"dealsconsiderofflineretrievaldeals",charIndex:659},{level:3,title:"DealsConsiderOfflineStorageDeals",slug:"dealsconsiderofflinestoragedeals",normalizedTitle:"dealsconsiderofflinestoragedeals",charIndex:699},{level:3,title:"DealsConsiderOnlineRetrievalDeals",slug:"dealsconsideronlineretrievaldeals",normalizedTitle:"dealsconsideronlineretrievaldeals",charIndex:737},{level:3,title:"DealsConsiderOnlineStorageDeals",slug:"dealsconsideronlinestoragedeals",normalizedTitle:"dealsconsideronlinestoragedeals",charIndex:776},{level:3,title:"DealsConsiderUnverifiedStorageDeals",slug:"dealsconsiderunverifiedstoragedeals",normalizedTitle:"dealsconsiderunverifiedstoragedeals",charIndex:813},{level:3,title:"DealsConsiderVerifiedStorageDeals",slug:"dealsconsiderverifiedstoragedeals",normalizedTitle:"dealsconsiderverifiedstoragedeals",charIndex:854},{level:3,title:"DealsImport",slug:"dealsimport",normalizedTitle:"dealsimport",charIndex:893},{level:3,title:"DealsImportData",slug:"dealsimportdata",normalizedTitle:"dealsimportdata",charIndex:910},{level:3,title:"DealsMaxProviderCollateralMultiplier",slug:"dealsmaxprovidercollateralmultiplier",normalizedTitle:"dealsmaxprovidercollateralmultiplier",charIndex:931},{level:3,title:"DealsMaxPublishFee",slug:"dealsmaxpublishfee",normalizedTitle:"dealsmaxpublishfee",charIndex:973},{level:3,title:"DealsMaxStartDelay",slug:"dealsmaxstartdelay",normalizedTitle:"dealsmaxstartdelay",charIndex:997},{level:3,title:"DealsPieceCidBlocklist",slug:"dealspiececidblocklist",normalizedTitle:"dealspiececidblocklist",charIndex:1021},{level:3,title:"DealsPublishMsgPeriod",slug:"dealspublishmsgperiod",normalizedTitle:"dealspublishmsgperiod",charIndex:1049},{level:3,title:"DealsSetConsiderOfflineRetrievalDeals",slug:"dealssetconsiderofflineretrievaldeals",normalizedTitle:"dealssetconsiderofflineretrievaldeals",charIndex:1076},{level:3,title:"DealsSetConsiderOfflineStorageDeals",slug:"dealssetconsiderofflinestoragedeals",normalizedTitle:"dealssetconsiderofflinestoragedeals",charIndex:1119},{level:3,title:"DealsSetConsiderOnlineRetrievalDeals",slug:"dealssetconsideronlineretrievaldeals",normalizedTitle:"dealssetconsideronlineretrievaldeals",charIndex:1160},{level:3,title:"DealsSetConsiderOnlineStorageDeals",slug:"dealssetconsideronlinestoragedeals",normalizedTitle:"dealssetconsideronlinestoragedeals",charIndex:1202},{level:3,title:"DealsSetConsiderUnverifiedStorageDeals",slug:"dealssetconsiderunverifiedstoragedeals",normalizedTitle:"dealssetconsiderunverifiedstoragedeals",charIndex:1242},{level:3,title:"DealsSetConsiderVerifiedStorageDeals",slug:"dealssetconsiderverifiedstoragedeals",normalizedTitle:"dealssetconsiderverifiedstoragedeals",charIndex:1286},{level:3,title:"DealsSetMaxProviderCollateralMultiplier",slug:"dealssetmaxprovidercollateralmultiplier",normalizedTitle:"dealssetmaxprovidercollateralmultiplier",charIndex:1328},{level:3,title:"DealsSetMaxPublishFee",slug:"dealssetmaxpublishfee",normalizedTitle:"dealssetmaxpublishfee",charIndex:1373},{level:3,title:"DealsSetMaxStartDelay",slug:"dealssetmaxstartdelay",normalizedTitle:"dealssetmaxstartdelay",charIndex:1400},{level:3,title:"DealsSetPieceCidBlocklist",slug:"dealssetpiececidblocklist",normalizedTitle:"dealssetpiececidblocklist",charIndex:1427},{level:3,title:"DealsSetPublishMsgPeriod",slug:"dealssetpublishmsgperiod",normalizedTitle:"dealssetpublishmsgperiod",charIndex:1458},{level:3,title:"GetDeals",slug:"getdeals",normalizedTitle:"getdeals",charIndex:1488},{level:3,title:"GetRetrievalDealStatistic",slug:"getretrievaldealstatistic",normalizedTitle:"getretrievaldealstatistic",charIndex:1502},{level:3,title:"GetStorageDealStatistic",slug:"getstoragedealstatistic",normalizedTitle:"getstoragedealstatistic",charIndex:1533},{level:3,title:"GetUnPackedDeals",slug:"getunpackeddeals",normalizedTitle:"getunpackeddeals",charIndex:1562},{level:3,title:"ID",slug:"id",normalizedTitle:"id",charIndex:1584},{level:3,title:"ListPieceStorageInfos",slug:"listpiecestorageinfos",normalizedTitle:"listpiecestorageinfos",charIndex:1592},{level:3,title:"ListenMarketEvent",slug:"listenmarketevent",normalizedTitle:"listenmarketevent",charIndex:1619},{level:3,title:"MarkDealsAsPacking",slug:"markdealsaspacking",normalizedTitle:"markdealsaspacking",charIndex:1642},{level:3,title:"MarketAddBalance",slug:"marketaddbalance",normalizedTitle:"marketaddbalance",charIndex:1666},{level:3,title:"MarketCancelDataTransfer",slug:"marketcanceldatatransfer",normalizedTitle:"marketcanceldatatransfer",charIndex:1688},{level:3,title:"MarketDataTransferPath",slug:"marketdatatransferpath",normalizedTitle:"marketdatatransferpath",charIndex:1718},{level:3,title:"MarketDataTransferUpdates",slug:"marketdatatransferupdates",normalizedTitle:"marketdatatransferupdates",charIndex:1746},{level:3,title:"MarketGetAsk",slug:"marketgetask",normalizedTitle:"marketgetask",charIndex:1777},{level:3,title:"MarketGetDeal",slug:"marketgetdeal",normalizedTitle:"marketgetdeal",charIndex:1795},{level:3,title:"MarketGetDealUpdates",slug:"marketgetdealupdates",normalizedTitle:"marketgetdealupdates",charIndex:1814},{level:3,title:"MarketGetReserved",slug:"marketgetreserved",normalizedTitle:"marketgetreserved",charIndex:1840},{level:3,title:"MarketGetRetrievalAsk",slug:"marketgetretrievalask",normalizedTitle:"marketgetretrievalask",charIndex:1863},{level:3,title:"MarketGetRetrievalDeal",slug:"marketgetretrievaldeal",normalizedTitle:"marketgetretrievaldeal",charIndex:1890},{level:3,title:"MarketImportDealData",slug:"marketimportdealdata",normalizedTitle:"marketimportdealdata",charIndex:1918},{level:3,title:"MarketImportPublishedDeal",slug:"marketimportpublisheddeal",normalizedTitle:"marketimportpublisheddeal",charIndex:1944},{level:3,title:"MarketListDataTransfers",slug:"marketlistdatatransfers",normalizedTitle:"marketlistdatatransfers",charIndex:1975},{level:3,title:"MarketListDeals",slug:"marketlistdeals",normalizedTitle:"marketlistdeals",charIndex:2004},{level:3,title:"MarketListIncompleteDeals",slug:"marketlistincompletedeals",normalizedTitle:"marketlistincompletedeals",charIndex:2025},{level:3,title:"MarketListRetrievalAsk",slug:"marketlistretrievalask",normalizedTitle:"marketlistretrievalask",charIndex:2056},{level:3,title:"MarketListRetrievalDeals",slug:"marketlistretrievaldeals",normalizedTitle:"marketlistretrievaldeals",charIndex:2084},{level:3,title:"MarketListStorageAsk",slug:"marketliststorageask",normalizedTitle:"marketliststorageask",charIndex:2114},{level:3,title:"MarketMaxBalanceAddFee",slug:"marketmaxbalanceaddfee",normalizedTitle:"marketmaxbalanceaddfee",charIndex:2140},{level:3,title:"MarketMaxDealsPerPublishMsg",slug:"marketmaxdealsperpublishmsg",normalizedTitle:"marketmaxdealsperpublishmsg",charIndex:2168},{level:3,title:"MarketPendingDeals",slug:"marketpendingdeals",normalizedTitle:"marketpendingdeals",charIndex:2201},{level:3,title:"MarketPublishPendingDeals",slug:"marketpublishpendingdeals",normalizedTitle:"marketpublishpendingdeals",charIndex:2225},{level:3,title:"MarketReleaseFunds",slug:"marketreleasefunds",normalizedTitle:"marketreleasefunds",charIndex:2256},{level:3,title:"MarketReserveFunds",slug:"marketreservefunds",normalizedTitle:"marketreservefunds",charIndex:2280},{level:3,title:"MarketRestartDataTransfer",slug:"marketrestartdatatransfer",normalizedTitle:"marketrestartdatatransfer",charIndex:2304},{level:3,title:"MarketSetAsk",slug:"marketsetask",normalizedTitle:"marketsetask",charIndex:2335},{level:3,title:"MarketSetDataTransferPath",slug:"marketsetdatatransferpath",normalizedTitle:"marketsetdatatransferpath",charIndex:2353},{level:3,title:"MarketSetMaxBalanceAddFee",slug:"marketsetmaxbalanceaddfee",normalizedTitle:"marketsetmaxbalanceaddfee",charIndex:2384},{level:3,title:"MarketSetMaxDealsPerPublishMsg",slug:"marketsetmaxdealsperpublishmsg",normalizedTitle:"marketsetmaxdealsperpublishmsg",charIndex:2415},{level:3,title:"MarketSetRetrievalAsk",slug:"marketsetretrievalask",normalizedTitle:"marketsetretrievalask",charIndex:2451},{level:3,title:"MarketWithdraw",slug:"marketwithdraw",normalizedTitle:"marketwithdraw",charIndex:2478},{level:3,title:"MessagerGetMessage",slug:"messagergetmessage",normalizedTitle:"messagergetmessage",charIndex:2498},{level:3,title:"MessagerPushMessage",slug:"messagerpushmessage",normalizedTitle:"messagerpushmessage",charIndex:2522},{level:3,title:"MessagerWaitMessage",slug:"messagerwaitmessage",normalizedTitle:"messagerwaitmessage",charIndex:2547},{level:3,title:"NetAddrsListen",slug:"netaddrslisten",normalizedTitle:"netaddrslisten",charIndex:2572},{level:3,title:"PaychVoucherList",slug:"paychvoucherlist",normalizedTitle:"paychvoucherlist",charIndex:2592},{level:3,title:"PiecesGetCIDInfo",slug:"piecesgetcidinfo",normalizedTitle:"piecesgetcidinfo",charIndex:2614},{level:3,title:"PiecesGetPieceInfo",slug:"piecesgetpieceinfo",normalizedTitle:"piecesgetpieceinfo",charIndex:2636},{level:3,title:"PiecesListCidInfos",slug:"pieceslistcidinfos",normalizedTitle:"pieceslistcidinfos",charIndex:2660},{level:3,title:"PiecesListPieces",slug:"pieceslistpieces",normalizedTitle:"pieceslistpieces",charIndex:2684},{level:3,title:"RemovePieceStorage",slug:"removepiecestorage",normalizedTitle:"removepiecestorage",charIndex:2706},{level:3,title:"ResponseMarketEvent",slug:"responsemarketevent",normalizedTitle:"responsemarketevent",charIndex:2730},{level:3,title:"SectorGetExpectedSealDuration",slug:"sectorgetexpectedsealduration",normalizedTitle:"sectorgetexpectedsealduration",charIndex:2755},{level:3,title:"SectorSetExpectedSealDuration",slug:"sectorsetexpectedsealduration",normalizedTitle:"sectorsetexpectedsealduration",charIndex:2790},{level:3,title:"UpdateDealOnPacking",slug:"updatedealonpacking",normalizedTitle:"updatedealonpacking",charIndex:2825},{level:3,title:"UpdateDealStatus",slug:"updatedealstatus",normalizedTitle:"updatedealstatus",charIndex:2850},{level:3,title:"UpdateStorageDealStatus",slug:"updatestoragedealstatus",normalizedTitle:"updatestoragedealstatus",charIndex:2872},{level:3,title:"Version",slug:"version",normalizedTitle:"version",charIndex:2901}],headersStr:"Market ActorDelete ActorExist ActorList ActorSectorSize ActorUpsert AddFsPieceStorage AddS3PieceStorage AssignUnPackedDeals DagstoreDestroyShard DagstoreGC DagstoreInitializeAll DagstoreInitializeShard DagstoreInitializeStorage DagstoreListShards DagstoreRecoverShard DealsBatchImportData DealsConsiderOfflineRetrievalDeals DealsConsiderOfflineStorageDeals DealsConsiderOnlineRetrievalDeals DealsConsiderOnlineStorageDeals DealsConsiderUnverifiedStorageDeals DealsConsiderVerifiedStorageDeals DealsImport DealsImportData DealsMaxProviderCollateralMultiplier DealsMaxPublishFee DealsMaxStartDelay DealsPieceCidBlocklist DealsPublishMsgPeriod DealsSetConsiderOfflineRetrievalDeals DealsSetConsiderOfflineStorageDeals DealsSetConsiderOnlineRetrievalDeals DealsSetConsiderOnlineStorageDeals DealsSetConsiderUnverifiedStorageDeals DealsSetConsiderVerifiedStorageDeals DealsSetMaxProviderCollateralMultiplier DealsSetMaxPublishFee DealsSetMaxStartDelay DealsSetPieceCidBlocklist DealsSetPublishMsgPeriod GetDeals GetRetrievalDealStatistic GetStorageDealStatistic GetUnPackedDeals ID ListPieceStorageInfos ListenMarketEvent MarkDealsAsPacking MarketAddBalance MarketCancelDataTransfer MarketDataTransferPath MarketDataTransferUpdates MarketGetAsk MarketGetDeal MarketGetDealUpdates MarketGetReserved MarketGetRetrievalAsk MarketGetRetrievalDeal MarketImportDealData MarketImportPublishedDeal MarketListDataTransfers MarketListDeals MarketListIncompleteDeals MarketListRetrievalAsk MarketListRetrievalDeals MarketListStorageAsk MarketMaxBalanceAddFee MarketMaxDealsPerPublishMsg MarketPendingDeals MarketPublishPendingDeals MarketReleaseFunds MarketReserveFunds MarketRestartDataTransfer MarketSetAsk MarketSetDataTransferPath MarketSetMaxBalanceAddFee MarketSetMaxDealsPerPublishMsg MarketSetRetrievalAsk MarketWithdraw MessagerGetMessage MessagerPushMessage MessagerWaitMessage NetAddrsListen PaychVoucherList PiecesGetCIDInfo PiecesGetPieceInfo PiecesListCidInfos PiecesListPieces RemovePieceStorage ResponseMarketEvent SectorGetExpectedSealDuration SectorSetExpectedSealDuration UpdateDealOnPacking UpdateDealStatus UpdateStorageDealStatus Version",content:'# Sample code of curl\n\n# <Inputs> corresponding to the value of Inputs Tag of each API\ncurl http://<ip>:<port>/rpc/v0 -X POST -H "Content-Type: application/json"  -H "Authorization: Bearer <token>"  -d \'{"method": "VENUS_MARKET.<method>", "params": <Inputs>, "id": 0}\'\n\n\n\n# Groups\n\n * Market\n   * ActorDelete\n   * ActorExist\n   * ActorList\n   * ActorSectorSize\n   * ActorUpsert\n   * AddFsPieceStorage\n   * AddS3PieceStorage\n   * AssignUnPackedDeals\n   * DagstoreDestroyShard\n   * DagstoreGC\n   * DagstoreInitializeAll\n   * DagstoreInitializeShard\n   * DagstoreInitializeStorage\n   * DagstoreListShards\n   * DagstoreRecoverShard\n   * DealsBatchImportData\n   * DealsConsiderOfflineRetrievalDeals\n   * DealsConsiderOfflineStorageDeals\n   * DealsConsiderOnlineRetrievalDeals\n   * DealsConsiderOnlineStorageDeals\n   * DealsConsiderUnverifiedStorageDeals\n   * DealsConsiderVerifiedStorageDeals\n   * DealsImport\n   * DealsImportData\n   * DealsMaxProviderCollateralMultiplier\n   * DealsMaxPublishFee\n   * DealsMaxStartDelay\n   * DealsPieceCidBlocklist\n   * DealsPublishMsgPeriod\n   * DealsSetConsiderOfflineRetrievalDeals\n   * DealsSetConsiderOfflineStorageDeals\n   * DealsSetConsiderOnlineRetrievalDeals\n   * DealsSetConsiderOnlineStorageDeals\n   * DealsSetConsiderUnverifiedStorageDeals\n   * DealsSetConsiderVerifiedStorageDeals\n   * DealsSetMaxProviderCollateralMultiplier\n   * DealsSetMaxPublishFee\n   * DealsSetMaxStartDelay\n   * DealsSetPieceCidBlocklist\n   * DealsSetPublishMsgPeriod\n   * GetDeals\n   * GetRetrievalDealStatistic\n   * GetStorageDealStatistic\n   * GetUnPackedDeals\n   * ID\n   * ListPieceStorageInfos\n   * ListenMarketEvent\n   * MarkDealsAsPacking\n   * MarketAddBalance\n   * MarketCancelDataTransfer\n   * MarketDataTransferPath\n   * MarketDataTransferUpdates\n   * MarketGetAsk\n   * MarketGetDeal\n   * MarketGetDealUpdates\n   * MarketGetReserved\n   * MarketGetRetrievalAsk\n   * MarketGetRetrievalDeal\n   * MarketImportDealData\n   * MarketImportPublishedDeal\n   * MarketListDataTransfers\n   * MarketListDeals\n   * MarketListIncompleteDeals\n   * MarketListRetrievalAsk\n   * MarketListRetrievalDeals\n   * MarketListStorageAsk\n   * MarketMaxBalanceAddFee\n   * MarketMaxDealsPerPublishMsg\n   * MarketPendingDeals\n   * MarketPublishPendingDeals\n   * MarketReleaseFunds\n   * MarketReserveFunds\n   * MarketRestartDataTransfer\n   * MarketSetAsk\n   * MarketSetDataTransferPath\n   * MarketSetMaxBalanceAddFee\n   * MarketSetMaxDealsPerPublishMsg\n   * MarketSetRetrievalAsk\n   * MarketWithdraw\n   * MessagerGetMessage\n   * MessagerPushMessage\n   * MessagerWaitMessage\n   * NetAddrsListen\n   * PaychVoucherList\n   * PiecesGetCIDInfo\n   * PiecesGetPieceInfo\n   * PiecesListCidInfos\n   * PiecesListPieces\n   * RemovePieceStorage\n   * ResponseMarketEvent\n   * SectorGetExpectedSealDuration\n   * SectorSetExpectedSealDuration\n   * UpdateDealOnPacking\n   * UpdateDealStatus\n   * UpdateStorageDealStatus\n   * Version\n\n\n# Market\n\n\n# ActorDelete\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: {}\n\n\n# ActorExist\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# ActorList\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Addr": "f01234",\n    "Account": "string value"\n  }\n]\n\n\n\n# ActorSectorSize\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 34359738368\n\n\n# ActorUpsert\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "Addr": "f01234",\n    "Account": "string value"\n  }\n]\n\n\nResponse: true\n\n\n# AddFsPieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  "string value",\n  true\n]\n\n\nResponse: {}\n\n\n# AddS3PieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  true\n]\n\n\nResponse: {}\n\n\n# AssignUnPackedDeals\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "Miner": 1000,\n    "Number": 9\n  },\n  34359738368,\n  {\n    "MaxPiece": 123,\n    "MaxPieceSize": 42,\n    "MinPiece": 123,\n    "MinPieceSize": 42,\n    "MinUsedSpace": 42,\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "SectorExpiration": 10101\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0",\n    "Offset": 1032,\n    "Length": 1032,\n    "PayloadSize": 42,\n    "DealID": 5432,\n    "TotalStorageFee": "0",\n    "FastRetrieval": true,\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# DagstoreDestroyShard\n\nDagstoreDestroyShard destroy shard by key\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DagstoreGC\n\nDagstoreGC runs garbage collection on the DAG store.\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Key": "string value",\n    "Success": true,\n    "Error": "string value"\n  }\n]\n\n\n\n# DagstoreInitializeAll\n\nDagstoreInitializeAll initializes all uninitialized shards in bulk, according to the policy passed in the parameters.\n\nIt is recommended to set a maximum concurrency to avoid extreme IO pressure if the storage subsystem has a large amount of deals.\n\nIt returns a stream of events to report progress.\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "MaxConcurrency": 123,\n    "IncludeSealed": true\n  }\n]\n\n\nResponse:\n\n{\n  "Key": "string value",\n  "Event": "string value",\n  "Success": true,\n  "Error": "string value",\n  "Total": 123,\n  "Current": 123\n}\n\n\n\n# DagstoreInitializeShard\n\nDagstoreInitializeShard initializes an uninitialized shard.\n\nInitialization consists of fetching the shard\'s data (deal payload) from the storage subsystem, generating an index, and persisting the index to facilitate later retrievals, and/or to publish to external sources.\n\nThis operation is intended to complement the initial migration. The migration registers a shard for every unique piece CID, with lazy initialization. Thus, shards are not initialized immediately to avoid IO activity competing with proving. Instead, shard are initialized when first accessed. This method forces the initialization of a shard by accessing it and immediately releasing it. This is useful to warm up the cache to facilitate subsequent retrievals, and to generate the indexes to publish them externally.\n\nThis operation fails if the shard is not in ShardStateNew state. It blocks until initialization finishes.\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DagstoreInitializeStorage\n\nDagstoreInitializeStorage initializes all pieces in specify storage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  {\n    "MaxConcurrency": 123,\n    "IncludeSealed": true\n  }\n]\n\n\nResponse:\n\n{\n  "Key": "string value",\n  "Event": "string value",\n  "Success": true,\n  "Error": "string value",\n  "Total": 123,\n  "Current": 123\n}\n\n\n\n# DagstoreListShards\n\nDagstoreListShards returns information about all shards known to the DAG store. Only available on nodes running the markets subsystem.\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Key": "string value",\n    "State": "string value",\n    "Error": "string value"\n  }\n]\n\n\n\n# DagstoreRecoverShard\n\nDagstoreRecoverShard attempts to recover a failed shard.\n\nThis operation fails if the shard is not in ShardStateErrored state. It blocks until recovery finishes. If recovery failed, it returns the error.\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DealsBatchImportData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "Refs": [\n      {\n        "ProposalCID": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "UUID": "07070707-0707-0707-0707-070707070707",\n        "File": "string value"\n      }\n    ],\n    "SkipCommP": true\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "Target": "string value",\n    "Message": "string value"\n  }\n]\n\n\n\n# DealsConsiderOfflineRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOfflineStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOnlineRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOnlineStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderUnverifiedStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderVerifiedStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsImport\n\nPerms: admin\n\nInputs:\n\n[\n  [\n    {\n      "ID": "07070707-0707-0707-0707-070707070707",\n      "Proposal": {\n        "PieceCID": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceSize": 1032,\n        "VerifiedDeal": true,\n        "Client": "f01234",\n        "Provider": "f01234",\n        "Label": "",\n        "StartEpoch": 10101,\n        "EndEpoch": 10101,\n        "StoragePricePerEpoch": "0",\n        "ProviderCollateral": "0",\n        "ClientCollateral": "0"\n      },\n      "ClientSignature": {\n        "Type": 2,\n        "Data": "Ynl0ZSBhcnJheQ=="\n      },\n      "ProposalCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "AddFundsCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PublishCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "State": 42,\n      "PiecePath": "/some/path",\n      "PayloadSize": 42,\n      "MetadataPath": "/some/path",\n      "SlashEpoch": 10101,\n      "FastRetrieval": true,\n      "Message": "string value",\n      "FundsReserved": "0",\n      "Ref": {\n        "TransferType": "string value",\n        "Root": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceCid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceSize": 1024,\n        "RawBlockSize": 42\n      },\n      "AvailableForRetrieval": true,\n      "DealID": 5432,\n      "CreationTime": "0001-01-01T00:00:00Z",\n      "TransferChannelId": {\n        "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n        "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n        "ID": 3\n      },\n      "SectorNumber": 9,\n      "Offset": 1032,\n      "PieceStatus": "Undefine",\n      "InboundCAR": "string value",\n      "CreatedAt": 42,\n      "UpdatedAt": 42\n    }\n  ]\n]\n\n\nResponse: {}\n\n\n# DealsImportData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "ProposalCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "UUID": "07070707-0707-0707-0707-070707070707",\n    "File": "string value"\n  },\n  true\n]\n\n\nResponse: {}\n\n\n# DealsMaxProviderCollateralMultiplier\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 42\n\n\n# DealsMaxPublishFee\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0 FIL"\n\n\n# DealsMaxStartDelay\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# DealsPieceCidBlocklist\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# DealsPublishMsgPeriod\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# DealsSetConsiderOfflineRetrievalDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOfflineStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOnlineRetrievalDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOnlineStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderUnverifiedStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderVerifiedStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxProviderCollateralMultiplier\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  42\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxPublishFee\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  "0 FIL"\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxStartDelay\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# DealsSetPieceCidBlocklist\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  ]\n]\n\n\nResponse: {}\n\n\n# DealsSetPublishMsgPeriod\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# GetDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234",\n  123,\n  123\n]\n\n\nResponse:\n\n[\n  {\n    "DealID": 5432,\n    "SectorID": 9,\n    "Offset": 1032,\n    "Length": 1032,\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "FastRetrieval": true,\n    "Status": "Undefine"\n  }\n]\n\n\n\n# GetRetrievalDealStatistic\n\nGetRetrievalDealStatistic get retrieval deal statistic information todo address undefined is invalid, it is currently not possible to directly associate an order with a miner\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "DealsStatus": {\n    "0": 9\n  }\n}\n\n\n\n# GetStorageDealStatistic\n\nGetStorageDealStatistic get storage deal statistic information if set miner address to address.Undef, return all storage deal info\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "DealsStatus": {\n    "42": 9\n  }\n}\n\n\n\n# GetUnPackedDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234",\n  {\n    "MaxPiece": 123,\n    "MaxPieceSize": 42,\n    "MinPiece": 123,\n    "MinPieceSize": 42,\n    "MinUsedSpace": 42,\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "SectorExpiration": 10101\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0",\n    "Offset": 1032,\n    "Length": 1032,\n    "PayloadSize": 42,\n    "DealID": 5432,\n    "TotalStorageFee": "0",\n    "FastRetrieval": true,\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# ID\n\nPerms: read\n\nInputs: []\n\nResponse: "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"\n\n\n# ListPieceStorageInfos\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "FsStorage": [\n    {\n      "Path": "string value",\n      "Name": "string value",\n      "ReadOnly": true,\n      "Status": {\n        "Capacity": 9,\n        "Available": 9,\n        "Reserved": 9\n      }\n    }\n  ],\n  "S3Storage": [\n    {\n      "Name": "string value",\n      "ReadOnly": true,\n      "EndPoint": "string value",\n      "Bucket": "string value",\n      "SubDir": "string value",\n      "Status": {\n        "Capacity": 9,\n        "Available": 9,\n        "Reserved": 9\n      }\n    }\n  ]\n}\n\n\n\n# ListenMarketEvent\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Miner": "f01234"\n  }\n]\n\n\nResponse:\n\n{\n  "Id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n  "Method": "string value",\n  "Payload": "Ynl0ZSBhcnJheQ=="\n}\n\n\n\n# MarkDealsAsPacking\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nResponse: {}\n\n\n# MarketAddBalance\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MarketCancelDataTransfer\n\nMarketCancelDataTransfer cancels a data transfer with the given transfer ID and other peer\n\nPerms: admin\n\nInputs:\n\n[\n  3,\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  true\n]\n\n\nResponse: {}\n\n\n# MarketDataTransferPath\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "string value"\n\n\n# MarketDataTransferUpdates\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n{\n  "TransferID": 3,\n  "Status": 1,\n  "BaseCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "IsInitiator": true,\n  "IsSender": true,\n  "Voucher": "string value",\n  "Message": "string value",\n  "OtherPeer": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Transferred": 42,\n  "Stages": {\n    "Stages": [\n      {\n        "Name": "string value",\n        "Description": "string value",\n        "CreatedTime": "0001-01-01T00:00:00Z",\n        "UpdatedTime": "0001-01-01T00:00:00Z",\n        "Logs": [\n          {\n            "Log": "string value",\n            "UpdatedTime": "0001-01-01T00:00:00Z"\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# MarketGetAsk\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "Ask": {\n    "Price": "0",\n    "VerifiedPrice": "0",\n    "MinPieceSize": 1032,\n    "MaxPieceSize": 1032,\n    "Miner": "f01234",\n    "Timestamp": 10101,\n    "Expiry": 10101,\n    "SeqNo": 42\n  },\n  "Signature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetDeal\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "ID": "07070707-0707-0707-0707-070707070707",\n  "Proposal": {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0"\n  },\n  "ClientSignature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "ProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "AddFundsCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PublishCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "State": 42,\n  "PiecePath": "/some/path",\n  "PayloadSize": 42,\n  "MetadataPath": "/some/path",\n  "SlashEpoch": 10101,\n  "FastRetrieval": true,\n  "Message": "string value",\n  "FundsReserved": "0",\n  "Ref": {\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1024,\n    "RawBlockSize": 42\n  },\n  "AvailableForRetrieval": true,\n  "DealID": 5432,\n  "CreationTime": "0001-01-01T00:00:00Z",\n  "TransferChannelId": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "SectorNumber": 9,\n  "Offset": 1032,\n  "PieceStatus": "Undefine",\n  "InboundCAR": "string value",\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetDealUpdates\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n{\n  "ID": "07070707-0707-0707-0707-070707070707",\n  "Proposal": {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0"\n  },\n  "ClientSignature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "ProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "AddFundsCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PublishCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "State": 42,\n  "PiecePath": "/some/path",\n  "PayloadSize": 42,\n  "MetadataPath": "/some/path",\n  "SlashEpoch": 10101,\n  "FastRetrieval": true,\n  "Message": "string value",\n  "FundsReserved": "0",\n  "Ref": {\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1024,\n    "RawBlockSize": 42\n  },\n  "AvailableForRetrieval": true,\n  "DealID": 5432,\n  "CreationTime": "0001-01-01T00:00:00Z",\n  "TransferChannelId": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "SectorNumber": 9,\n  "Offset": 1032,\n  "PieceStatus": "Undefine",\n  "InboundCAR": "string value",\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetReserved\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0"\n\n\n# MarketGetRetrievalAsk\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "PricePerByte": "0",\n  "UnsealPrice": "0",\n  "PaymentInterval": 42,\n  "PaymentIntervalIncrease": 42\n}\n\n\n\n# MarketGetRetrievalDeal\n\nPerms: read\n\nInputs:\n\n[\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  42\n]\n\n\nResponse:\n\n{\n  "PayloadCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "ID": 5,\n  "Selector": {\n    "Node": null\n  },\n  "PieceCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PricePerByte": "0",\n  "PaymentInterval": 42,\n  "PaymentIntervalIncrease": 42,\n  "UnsealPrice": "0",\n  "StoreID": 42,\n  "SelStorageProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "ChannelID": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "Status": 0,\n  "Receiver": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "TotalSent": 42,\n  "FundsReceived": "0",\n  "Message": "string value",\n  "CurrentInterval": 42,\n  "LegacyProtocol": true,\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketImportDealData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "string value"\n]\n\n\nResponse: {}\n\n\n# MarketImportPublishedDeal\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "ID": "07070707-0707-0707-0707-070707070707",\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "ProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "AddFundsCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "State": 42,\n    "PiecePath": "/some/path",\n    "PayloadSize": 42,\n    "MetadataPath": "/some/path",\n    "SlashEpoch": 10101,\n    "FastRetrieval": true,\n    "Message": "string value",\n    "FundsReserved": "0",\n    "Ref": {\n      "TransferType": "string value",\n      "Root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1024,\n      "RawBlockSize": 42\n    },\n    "AvailableForRetrieval": true,\n    "DealID": 5432,\n    "CreationTime": "0001-01-01T00:00:00Z",\n    "TransferChannelId": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "SectorNumber": 9,\n    "Offset": 1032,\n    "PieceStatus": "Undefine",\n    "InboundCAR": "string value",\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\nResponse: {}\n\n\n# MarketListDataTransfers\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "TransferID": 3,\n    "Status": 1,\n    "BaseCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "IsInitiator": true,\n    "IsSender": true,\n    "Voucher": "string value",\n    "Message": "string value",\n    "OtherPeer": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Transferred": 42,\n    "Stages": {\n      "Stages": [\n        {\n          "Name": "string value",\n          "Description": "string value",\n          "CreatedTime": "0001-01-01T00:00:00Z",\n          "UpdatedTime": "0001-01-01T00:00:00Z",\n          "Logs": [\n            {\n              "Log": "string value",\n              "UpdatedTime": "0001-01-01T00:00:00Z"\n            }\n          ]\n        }\n      ]\n    }\n  }\n]\n\n\n\n# MarketListDeals\n\nPerms: read\n\nInputs:\n\n[\n  [\n    "f01234"\n  ]\n]\n\n\nResponse:\n\n[\n  {\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "State": {\n      "SectorStartEpoch": 10101,\n      "LastUpdatedEpoch": 10101,\n      "SlashEpoch": 10101,\n      "VerifiedClaim": 0\n    }\n  }\n]\n\n\n\n# MarketListIncompleteDeals\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Miner": "f01234",\n    "State": 12,\n    "Client": "string value",\n    "DiscardFailedDeal": true,\n    "DealID": 5432,\n    "PieceCID": "string value",\n    "Offset": 123,\n    "Limit": 123,\n    "Asc": true\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "ID": "07070707-0707-0707-0707-070707070707",\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "ProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "AddFundsCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "State": 42,\n    "PiecePath": "/some/path",\n    "PayloadSize": 42,\n    "MetadataPath": "/some/path",\n    "SlashEpoch": 10101,\n    "FastRetrieval": true,\n    "Message": "string value",\n    "FundsReserved": "0",\n    "Ref": {\n      "TransferType": "string value",\n      "Root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1024,\n      "RawBlockSize": 42\n    },\n    "AvailableForRetrieval": true,\n    "DealID": 5432,\n    "CreationTime": "0001-01-01T00:00:00Z",\n    "TransferChannelId": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "SectorNumber": 9,\n    "Offset": 1032,\n    "PieceStatus": "Undefine",\n    "InboundCAR": "string value",\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListRetrievalAsk\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Miner": "f01234",\n    "PricePerByte": "0",\n    "UnsealPrice": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42,\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Receiver": "string value",\n    "PayloadCID": "string value",\n    "Status": 12,\n    "DiscardFailedDeal": true,\n    "Offset": 123,\n    "Limit": 123\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PayloadCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "ID": 5,\n    "Selector": {\n      "Node": null\n    },\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PricePerByte": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42,\n    "UnsealPrice": "0",\n    "StoreID": 42,\n    "SelStorageProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "ChannelID": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "Status": 0,\n    "Receiver": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "TotalSent": 42,\n    "FundsReceived": "0",\n    "Message": "string value",\n    "CurrentInterval": 42,\n    "LegacyProtocol": true,\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListStorageAsk\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Ask": {\n      "Price": "0",\n      "VerifiedPrice": "0",\n      "MinPieceSize": 1032,\n      "MaxPieceSize": 1032,\n      "Miner": "f01234",\n      "Timestamp": 10101,\n      "Expiry": 10101,\n      "SeqNo": 42\n    },\n    "Signature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketMaxBalanceAddFee\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0 FIL"\n\n\n# MarketMaxDealsPerPublishMsg\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 42\n\n\n# MarketPendingDeals\n\nPerms: write\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Deals": [\n      {\n        "Proposal": {\n          "PieceCID": {\n            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n          },\n          "PieceSize": 1032,\n          "VerifiedDeal": true,\n          "Client": "f01234",\n          "Provider": "f01234",\n          "Label": "",\n          "StartEpoch": 10101,\n          "EndEpoch": 10101,\n          "StoragePricePerEpoch": "0",\n          "ProviderCollateral": "0",\n          "ClientCollateral": "0"\n        },\n        "ClientSignature": {\n          "Type": 2,\n          "Data": "Ynl0ZSBhcnJheQ=="\n        }\n      }\n    ],\n    "PublishPeriodStart": "0001-01-01T00:00:00Z",\n    "PublishPeriod": 60000000000\n  }\n]\n\n\n\n# MarketPublishPendingDeals\n\nPerms: admin\n\nInputs: []\n\nResponse: {}\n\n\n# MarketReleaseFunds\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "0"\n]\n\n\nResponse: {}\n\n\n# MarketReserveFunds\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MarketRestartDataTransfer\n\nMarketRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer\n\nPerms: admin\n\nInputs:\n\n[\n  3,\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  true\n]\n\n\nResponse: {}\n\n\n# MarketSetAsk\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  "0",\n  "0",\n  10101,\n  1032,\n  1032\n]\n\n\nResponse: {}\n\n\n# MarketSetDataTransferPath\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  "string value"\n]\n\n\nResponse: {}\n\n\n# MarketSetMaxBalanceAddFee\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  "0 FIL"\n]\n\n\nResponse: {}\n\n\n# MarketSetMaxDealsPerPublishMsg\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  42\n]\n\n\nResponse: {}\n\n\n# MarketSetRetrievalAsk\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  {\n    "PricePerByte": "0",\n    "UnsealPrice": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42\n  }\n]\n\n\nResponse: {}\n\n\n# MarketWithdraw\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MessagerGetMessage\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "CID": {\n    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n  },\n  "Version": 42,\n  "To": "f01234",\n  "From": "f01234",\n  "Nonce": 42,\n  "Value": "0",\n  "GasLimit": 9,\n  "GasFeeCap": "0",\n  "GasPremium": "0",\n  "Method": 1,\n  "Params": "Ynl0ZSBhcnJheQ=="\n}\n\n\n\n# MessagerPushMessage\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "CID": {\n      "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n    },\n    "Version": 42,\n    "To": "f01234",\n    "From": "f01234",\n    "Nonce": 42,\n    "Value": "0",\n    "GasLimit": 9,\n    "GasFeeCap": "0",\n    "GasPremium": "0",\n    "Method": 1,\n    "Params": "Ynl0ZSBhcnJheQ=="\n  },\n  {\n    "MaxFee": "0",\n    "GasOverEstimation": 12.3,\n    "GasOverPremium": 12.3\n  }\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MessagerWaitMessage\n\nmessager\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "Message": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Receipt": {\n    "ExitCode": 0,\n    "Return": "Ynl0ZSBhcnJheQ==",\n    "GasUsed": 9,\n    "EventsRoot": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  },\n  "ReturnDec": {},\n  "TipSet": [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    {\n      "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"\n    }\n  ],\n  "Height": 10101\n}\n\n\n\n# NetAddrsListen\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Addrs": [\n    "/ip4/52.36.61.156/tcp/1347/p2p/12D3KooWFETiESTf1v4PGUvtnxMAcEFMzLZbJGg4tjWfGEimYior"\n  ]\n}\n\n\n\n# PaychVoucherList\n\nPaych\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n[\n  {\n    "ChannelAddr": "f01234",\n    "TimeLockMin": 10101,\n    "TimeLockMax": 10101,\n    "SecretHash": "Ynl0ZSBhcnJheQ==",\n    "Extra": {\n      "Actor": "f01234",\n      "Method": 1,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "Lane": 42,\n    "Nonce": 42,\n    "Amount": "0",\n    "MinSettleHeight": 10101,\n    "Merges": [\n      {\n        "Lane": 42,\n        "Nonce": 42\n      }\n    ],\n    "Signature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    }\n  }\n]\n\n\n\n# PiecesGetCIDInfo\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "CID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PieceBlockLocations": [\n    {\n      "RelOffset": 42,\n      "BlockSize": 42,\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      }\n    }\n  ]\n}\n\n\n\n# PiecesGetPieceInfo\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "PieceCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Deals": [\n    {\n      "DealID": 5432,\n      "SectorID": 9,\n      "Offset": 1032,\n      "Length": 1032\n    }\n  ]\n}\n\n\n\n# PiecesListCidInfos\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# PiecesListPieces\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# RemovePieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# ResponseMarketEvent\n\nmarket event\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n    "Payload": "Ynl0ZSBhcnJheQ==",\n    "Error": "string value"\n  }\n]\n\n\nResponse: {}\n\n\n# SectorGetExpectedSealDuration\n\nSectorGetExpectedSealDuration gets the time that a newly-created sector waits for more deals before it starts sealing\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# SectorSetExpectedSealDuration\n\nSectorSetExpectedSealDuration sets the expected time for a sector to seal\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# UpdateDealOnPacking\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  5432,\n  9,\n  1032\n]\n\n\nResponse: {}\n\n\n# UpdateDealStatus\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  5432,\n  "Undefine"\n]\n\n\nResponse: {}\n\n\n# UpdateStorageDealStatus\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  42,\n  "Undefine"\n]\n\n\nResponse: {}\n\n\n# Version\n\nVersion provides information about API provider\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "Version": "string value",\n  "APIVersion": 131840\n}\n',normalizedContent:'# sample code of curl\n\n# <inputs> corresponding to the value of inputs tag of each api\ncurl http://<ip>:<port>/rpc/v0 -x post -h "content-type: application/json"  -h "authorization: bearer <token>"  -d \'{"method": "venus_market.<method>", "params": <inputs>, "id": 0}\'\n\n\n\n# groups\n\n * market\n   * actordelete\n   * actorexist\n   * actorlist\n   * actorsectorsize\n   * actorupsert\n   * addfspiecestorage\n   * adds3piecestorage\n   * assignunpackeddeals\n   * dagstoredestroyshard\n   * dagstoregc\n   * dagstoreinitializeall\n   * dagstoreinitializeshard\n   * dagstoreinitializestorage\n   * dagstorelistshards\n   * dagstorerecovershard\n   * dealsbatchimportdata\n   * dealsconsiderofflineretrievaldeals\n   * dealsconsiderofflinestoragedeals\n   * dealsconsideronlineretrievaldeals\n   * dealsconsideronlinestoragedeals\n   * dealsconsiderunverifiedstoragedeals\n   * dealsconsiderverifiedstoragedeals\n   * dealsimport\n   * dealsimportdata\n   * dealsmaxprovidercollateralmultiplier\n   * dealsmaxpublishfee\n   * dealsmaxstartdelay\n   * dealspiececidblocklist\n   * dealspublishmsgperiod\n   * dealssetconsiderofflineretrievaldeals\n   * dealssetconsiderofflinestoragedeals\n   * dealssetconsideronlineretrievaldeals\n   * dealssetconsideronlinestoragedeals\n   * dealssetconsiderunverifiedstoragedeals\n   * dealssetconsiderverifiedstoragedeals\n   * dealssetmaxprovidercollateralmultiplier\n   * dealssetmaxpublishfee\n   * dealssetmaxstartdelay\n   * dealssetpiececidblocklist\n   * dealssetpublishmsgperiod\n   * getdeals\n   * getretrievaldealstatistic\n   * getstoragedealstatistic\n   * getunpackeddeals\n   * id\n   * listpiecestorageinfos\n   * listenmarketevent\n   * markdealsaspacking\n   * marketaddbalance\n   * marketcanceldatatransfer\n   * marketdatatransferpath\n   * marketdatatransferupdates\n   * marketgetask\n   * marketgetdeal\n   * marketgetdealupdates\n   * marketgetreserved\n   * marketgetretrievalask\n   * marketgetretrievaldeal\n   * marketimportdealdata\n   * marketimportpublisheddeal\n   * marketlistdatatransfers\n   * marketlistdeals\n   * marketlistincompletedeals\n   * marketlistretrievalask\n   * marketlistretrievaldeals\n   * marketliststorageask\n   * marketmaxbalanceaddfee\n   * marketmaxdealsperpublishmsg\n   * marketpendingdeals\n   * marketpublishpendingdeals\n   * marketreleasefunds\n   * marketreservefunds\n   * marketrestartdatatransfer\n   * marketsetask\n   * marketsetdatatransferpath\n   * marketsetmaxbalanceaddfee\n   * marketsetmaxdealsperpublishmsg\n   * marketsetretrievalask\n   * marketwithdraw\n   * messagergetmessage\n   * messagerpushmessage\n   * messagerwaitmessage\n   * netaddrslisten\n   * paychvoucherlist\n   * piecesgetcidinfo\n   * piecesgetpieceinfo\n   * pieceslistcidinfos\n   * pieceslistpieces\n   * removepiecestorage\n   * responsemarketevent\n   * sectorgetexpectedsealduration\n   * sectorsetexpectedsealduration\n   * updatedealonpacking\n   * updatedealstatus\n   * updatestoragedealstatus\n   * version\n\n\n# market\n\n\n# actordelete\n\nperms: admin\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: {}\n\n\n# actorexist\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# actorlist\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "addr": "f01234",\n    "account": "string value"\n  }\n]\n\n\n\n# actorsectorsize\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 34359738368\n\n\n# actorupsert\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "addr": "f01234",\n    "account": "string value"\n  }\n]\n\n\nresponse: true\n\n\n# addfspiecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  "string value",\n  true\n]\n\n\nresponse: {}\n\n\n# adds3piecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  true\n]\n\n\nresponse: {}\n\n\n# assignunpackeddeals\n\nperms: write\n\ninputs:\n\n[\n  {\n    "miner": 1000,\n    "number": 9\n  },\n  34359738368,\n  {\n    "maxpiece": 123,\n    "maxpiecesize": 42,\n    "minpiece": 123,\n    "minpiecesize": 42,\n    "minusedspace": 42,\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "sectorexpiration": 10101\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0",\n    "offset": 1032,\n    "length": 1032,\n    "payloadsize": 42,\n    "dealid": 5432,\n    "totalstoragefee": "0",\n    "fastretrieval": true,\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# dagstoredestroyshard\n\ndagstoredestroyshard destroy shard by key\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dagstoregc\n\ndagstoregc runs garbage collection on the dag store.\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "key": "string value",\n    "success": true,\n    "error": "string value"\n  }\n]\n\n\n\n# dagstoreinitializeall\n\ndagstoreinitializeall initializes all uninitialized shards in bulk, according to the policy passed in the parameters.\n\nit is recommended to set a maximum concurrency to avoid extreme io pressure if the storage subsystem has a large amount of deals.\n\nit returns a stream of events to report progress.\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "maxconcurrency": 123,\n    "includesealed": true\n  }\n]\n\n\nresponse:\n\n{\n  "key": "string value",\n  "event": "string value",\n  "success": true,\n  "error": "string value",\n  "total": 123,\n  "current": 123\n}\n\n\n\n# dagstoreinitializeshard\n\ndagstoreinitializeshard initializes an uninitialized shard.\n\ninitialization consists of fetching the shard\'s data (deal payload) from the storage subsystem, generating an index, and persisting the index to facilitate later retrievals, and/or to publish to external sources.\n\nthis operation is intended to complement the initial migration. the migration registers a shard for every unique piece cid, with lazy initialization. thus, shards are not initialized immediately to avoid io activity competing with proving. instead, shard are initialized when first accessed. this method forces the initialization of a shard by accessing it and immediately releasing it. this is useful to warm up the cache to facilitate subsequent retrievals, and to generate the indexes to publish them externally.\n\nthis operation fails if the shard is not in shardstatenew state. it blocks until initialization finishes.\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dagstoreinitializestorage\n\ndagstoreinitializestorage initializes all pieces in specify storage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  {\n    "maxconcurrency": 123,\n    "includesealed": true\n  }\n]\n\n\nresponse:\n\n{\n  "key": "string value",\n  "event": "string value",\n  "success": true,\n  "error": "string value",\n  "total": 123,\n  "current": 123\n}\n\n\n\n# dagstorelistshards\n\ndagstorelistshards returns information about all shards known to the dag store. only available on nodes running the markets subsystem.\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "key": "string value",\n    "state": "string value",\n    "error": "string value"\n  }\n]\n\n\n\n# dagstorerecovershard\n\ndagstorerecovershard attempts to recover a failed shard.\n\nthis operation fails if the shard is not in shardstateerrored state. it blocks until recovery finishes. if recovery failed, it returns the error.\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dealsbatchimportdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "refs": [\n      {\n        "proposalcid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "uuid": "07070707-0707-0707-0707-070707070707",\n        "file": "string value"\n      }\n    ],\n    "skipcommp": true\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "target": "string value",\n    "message": "string value"\n  }\n]\n\n\n\n# dealsconsiderofflineretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderofflinestoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsideronlineretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsideronlinestoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderunverifiedstoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderverifiedstoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsimport\n\nperms: admin\n\ninputs:\n\n[\n  [\n    {\n      "id": "07070707-0707-0707-0707-070707070707",\n      "proposal": {\n        "piececid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piecesize": 1032,\n        "verifieddeal": true,\n        "client": "f01234",\n        "provider": "f01234",\n        "label": "",\n        "startepoch": 10101,\n        "endepoch": 10101,\n        "storagepriceperepoch": "0",\n        "providercollateral": "0",\n        "clientcollateral": "0"\n      },\n      "clientsignature": {\n        "type": 2,\n        "data": "ynl0zsbhcnjheq=="\n      },\n      "proposalcid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "addfundscid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "publishcid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "state": 42,\n      "piecepath": "/some/path",\n      "payloadsize": 42,\n      "metadatapath": "/some/path",\n      "slashepoch": 10101,\n      "fastretrieval": true,\n      "message": "string value",\n      "fundsreserved": "0",\n      "ref": {\n        "transfertype": "string value",\n        "root": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piececid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piecesize": 1024,\n        "rawblocksize": 42\n      },\n      "availableforretrieval": true,\n      "dealid": 5432,\n      "creationtime": "0001-01-01t00:00:00z",\n      "transferchannelid": {\n        "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n        "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n        "id": 3\n      },\n      "sectornumber": 9,\n      "offset": 1032,\n      "piecestatus": "undefine",\n      "inboundcar": "string value",\n      "createdat": 42,\n      "updatedat": 42\n    }\n  ]\n]\n\n\nresponse: {}\n\n\n# dealsimportdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "uuid": "07070707-0707-0707-0707-070707070707",\n    "file": "string value"\n  },\n  true\n]\n\n\nresponse: {}\n\n\n# dealsmaxprovidercollateralmultiplier\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 42\n\n\n# dealsmaxpublishfee\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0 fil"\n\n\n# dealsmaxstartdelay\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# dealspiececidblocklist\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# dealspublishmsgperiod\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# dealssetconsiderofflineretrievaldeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderofflinestoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsideronlineretrievaldeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsideronlinestoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderunverifiedstoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderverifiedstoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetmaxprovidercollateralmultiplier\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  42\n]\n\n\nresponse: {}\n\n\n# dealssetmaxpublishfee\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  "0 fil"\n]\n\n\nresponse: {}\n\n\n# dealssetmaxstartdelay\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# dealssetpiececidblocklist\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  ]\n]\n\n\nresponse: {}\n\n\n# dealssetpublishmsgperiod\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# getdeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234",\n  123,\n  123\n]\n\n\nresponse:\n\n[\n  {\n    "dealid": 5432,\n    "sectorid": 9,\n    "offset": 1032,\n    "length": 1032,\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "fastretrieval": true,\n    "status": "undefine"\n  }\n]\n\n\n\n# getretrievaldealstatistic\n\ngetretrievaldealstatistic get retrieval deal statistic information todo address undefined is invalid, it is currently not possible to directly associate an order with a miner\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "dealsstatus": {\n    "0": 9\n  }\n}\n\n\n\n# getstoragedealstatistic\n\ngetstoragedealstatistic get storage deal statistic information if set miner address to address.undef, return all storage deal info\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "dealsstatus": {\n    "42": 9\n  }\n}\n\n\n\n# getunpackeddeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234",\n  {\n    "maxpiece": 123,\n    "maxpiecesize": 42,\n    "minpiece": 123,\n    "minpiecesize": 42,\n    "minusedspace": 42,\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "sectorexpiration": 10101\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0",\n    "offset": 1032,\n    "length": 1032,\n    "payloadsize": 42,\n    "dealid": 5432,\n    "totalstoragefee": "0",\n    "fastretrieval": true,\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# id\n\nperms: read\n\ninputs: []\n\nresponse: "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf"\n\n\n# listpiecestorageinfos\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "fsstorage": [\n    {\n      "path": "string value",\n      "name": "string value",\n      "readonly": true,\n      "status": {\n        "capacity": 9,\n        "available": 9,\n        "reserved": 9\n      }\n    }\n  ],\n  "s3storage": [\n    {\n      "name": "string value",\n      "readonly": true,\n      "endpoint": "string value",\n      "bucket": "string value",\n      "subdir": "string value",\n      "status": {\n        "capacity": 9,\n        "available": 9,\n        "reserved": 9\n      }\n    }\n  ]\n}\n\n\n\n# listenmarketevent\n\nperms: read\n\ninputs:\n\n[\n  {\n    "miner": "f01234"\n  }\n]\n\n\nresponse:\n\n{\n  "id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n  "method": "string value",\n  "payload": "ynl0zsbhcnjheq=="\n}\n\n\n\n# markdealsaspacking\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nresponse: {}\n\n\n# marketaddbalance\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# marketcanceldatatransfer\n\nmarketcanceldatatransfer cancels a data transfer with the given transfer id and other peer\n\nperms: admin\n\ninputs:\n\n[\n  3,\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  true\n]\n\n\nresponse: {}\n\n\n# marketdatatransferpath\n\nperms: admin\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "string value"\n\n\n# marketdatatransferupdates\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n{\n  "transferid": 3,\n  "status": 1,\n  "basecid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "isinitiator": true,\n  "issender": true,\n  "voucher": "string value",\n  "message": "string value",\n  "otherpeer": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "transferred": 42,\n  "stages": {\n    "stages": [\n      {\n        "name": "string value",\n        "description": "string value",\n        "createdtime": "0001-01-01t00:00:00z",\n        "updatedtime": "0001-01-01t00:00:00z",\n        "logs": [\n          {\n            "log": "string value",\n            "updatedtime": "0001-01-01t00:00:00z"\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# marketgetask\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "ask": {\n    "price": "0",\n    "verifiedprice": "0",\n    "minpiecesize": 1032,\n    "maxpiecesize": 1032,\n    "miner": "f01234",\n    "timestamp": 10101,\n    "expiry": 10101,\n    "seqno": 42\n  },\n  "signature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetdeal\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "id": "07070707-0707-0707-0707-070707070707",\n  "proposal": {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0"\n  },\n  "clientsignature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "proposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "addfundscid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "publishcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "state": 42,\n  "piecepath": "/some/path",\n  "payloadsize": 42,\n  "metadatapath": "/some/path",\n  "slashepoch": 10101,\n  "fastretrieval": true,\n  "message": "string value",\n  "fundsreserved": "0",\n  "ref": {\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1024,\n    "rawblocksize": 42\n  },\n  "availableforretrieval": true,\n  "dealid": 5432,\n  "creationtime": "0001-01-01t00:00:00z",\n  "transferchannelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "sectornumber": 9,\n  "offset": 1032,\n  "piecestatus": "undefine",\n  "inboundcar": "string value",\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetdealupdates\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n{\n  "id": "07070707-0707-0707-0707-070707070707",\n  "proposal": {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0"\n  },\n  "clientsignature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "proposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "addfundscid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "publishcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "state": 42,\n  "piecepath": "/some/path",\n  "payloadsize": 42,\n  "metadatapath": "/some/path",\n  "slashepoch": 10101,\n  "fastretrieval": true,\n  "message": "string value",\n  "fundsreserved": "0",\n  "ref": {\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1024,\n    "rawblocksize": 42\n  },\n  "availableforretrieval": true,\n  "dealid": 5432,\n  "creationtime": "0001-01-01t00:00:00z",\n  "transferchannelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "sectornumber": 9,\n  "offset": 1032,\n  "piecestatus": "undefine",\n  "inboundcar": "string value",\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetreserved\n\nperms: sign\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0"\n\n\n# marketgetretrievalask\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "priceperbyte": "0",\n  "unsealprice": "0",\n  "paymentinterval": 42,\n  "paymentintervalincrease": 42\n}\n\n\n\n# marketgetretrievaldeal\n\nperms: read\n\ninputs:\n\n[\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  42\n]\n\n\nresponse:\n\n{\n  "payloadcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "id": 5,\n  "selector": {\n    "node": null\n  },\n  "piececid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "priceperbyte": "0",\n  "paymentinterval": 42,\n  "paymentintervalincrease": 42,\n  "unsealprice": "0",\n  "storeid": 42,\n  "selstorageproposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "channelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "status": 0,\n  "receiver": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "totalsent": 42,\n  "fundsreceived": "0",\n  "message": "string value",\n  "currentinterval": 42,\n  "legacyprotocol": true,\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketimportdealdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "string value"\n]\n\n\nresponse: {}\n\n\n# marketimportpublisheddeal\n\nperms: write\n\ninputs:\n\n[\n  {\n    "id": "07070707-0707-0707-0707-070707070707",\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "addfundscid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "state": 42,\n    "piecepath": "/some/path",\n    "payloadsize": 42,\n    "metadatapath": "/some/path",\n    "slashepoch": 10101,\n    "fastretrieval": true,\n    "message": "string value",\n    "fundsreserved": "0",\n    "ref": {\n      "transfertype": "string value",\n      "root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1024,\n      "rawblocksize": 42\n    },\n    "availableforretrieval": true,\n    "dealid": 5432,\n    "creationtime": "0001-01-01t00:00:00z",\n    "transferchannelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "sectornumber": 9,\n    "offset": 1032,\n    "piecestatus": "undefine",\n    "inboundcar": "string value",\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\nresponse: {}\n\n\n# marketlistdatatransfers\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "transferid": 3,\n    "status": 1,\n    "basecid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "isinitiator": true,\n    "issender": true,\n    "voucher": "string value",\n    "message": "string value",\n    "otherpeer": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "transferred": 42,\n    "stages": {\n      "stages": [\n        {\n          "name": "string value",\n          "description": "string value",\n          "createdtime": "0001-01-01t00:00:00z",\n          "updatedtime": "0001-01-01t00:00:00z",\n          "logs": [\n            {\n              "log": "string value",\n              "updatedtime": "0001-01-01t00:00:00z"\n            }\n          ]\n        }\n      ]\n    }\n  }\n]\n\n\n\n# marketlistdeals\n\nperms: read\n\ninputs:\n\n[\n  [\n    "f01234"\n  ]\n]\n\n\nresponse:\n\n[\n  {\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "state": {\n      "sectorstartepoch": 10101,\n      "lastupdatedepoch": 10101,\n      "slashepoch": 10101,\n      "verifiedclaim": 0\n    }\n  }\n]\n\n\n\n# marketlistincompletedeals\n\nperms: read\n\ninputs:\n\n[\n  {\n    "miner": "f01234",\n    "state": 12,\n    "client": "string value",\n    "discardfaileddeal": true,\n    "dealid": 5432,\n    "piececid": "string value",\n    "offset": 123,\n    "limit": 123,\n    "asc": true\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "id": "07070707-0707-0707-0707-070707070707",\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "addfundscid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "state": 42,\n    "piecepath": "/some/path",\n    "payloadsize": 42,\n    "metadatapath": "/some/path",\n    "slashepoch": 10101,\n    "fastretrieval": true,\n    "message": "string value",\n    "fundsreserved": "0",\n    "ref": {\n      "transfertype": "string value",\n      "root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1024,\n      "rawblocksize": 42\n    },\n    "availableforretrieval": true,\n    "dealid": 5432,\n    "creationtime": "0001-01-01t00:00:00z",\n    "transferchannelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "sectornumber": 9,\n    "offset": 1032,\n    "piecestatus": "undefine",\n    "inboundcar": "string value",\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketlistretrievalask\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "miner": "f01234",\n    "priceperbyte": "0",\n    "unsealprice": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42,\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketlistretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  {\n    "receiver": "string value",\n    "payloadcid": "string value",\n    "status": 12,\n    "discardfaileddeal": true,\n    "offset": 123,\n    "limit": 123\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "payloadcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "id": 5,\n    "selector": {\n      "node": null\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "priceperbyte": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42,\n    "unsealprice": "0",\n    "storeid": 42,\n    "selstorageproposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "channelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "status": 0,\n    "receiver": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "totalsent": 42,\n    "fundsreceived": "0",\n    "message": "string value",\n    "currentinterval": 42,\n    "legacyprotocol": true,\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketliststorageask\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "ask": {\n      "price": "0",\n      "verifiedprice": "0",\n      "minpiecesize": 1032,\n      "maxpiecesize": 1032,\n      "miner": "f01234",\n      "timestamp": 10101,\n      "expiry": 10101,\n      "seqno": 42\n    },\n    "signature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketmaxbalanceaddfee\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0 fil"\n\n\n# marketmaxdealsperpublishmsg\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 42\n\n\n# marketpendingdeals\n\nperms: write\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "deals": [\n      {\n        "proposal": {\n          "piececid": {\n            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n          },\n          "piecesize": 1032,\n          "verifieddeal": true,\n          "client": "f01234",\n          "provider": "f01234",\n          "label": "",\n          "startepoch": 10101,\n          "endepoch": 10101,\n          "storagepriceperepoch": "0",\n          "providercollateral": "0",\n          "clientcollateral": "0"\n        },\n        "clientsignature": {\n          "type": 2,\n          "data": "ynl0zsbhcnjheq=="\n        }\n      }\n    ],\n    "publishperiodstart": "0001-01-01t00:00:00z",\n    "publishperiod": 60000000000\n  }\n]\n\n\n\n# marketpublishpendingdeals\n\nperms: admin\n\ninputs: []\n\nresponse: {}\n\n\n# marketreleasefunds\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "0"\n]\n\n\nresponse: {}\n\n\n# marketreservefunds\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# marketrestartdatatransfer\n\nmarketrestartdatatransfer attempts to restart a data transfer with the given transfer id and other peer\n\nperms: admin\n\ninputs:\n\n[\n  3,\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  true\n]\n\n\nresponse: {}\n\n\n# marketsetask\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  "0",\n  "0",\n  10101,\n  1032,\n  1032\n]\n\n\nresponse: {}\n\n\n# marketsetdatatransferpath\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  "string value"\n]\n\n\nresponse: {}\n\n\n# marketsetmaxbalanceaddfee\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  "0 fil"\n]\n\n\nresponse: {}\n\n\n# marketsetmaxdealsperpublishmsg\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  42\n]\n\n\nresponse: {}\n\n\n# marketsetretrievalask\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  {\n    "priceperbyte": "0",\n    "unsealprice": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42\n  }\n]\n\n\nresponse: {}\n\n\n# marketwithdraw\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# messagergetmessage\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "cid": {\n    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n  },\n  "version": 42,\n  "to": "f01234",\n  "from": "f01234",\n  "nonce": 42,\n  "value": "0",\n  "gaslimit": 9,\n  "gasfeecap": "0",\n  "gaspremium": "0",\n  "method": 1,\n  "params": "ynl0zsbhcnjheq=="\n}\n\n\n\n# messagerpushmessage\n\nperms: write\n\ninputs:\n\n[\n  {\n    "cid": {\n      "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n    },\n    "version": 42,\n    "to": "f01234",\n    "from": "f01234",\n    "nonce": 42,\n    "value": "0",\n    "gaslimit": 9,\n    "gasfeecap": "0",\n    "gaspremium": "0",\n    "method": 1,\n    "params": "ynl0zsbhcnjheq=="\n  },\n  {\n    "maxfee": "0",\n    "gasoverestimation": 12.3,\n    "gasoverpremium": 12.3\n  }\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# messagerwaitmessage\n\nmessager\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "message": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "receipt": {\n    "exitcode": 0,\n    "return": "ynl0zsbhcnjheq==",\n    "gasused": 9,\n    "eventsroot": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  },\n  "returndec": {},\n  "tipset": [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    {\n      "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"\n    }\n  ],\n  "height": 10101\n}\n\n\n\n# netaddrslisten\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "id": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "addrs": [\n    "/ip4/52.36.61.156/tcp/1347/p2p/12d3koowfetiestf1v4pguvtnxmacefmzlzbjgg4tjwfgeimyior"\n  ]\n}\n\n\n\n# paychvoucherlist\n\npaych\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n[\n  {\n    "channeladdr": "f01234",\n    "timelockmin": 10101,\n    "timelockmax": 10101,\n    "secrethash": "ynl0zsbhcnjheq==",\n    "extra": {\n      "actor": "f01234",\n      "method": 1,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "lane": 42,\n    "nonce": 42,\n    "amount": "0",\n    "minsettleheight": 10101,\n    "merges": [\n      {\n        "lane": 42,\n        "nonce": 42\n      }\n    ],\n    "signature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    }\n  }\n]\n\n\n\n# piecesgetcidinfo\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "cid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "pieceblocklocations": [\n    {\n      "reloffset": 42,\n      "blocksize": 42,\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      }\n    }\n  ]\n}\n\n\n\n# piecesgetpieceinfo\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "piececid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "deals": [\n    {\n      "dealid": 5432,\n      "sectorid": 9,\n      "offset": 1032,\n      "length": 1032\n    }\n  ]\n}\n\n\n\n# pieceslistcidinfos\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# pieceslistpieces\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# removepiecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# responsemarketevent\n\nmarket event\n\nperms: read\n\ninputs:\n\n[\n  {\n    "id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n    "payload": "ynl0zsbhcnjheq==",\n    "error": "string value"\n  }\n]\n\n\nresponse: {}\n\n\n# sectorgetexpectedsealduration\n\nsectorgetexpectedsealduration gets the time that a newly-created sector waits for more deals before it starts sealing\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# sectorsetexpectedsealduration\n\nsectorsetexpectedsealduration sets the expected time for a sector to seal\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# updatedealonpacking\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  5432,\n  9,\n  1032\n]\n\n\nresponse: {}\n\n\n# updatedealstatus\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  5432,\n  "undefine"\n]\n\n\nresponse: {}\n\n\n# updatestoragedealstatus\n\nperms: write\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  42,\n  "undefine"\n]\n\n\nresponse: {}\n\n\n# version\n\nversion provides information about api provider\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "version": "string value",\n  "apiversion": 131840\n}\n',charsets:{}},{title:"Sample code of curl",frontmatter:{},regularPath:"/zh/developer/market-api-v1.html",relativePath:"zh/developer/market-api-v1.md",key:"v-524cc75f",path:"/zh/developer/market-api-v1.html",headers:[{level:2,title:"Market",slug:"market",normalizedTitle:"market",charIndex:285},{level:3,title:"ActorDelete",slug:"actordelete",normalizedTitle:"actordelete",charIndex:297},{level:3,title:"ActorExist",slug:"actorexist",normalizedTitle:"actorexist",charIndex:314},{level:3,title:"ActorList",slug:"actorlist",normalizedTitle:"actorlist",charIndex:330},{level:3,title:"ActorSectorSize",slug:"actorsectorsize",normalizedTitle:"actorsectorsize",charIndex:345},{level:3,title:"ActorUpsert",slug:"actorupsert",normalizedTitle:"actorupsert",charIndex:366},{level:3,title:"AddFsPieceStorage",slug:"addfspiecestorage",normalizedTitle:"addfspiecestorage",charIndex:383},{level:3,title:"AddS3PieceStorage",slug:"adds3piecestorage",normalizedTitle:"adds3piecestorage",charIndex:406},{level:3,title:"AssignUnPackedDeals",slug:"assignunpackeddeals",normalizedTitle:"assignunpackeddeals",charIndex:429},{level:3,title:"DagstoreDestroyShard",slug:"dagstoredestroyshard",normalizedTitle:"dagstoredestroyshard",charIndex:454},{level:3,title:"DagstoreGC",slug:"dagstoregc",normalizedTitle:"dagstoregc",charIndex:480},{level:3,title:"DagstoreInitializeAll",slug:"dagstoreinitializeall",normalizedTitle:"dagstoreinitializeall",charIndex:496},{level:3,title:"DagstoreInitializeShard",slug:"dagstoreinitializeshard",normalizedTitle:"dagstoreinitializeshard",charIndex:523},{level:3,title:"DagstoreInitializeStorage",slug:"dagstoreinitializestorage",normalizedTitle:"dagstoreinitializestorage",charIndex:552},{level:3,title:"DagstoreListShards",slug:"dagstorelistshards",normalizedTitle:"dagstorelistshards",charIndex:583},{level:3,title:"DagstoreRecoverShard",slug:"dagstorerecovershard",normalizedTitle:"dagstorerecovershard",charIndex:607},{level:3,title:"DealsBatchImportData",slug:"dealsbatchimportdata",normalizedTitle:"dealsbatchimportdata",charIndex:633},{level:3,title:"DealsConsiderOfflineRetrievalDeals",slug:"dealsconsiderofflineretrievaldeals",normalizedTitle:"dealsconsiderofflineretrievaldeals",charIndex:659},{level:3,title:"DealsConsiderOfflineStorageDeals",slug:"dealsconsiderofflinestoragedeals",normalizedTitle:"dealsconsiderofflinestoragedeals",charIndex:699},{level:3,title:"DealsConsiderOnlineRetrievalDeals",slug:"dealsconsideronlineretrievaldeals",normalizedTitle:"dealsconsideronlineretrievaldeals",charIndex:737},{level:3,title:"DealsConsiderOnlineStorageDeals",slug:"dealsconsideronlinestoragedeals",normalizedTitle:"dealsconsideronlinestoragedeals",charIndex:776},{level:3,title:"DealsConsiderUnverifiedStorageDeals",slug:"dealsconsiderunverifiedstoragedeals",normalizedTitle:"dealsconsiderunverifiedstoragedeals",charIndex:813},{level:3,title:"DealsConsiderVerifiedStorageDeals",slug:"dealsconsiderverifiedstoragedeals",normalizedTitle:"dealsconsiderverifiedstoragedeals",charIndex:854},{level:3,title:"DealsImport",slug:"dealsimport",normalizedTitle:"dealsimport",charIndex:893},{level:3,title:"DealsImportData",slug:"dealsimportdata",normalizedTitle:"dealsimportdata",charIndex:910},{level:3,title:"DealsMaxProviderCollateralMultiplier",slug:"dealsmaxprovidercollateralmultiplier",normalizedTitle:"dealsmaxprovidercollateralmultiplier",charIndex:931},{level:3,title:"DealsMaxPublishFee",slug:"dealsmaxpublishfee",normalizedTitle:"dealsmaxpublishfee",charIndex:973},{level:3,title:"DealsMaxStartDelay",slug:"dealsmaxstartdelay",normalizedTitle:"dealsmaxstartdelay",charIndex:997},{level:3,title:"DealsPieceCidBlocklist",slug:"dealspiececidblocklist",normalizedTitle:"dealspiececidblocklist",charIndex:1021},{level:3,title:"DealsPublishMsgPeriod",slug:"dealspublishmsgperiod",normalizedTitle:"dealspublishmsgperiod",charIndex:1049},{level:3,title:"DealsSetConsiderOfflineRetrievalDeals",slug:"dealssetconsiderofflineretrievaldeals",normalizedTitle:"dealssetconsiderofflineretrievaldeals",charIndex:1076},{level:3,title:"DealsSetConsiderOfflineStorageDeals",slug:"dealssetconsiderofflinestoragedeals",normalizedTitle:"dealssetconsiderofflinestoragedeals",charIndex:1119},{level:3,title:"DealsSetConsiderOnlineRetrievalDeals",slug:"dealssetconsideronlineretrievaldeals",normalizedTitle:"dealssetconsideronlineretrievaldeals",charIndex:1160},{level:3,title:"DealsSetConsiderOnlineStorageDeals",slug:"dealssetconsideronlinestoragedeals",normalizedTitle:"dealssetconsideronlinestoragedeals",charIndex:1202},{level:3,title:"DealsSetConsiderUnverifiedStorageDeals",slug:"dealssetconsiderunverifiedstoragedeals",normalizedTitle:"dealssetconsiderunverifiedstoragedeals",charIndex:1242},{level:3,title:"DealsSetConsiderVerifiedStorageDeals",slug:"dealssetconsiderverifiedstoragedeals",normalizedTitle:"dealssetconsiderverifiedstoragedeals",charIndex:1286},{level:3,title:"DealsSetMaxProviderCollateralMultiplier",slug:"dealssetmaxprovidercollateralmultiplier",normalizedTitle:"dealssetmaxprovidercollateralmultiplier",charIndex:1328},{level:3,title:"DealsSetMaxPublishFee",slug:"dealssetmaxpublishfee",normalizedTitle:"dealssetmaxpublishfee",charIndex:1373},{level:3,title:"DealsSetMaxStartDelay",slug:"dealssetmaxstartdelay",normalizedTitle:"dealssetmaxstartdelay",charIndex:1400},{level:3,title:"DealsSetPieceCidBlocklist",slug:"dealssetpiececidblocklist",normalizedTitle:"dealssetpiececidblocklist",charIndex:1427},{level:3,title:"DealsSetPublishMsgPeriod",slug:"dealssetpublishmsgperiod",normalizedTitle:"dealssetpublishmsgperiod",charIndex:1458},{level:3,title:"GetDeals",slug:"getdeals",normalizedTitle:"getdeals",charIndex:1488},{level:3,title:"GetRetrievalDealStatistic",slug:"getretrievaldealstatistic",normalizedTitle:"getretrievaldealstatistic",charIndex:1502},{level:3,title:"GetStorageDealStatistic",slug:"getstoragedealstatistic",normalizedTitle:"getstoragedealstatistic",charIndex:1533},{level:3,title:"GetUnPackedDeals",slug:"getunpackeddeals",normalizedTitle:"getunpackeddeals",charIndex:1562},{level:3,title:"ID",slug:"id",normalizedTitle:"id",charIndex:1584},{level:3,title:"ListPieceStorageInfos",slug:"listpiecestorageinfos",normalizedTitle:"listpiecestorageinfos",charIndex:1592},{level:3,title:"ListenMarketEvent",slug:"listenmarketevent",normalizedTitle:"listenmarketevent",charIndex:1619},{level:3,title:"MarkDealsAsPacking",slug:"markdealsaspacking",normalizedTitle:"markdealsaspacking",charIndex:1642},{level:3,title:"MarketAddBalance",slug:"marketaddbalance",normalizedTitle:"marketaddbalance",charIndex:1666},{level:3,title:"MarketCancelDataTransfer",slug:"marketcanceldatatransfer",normalizedTitle:"marketcanceldatatransfer",charIndex:1688},{level:3,title:"MarketDataTransferPath",slug:"marketdatatransferpath",normalizedTitle:"marketdatatransferpath",charIndex:1718},{level:3,title:"MarketDataTransferUpdates",slug:"marketdatatransferupdates",normalizedTitle:"marketdatatransferupdates",charIndex:1746},{level:3,title:"MarketGetAsk",slug:"marketgetask",normalizedTitle:"marketgetask",charIndex:1777},{level:3,title:"MarketGetDeal",slug:"marketgetdeal",normalizedTitle:"marketgetdeal",charIndex:1795},{level:3,title:"MarketGetDealUpdates",slug:"marketgetdealupdates",normalizedTitle:"marketgetdealupdates",charIndex:1814},{level:3,title:"MarketGetReserved",slug:"marketgetreserved",normalizedTitle:"marketgetreserved",charIndex:1840},{level:3,title:"MarketGetRetrievalAsk",slug:"marketgetretrievalask",normalizedTitle:"marketgetretrievalask",charIndex:1863},{level:3,title:"MarketGetRetrievalDeal",slug:"marketgetretrievaldeal",normalizedTitle:"marketgetretrievaldeal",charIndex:1890},{level:3,title:"MarketImportDealData",slug:"marketimportdealdata",normalizedTitle:"marketimportdealdata",charIndex:1918},{level:3,title:"MarketImportPublishedDeal",slug:"marketimportpublisheddeal",normalizedTitle:"marketimportpublisheddeal",charIndex:1944},{level:3,title:"MarketListDataTransfers",slug:"marketlistdatatransfers",normalizedTitle:"marketlistdatatransfers",charIndex:1975},{level:3,title:"MarketListDeals",slug:"marketlistdeals",normalizedTitle:"marketlistdeals",charIndex:2004},{level:3,title:"MarketListIncompleteDeals",slug:"marketlistincompletedeals",normalizedTitle:"marketlistincompletedeals",charIndex:2025},{level:3,title:"MarketListRetrievalAsk",slug:"marketlistretrievalask",normalizedTitle:"marketlistretrievalask",charIndex:2056},{level:3,title:"MarketListRetrievalDeals",slug:"marketlistretrievaldeals",normalizedTitle:"marketlistretrievaldeals",charIndex:2084},{level:3,title:"MarketListStorageAsk",slug:"marketliststorageask",normalizedTitle:"marketliststorageask",charIndex:2114},{level:3,title:"MarketMaxBalanceAddFee",slug:"marketmaxbalanceaddfee",normalizedTitle:"marketmaxbalanceaddfee",charIndex:2140},{level:3,title:"MarketMaxDealsPerPublishMsg",slug:"marketmaxdealsperpublishmsg",normalizedTitle:"marketmaxdealsperpublishmsg",charIndex:2168},{level:3,title:"MarketPendingDeals",slug:"marketpendingdeals",normalizedTitle:"marketpendingdeals",charIndex:2201},{level:3,title:"MarketPublishPendingDeals",slug:"marketpublishpendingdeals",normalizedTitle:"marketpublishpendingdeals",charIndex:2225},{level:3,title:"MarketReleaseFunds",slug:"marketreleasefunds",normalizedTitle:"marketreleasefunds",charIndex:2256},{level:3,title:"MarketReserveFunds",slug:"marketreservefunds",normalizedTitle:"marketreservefunds",charIndex:2280},{level:3,title:"MarketRestartDataTransfer",slug:"marketrestartdatatransfer",normalizedTitle:"marketrestartdatatransfer",charIndex:2304},{level:3,title:"MarketSetAsk",slug:"marketsetask",normalizedTitle:"marketsetask",charIndex:2335},{level:3,title:"MarketSetDataTransferPath",slug:"marketsetdatatransferpath",normalizedTitle:"marketsetdatatransferpath",charIndex:2353},{level:3,title:"MarketSetMaxBalanceAddFee",slug:"marketsetmaxbalanceaddfee",normalizedTitle:"marketsetmaxbalanceaddfee",charIndex:2384},{level:3,title:"MarketSetMaxDealsPerPublishMsg",slug:"marketsetmaxdealsperpublishmsg",normalizedTitle:"marketsetmaxdealsperpublishmsg",charIndex:2415},{level:3,title:"MarketSetRetrievalAsk",slug:"marketsetretrievalask",normalizedTitle:"marketsetretrievalask",charIndex:2451},{level:3,title:"MarketWithdraw",slug:"marketwithdraw",normalizedTitle:"marketwithdraw",charIndex:2478},{level:3,title:"MessagerGetMessage",slug:"messagergetmessage",normalizedTitle:"messagergetmessage",charIndex:2498},{level:3,title:"MessagerPushMessage",slug:"messagerpushmessage",normalizedTitle:"messagerpushmessage",charIndex:2522},{level:3,title:"MessagerWaitMessage",slug:"messagerwaitmessage",normalizedTitle:"messagerwaitmessage",charIndex:2547},{level:3,title:"NetAddrsListen",slug:"netaddrslisten",normalizedTitle:"netaddrslisten",charIndex:2572},{level:3,title:"PaychVoucherList",slug:"paychvoucherlist",normalizedTitle:"paychvoucherlist",charIndex:2592},{level:3,title:"PiecesGetCIDInfo",slug:"piecesgetcidinfo",normalizedTitle:"piecesgetcidinfo",charIndex:2614},{level:3,title:"PiecesGetPieceInfo",slug:"piecesgetpieceinfo",normalizedTitle:"piecesgetpieceinfo",charIndex:2636},{level:3,title:"PiecesListCidInfos",slug:"pieceslistcidinfos",normalizedTitle:"pieceslistcidinfos",charIndex:2660},{level:3,title:"PiecesListPieces",slug:"pieceslistpieces",normalizedTitle:"pieceslistpieces",charIndex:2684},{level:3,title:"ReleaseDeals",slug:"releasedeals",normalizedTitle:"releasedeals",charIndex:2706},{level:3,title:"RemovePieceStorage",slug:"removepiecestorage",normalizedTitle:"removepiecestorage",charIndex:2724},{level:3,title:"ResponseMarketEvent",slug:"responsemarketevent",normalizedTitle:"responsemarketevent",charIndex:2748},{level:3,title:"SectorGetExpectedSealDuration",slug:"sectorgetexpectedsealduration",normalizedTitle:"sectorgetexpectedsealduration",charIndex:2773},{level:3,title:"SectorSetExpectedSealDuration",slug:"sectorsetexpectedsealduration",normalizedTitle:"sectorsetexpectedsealduration",charIndex:2808},{level:3,title:"UpdateDealOnPacking",slug:"updatedealonpacking",normalizedTitle:"updatedealonpacking",charIndex:2843},{level:3,title:"UpdateDealStatus",slug:"updatedealstatus",normalizedTitle:"updatedealstatus",charIndex:2868},{level:3,title:"UpdateStorageDealStatus",slug:"updatestoragedealstatus",normalizedTitle:"updatestoragedealstatus",charIndex:2890},{level:3,title:"Version",slug:"version",normalizedTitle:"version",charIndex:2919}],headersStr:"Market ActorDelete ActorExist ActorList ActorSectorSize ActorUpsert AddFsPieceStorage AddS3PieceStorage AssignUnPackedDeals DagstoreDestroyShard DagstoreGC DagstoreInitializeAll DagstoreInitializeShard DagstoreInitializeStorage DagstoreListShards DagstoreRecoverShard DealsBatchImportData DealsConsiderOfflineRetrievalDeals DealsConsiderOfflineStorageDeals DealsConsiderOnlineRetrievalDeals DealsConsiderOnlineStorageDeals DealsConsiderUnverifiedStorageDeals DealsConsiderVerifiedStorageDeals DealsImport DealsImportData DealsMaxProviderCollateralMultiplier DealsMaxPublishFee DealsMaxStartDelay DealsPieceCidBlocklist DealsPublishMsgPeriod DealsSetConsiderOfflineRetrievalDeals DealsSetConsiderOfflineStorageDeals DealsSetConsiderOnlineRetrievalDeals DealsSetConsiderOnlineStorageDeals DealsSetConsiderUnverifiedStorageDeals DealsSetConsiderVerifiedStorageDeals DealsSetMaxProviderCollateralMultiplier DealsSetMaxPublishFee DealsSetMaxStartDelay DealsSetPieceCidBlocklist DealsSetPublishMsgPeriod GetDeals GetRetrievalDealStatistic GetStorageDealStatistic GetUnPackedDeals ID ListPieceStorageInfos ListenMarketEvent MarkDealsAsPacking MarketAddBalance MarketCancelDataTransfer MarketDataTransferPath MarketDataTransferUpdates MarketGetAsk MarketGetDeal MarketGetDealUpdates MarketGetReserved MarketGetRetrievalAsk MarketGetRetrievalDeal MarketImportDealData MarketImportPublishedDeal MarketListDataTransfers MarketListDeals MarketListIncompleteDeals MarketListRetrievalAsk MarketListRetrievalDeals MarketListStorageAsk MarketMaxBalanceAddFee MarketMaxDealsPerPublishMsg MarketPendingDeals MarketPublishPendingDeals MarketReleaseFunds MarketReserveFunds MarketRestartDataTransfer MarketSetAsk MarketSetDataTransferPath MarketSetMaxBalanceAddFee MarketSetMaxDealsPerPublishMsg MarketSetRetrievalAsk MarketWithdraw MessagerGetMessage MessagerPushMessage MessagerWaitMessage NetAddrsListen PaychVoucherList PiecesGetCIDInfo PiecesGetPieceInfo PiecesListCidInfos PiecesListPieces ReleaseDeals RemovePieceStorage ResponseMarketEvent SectorGetExpectedSealDuration SectorSetExpectedSealDuration UpdateDealOnPacking UpdateDealStatus UpdateStorageDealStatus Version",content:'# Sample code of curl\n\n# <Inputs> corresponding to the value of Inputs Tag of each API\ncurl http://<ip>:<port>/rpc/v1 -X POST -H "Content-Type: application/json"  -H "Authorization: Bearer <token>"  -d \'{"method": "VENUS_MARKET.<method>", "params": <Inputs>, "id": 0}\'\n\n\n\n# Groups\n\n * Market\n   * ActorDelete\n   * ActorExist\n   * ActorList\n   * ActorSectorSize\n   * ActorUpsert\n   * AddFsPieceStorage\n   * AddS3PieceStorage\n   * AssignUnPackedDeals\n   * DagstoreDestroyShard\n   * DagstoreGC\n   * DagstoreInitializeAll\n   * DagstoreInitializeShard\n   * DagstoreInitializeStorage\n   * DagstoreListShards\n   * DagstoreRecoverShard\n   * DealsBatchImportData\n   * DealsConsiderOfflineRetrievalDeals\n   * DealsConsiderOfflineStorageDeals\n   * DealsConsiderOnlineRetrievalDeals\n   * DealsConsiderOnlineStorageDeals\n   * DealsConsiderUnverifiedStorageDeals\n   * DealsConsiderVerifiedStorageDeals\n   * DealsImport\n   * DealsImportData\n   * DealsMaxProviderCollateralMultiplier\n   * DealsMaxPublishFee\n   * DealsMaxStartDelay\n   * DealsPieceCidBlocklist\n   * DealsPublishMsgPeriod\n   * DealsSetConsiderOfflineRetrievalDeals\n   * DealsSetConsiderOfflineStorageDeals\n   * DealsSetConsiderOnlineRetrievalDeals\n   * DealsSetConsiderOnlineStorageDeals\n   * DealsSetConsiderUnverifiedStorageDeals\n   * DealsSetConsiderVerifiedStorageDeals\n   * DealsSetMaxProviderCollateralMultiplier\n   * DealsSetMaxPublishFee\n   * DealsSetMaxStartDelay\n   * DealsSetPieceCidBlocklist\n   * DealsSetPublishMsgPeriod\n   * GetDeals\n   * GetRetrievalDealStatistic\n   * GetStorageDealStatistic\n   * GetUnPackedDeals\n   * ID\n   * ListPieceStorageInfos\n   * ListenMarketEvent\n   * MarkDealsAsPacking\n   * MarketAddBalance\n   * MarketCancelDataTransfer\n   * MarketDataTransferPath\n   * MarketDataTransferUpdates\n   * MarketGetAsk\n   * MarketGetDeal\n   * MarketGetDealUpdates\n   * MarketGetReserved\n   * MarketGetRetrievalAsk\n   * MarketGetRetrievalDeal\n   * MarketImportDealData\n   * MarketImportPublishedDeal\n   * MarketListDataTransfers\n   * MarketListDeals\n   * MarketListIncompleteDeals\n   * MarketListRetrievalAsk\n   * MarketListRetrievalDeals\n   * MarketListStorageAsk\n   * MarketMaxBalanceAddFee\n   * MarketMaxDealsPerPublishMsg\n   * MarketPendingDeals\n   * MarketPublishPendingDeals\n   * MarketReleaseFunds\n   * MarketReserveFunds\n   * MarketRestartDataTransfer\n   * MarketSetAsk\n   * MarketSetDataTransferPath\n   * MarketSetMaxBalanceAddFee\n   * MarketSetMaxDealsPerPublishMsg\n   * MarketSetRetrievalAsk\n   * MarketWithdraw\n   * MessagerGetMessage\n   * MessagerPushMessage\n   * MessagerWaitMessage\n   * NetAddrsListen\n   * PaychVoucherList\n   * PiecesGetCIDInfo\n   * PiecesGetPieceInfo\n   * PiecesListCidInfos\n   * PiecesListPieces\n   * ReleaseDeals\n   * RemovePieceStorage\n   * ResponseMarketEvent\n   * SectorGetExpectedSealDuration\n   * SectorSetExpectedSealDuration\n   * UpdateDealOnPacking\n   * UpdateDealStatus\n   * UpdateStorageDealStatus\n   * Version\n\n\n# Market\n\n\n# ActorDelete\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: {}\n\n\n# ActorExist\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# ActorList\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Addr": "f01234",\n    "Account": "string value"\n  }\n]\n\n\n\n# ActorSectorSize\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 34359738368\n\n\n# ActorUpsert\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "Addr": "f01234",\n    "Account": "string value"\n  }\n]\n\n\nResponse: true\n\n\n# AddFsPieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  "string value",\n  true\n]\n\n\nResponse: {}\n\n\n# AddS3PieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  true\n]\n\n\nResponse: {}\n\n\n# AssignUnPackedDeals\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "Miner": 1000,\n    "Number": 9\n  },\n  34359738368,\n  {\n    "MaxPiece": 123,\n    "MaxPieceSize": 42,\n    "MinPiece": 123,\n    "MinPieceSize": 42,\n    "MinUsedSpace": 42,\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "SectorExpiration": 10101\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0",\n    "Offset": 1032,\n    "Length": 1032,\n    "PayloadSize": 42,\n    "DealID": 5432,\n    "TotalStorageFee": "0",\n    "FastRetrieval": true,\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# DagstoreDestroyShard\n\nDagstoreDestroyShard destroy shard by key\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DagstoreGC\n\nDagstoreGC runs garbage collection on the DAG store.\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Key": "string value",\n    "Success": true,\n    "Error": "string value"\n  }\n]\n\n\n\n# DagstoreInitializeAll\n\nDagstoreInitializeAll initializes all uninitialized shards in bulk, according to the policy passed in the parameters.\n\nIt is recommended to set a maximum concurrency to avoid extreme IO pressure if the storage subsystem has a large amount of deals.\n\nIt returns a stream of events to report progress.\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "MaxConcurrency": 123,\n    "IncludeSealed": true\n  }\n]\n\n\nResponse:\n\n{\n  "Key": "string value",\n  "Event": "string value",\n  "Success": true,\n  "Error": "string value",\n  "Total": 123,\n  "Current": 123\n}\n\n\n\n# DagstoreInitializeShard\n\nDagstoreInitializeShard initializes an uninitialized shard.\n\nInitialization consists of fetching the shard\'s data (deal payload) from the storage subsystem, generating an index, and persisting the index to facilitate later retrievals, and/or to publish to external sources.\n\nThis operation is intended to complement the initial migration. The migration registers a shard for every unique piece CID, with lazy initialization. Thus, shards are not initialized immediately to avoid IO activity competing with proving. Instead, shard are initialized when first accessed. This method forces the initialization of a shard by accessing it and immediately releasing it. This is useful to warm up the cache to facilitate subsequent retrievals, and to generate the indexes to publish them externally.\n\nThis operation fails if the shard is not in ShardStateNew state. It blocks until initialization finishes.\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DagstoreInitializeStorage\n\nDagstoreInitializeStorage initializes all pieces in specify storage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value",\n  {\n    "MaxConcurrency": 123,\n    "IncludeSealed": true\n  }\n]\n\n\nResponse:\n\n{\n  "Key": "string value",\n  "Event": "string value",\n  "Success": true,\n  "Error": "string value",\n  "Total": 123,\n  "Current": 123\n}\n\n\n\n# DagstoreListShards\n\nDagstoreListShards returns information about all shards known to the DAG store. Only available on nodes running the markets subsystem.\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Key": "string value",\n    "State": "string value",\n    "Error": "string value"\n  }\n]\n\n\n\n# DagstoreRecoverShard\n\nDagstoreRecoverShard attempts to recover a failed shard.\n\nThis operation fails if the shard is not in ShardStateErrored state. It blocks until recovery finishes. If recovery failed, it returns the error.\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# DealsBatchImportData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "Refs": [\n      {\n        "ProposalCID": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "UUID": "07070707-0707-0707-0707-070707070707",\n        "File": "string value"\n      }\n    ],\n    "SkipCommP": true\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "Target": "string value",\n    "Message": "string value"\n  }\n]\n\n\n\n# DealsConsiderOfflineRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOfflineStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOnlineRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderOnlineStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderUnverifiedStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsConsiderVerifiedStorageDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: true\n\n\n# DealsImport\n\nPerms: admin\n\nInputs:\n\n[\n  [\n    {\n      "ID": "07070707-0707-0707-0707-070707070707",\n      "Proposal": {\n        "PieceCID": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceSize": 1032,\n        "VerifiedDeal": true,\n        "Client": "f01234",\n        "Provider": "f01234",\n        "Label": "",\n        "StartEpoch": 10101,\n        "EndEpoch": 10101,\n        "StoragePricePerEpoch": "0",\n        "ProviderCollateral": "0",\n        "ClientCollateral": "0"\n      },\n      "ClientSignature": {\n        "Type": 2,\n        "Data": "Ynl0ZSBhcnJheQ=="\n      },\n      "ProposalCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "AddFundsCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PublishCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "State": 42,\n      "PiecePath": "/some/path",\n      "PayloadSize": 42,\n      "MetadataPath": "/some/path",\n      "SlashEpoch": 10101,\n      "FastRetrieval": true,\n      "Message": "string value",\n      "FundsReserved": "0",\n      "Ref": {\n        "TransferType": "string value",\n        "Root": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceCid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "PieceSize": 1024,\n        "RawBlockSize": 42\n      },\n      "AvailableForRetrieval": true,\n      "DealID": 5432,\n      "CreationTime": "0001-01-01T00:00:00Z",\n      "TransferChannelId": {\n        "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n        "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n        "ID": 3\n      },\n      "SectorNumber": 9,\n      "Offset": 1032,\n      "PieceStatus": "Undefine",\n      "InboundCAR": "string value",\n      "CreatedAt": 42,\n      "UpdatedAt": 42\n    }\n  ]\n]\n\n\nResponse: {}\n\n\n# DealsImportData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "ProposalCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "UUID": "07070707-0707-0707-0707-070707070707",\n    "File": "string value"\n  },\n  true\n]\n\n\nResponse: {}\n\n\n# DealsMaxProviderCollateralMultiplier\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 42\n\n\n# DealsMaxPublishFee\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0 FIL"\n\n\n# DealsMaxStartDelay\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# DealsPieceCidBlocklist\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# DealsPublishMsgPeriod\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# DealsSetConsiderOfflineRetrievalDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOfflineStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOnlineRetrievalDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderOnlineStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderUnverifiedStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetConsiderVerifiedStorageDeals\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  true\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxProviderCollateralMultiplier\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  42\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxPublishFee\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  "0 FIL"\n]\n\n\nResponse: {}\n\n\n# DealsSetMaxStartDelay\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# DealsSetPieceCidBlocklist\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  ]\n]\n\n\nResponse: {}\n\n\n# DealsSetPublishMsgPeriod\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# GetDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234",\n  123,\n  123\n]\n\n\nResponse:\n\n[\n  {\n    "DealID": 5432,\n    "SectorID": 9,\n    "Offset": 1032,\n    "Length": 1032,\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "FastRetrieval": true,\n    "Status": "Undefine"\n  }\n]\n\n\n\n# GetRetrievalDealStatistic\n\nGetRetrievalDealStatistic get retrieval deal statistic information todo address undefined is invalid, it is currently not possible to directly associate an order with a miner\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "DealsStatus": {\n    "0": 9\n  }\n}\n\n\n\n# GetStorageDealStatistic\n\nGetStorageDealStatistic get storage deal statistic information if set miner address to address.Undef, return all storage deal info\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "DealsStatus": {\n    "42": 9\n  }\n}\n\n\n\n# GetUnPackedDeals\n\nPerms: read\n\nInputs:\n\n[\n  "f01234",\n  {\n    "MaxPiece": 123,\n    "MaxPieceSize": 42,\n    "MinPiece": 123,\n    "MinPieceSize": 42,\n    "MinUsedSpace": 42,\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "SectorExpiration": 10101\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0",\n    "Offset": 1032,\n    "Length": 1032,\n    "PayloadSize": 42,\n    "DealID": 5432,\n    "TotalStorageFee": "0",\n    "FastRetrieval": true,\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# ID\n\nPerms: read\n\nInputs: []\n\nResponse: "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"\n\n\n# ListPieceStorageInfos\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "FsStorage": [\n    {\n      "Path": "string value",\n      "Name": "string value",\n      "ReadOnly": true,\n      "Status": {\n        "Capacity": 9,\n        "Available": 9,\n        "Reserved": 9\n      }\n    }\n  ],\n  "S3Storage": [\n    {\n      "Name": "string value",\n      "ReadOnly": true,\n      "EndPoint": "string value",\n      "Bucket": "string value",\n      "SubDir": "string value",\n      "Status": {\n        "Capacity": 9,\n        "Available": 9,\n        "Reserved": 9\n      }\n    }\n  ]\n}\n\n\n\n# ListenMarketEvent\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Miner": "f01234"\n  }\n]\n\n\nResponse:\n\n{\n  "Id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n  "Method": "string value",\n  "Payload": "Ynl0ZSBhcnJheQ=="\n}\n\n\n\n# MarkDealsAsPacking\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nResponse: {}\n\n\n# MarketAddBalance\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MarketCancelDataTransfer\n\nMarketCancelDataTransfer cancels a data transfer with the given transfer ID and other peer\n\nPerms: admin\n\nInputs:\n\n[\n  3,\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  true\n]\n\n\nResponse: {}\n\n\n# MarketDataTransferPath\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "string value"\n\n\n# MarketDataTransferUpdates\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n{\n  "TransferID": 3,\n  "Status": 1,\n  "BaseCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "IsInitiator": true,\n  "IsSender": true,\n  "Voucher": "string value",\n  "Message": "string value",\n  "OtherPeer": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Transferred": 42,\n  "Stages": {\n    "Stages": [\n      {\n        "Name": "string value",\n        "Description": "string value",\n        "CreatedTime": "0001-01-01T00:00:00Z",\n        "UpdatedTime": "0001-01-01T00:00:00Z",\n        "Logs": [\n          {\n            "Log": "string value",\n            "UpdatedTime": "0001-01-01T00:00:00Z"\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# MarketGetAsk\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "Ask": {\n    "Price": "0",\n    "VerifiedPrice": "0",\n    "MinPieceSize": 1032,\n    "MaxPieceSize": 1032,\n    "Miner": "f01234",\n    "Timestamp": 10101,\n    "Expiry": 10101,\n    "SeqNo": 42\n  },\n  "Signature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetDeal\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "ID": "07070707-0707-0707-0707-070707070707",\n  "Proposal": {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0"\n  },\n  "ClientSignature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "ProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "AddFundsCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PublishCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "State": 42,\n  "PiecePath": "/some/path",\n  "PayloadSize": 42,\n  "MetadataPath": "/some/path",\n  "SlashEpoch": 10101,\n  "FastRetrieval": true,\n  "Message": "string value",\n  "FundsReserved": "0",\n  "Ref": {\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1024,\n    "RawBlockSize": 42\n  },\n  "AvailableForRetrieval": true,\n  "DealID": 5432,\n  "CreationTime": "0001-01-01T00:00:00Z",\n  "TransferChannelId": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "SectorNumber": 9,\n  "Offset": 1032,\n  "PieceStatus": "Undefine",\n  "InboundCAR": "string value",\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetDealUpdates\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n{\n  "ID": "07070707-0707-0707-0707-070707070707",\n  "Proposal": {\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1032,\n    "VerifiedDeal": true,\n    "Client": "f01234",\n    "Provider": "f01234",\n    "Label": "",\n    "StartEpoch": 10101,\n    "EndEpoch": 10101,\n    "StoragePricePerEpoch": "0",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0"\n  },\n  "ClientSignature": {\n    "Type": 2,\n    "Data": "Ynl0ZSBhcnJheQ=="\n  },\n  "ProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "AddFundsCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PublishCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "State": 42,\n  "PiecePath": "/some/path",\n  "PayloadSize": 42,\n  "MetadataPath": "/some/path",\n  "SlashEpoch": 10101,\n  "FastRetrieval": true,\n  "Message": "string value",\n  "FundsReserved": "0",\n  "Ref": {\n    "TransferType": "string value",\n    "Root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PieceSize": 1024,\n    "RawBlockSize": 42\n  },\n  "AvailableForRetrieval": true,\n  "DealID": 5432,\n  "CreationTime": "0001-01-01T00:00:00Z",\n  "TransferChannelId": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "SectorNumber": 9,\n  "Offset": 1032,\n  "PieceStatus": "Undefine",\n  "InboundCAR": "string value",\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketGetReserved\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0"\n\n\n# MarketGetRetrievalAsk\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n{\n  "PricePerByte": "0",\n  "UnsealPrice": "0",\n  "PaymentInterval": 42,\n  "PaymentIntervalIncrease": 42\n}\n\n\n\n# MarketGetRetrievalDeal\n\nPerms: read\n\nInputs:\n\n[\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  42\n]\n\n\nResponse:\n\n{\n  "PayloadCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "ID": 5,\n  "Selector": {\n    "Node": null\n  },\n  "PieceCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PricePerByte": "0",\n  "PaymentInterval": 42,\n  "PaymentIntervalIncrease": 42,\n  "UnsealPrice": "0",\n  "StoreID": 42,\n  "SelStorageProposalCid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "ChannelID": {\n    "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "ID": 3\n  },\n  "Status": 0,\n  "Receiver": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "TotalSent": 42,\n  "FundsReceived": "0",\n  "Message": "string value",\n  "CurrentInterval": 42,\n  "LegacyProtocol": true,\n  "CreatedAt": 42,\n  "UpdatedAt": 42\n}\n\n\n\n# MarketImportDealData\n\nPerms: admin\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "string value"\n]\n\n\nResponse: {}\n\n\n# MarketImportPublishedDeal\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "ID": "07070707-0707-0707-0707-070707070707",\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "ProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "AddFundsCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "State": 42,\n    "PiecePath": "/some/path",\n    "PayloadSize": 42,\n    "MetadataPath": "/some/path",\n    "SlashEpoch": 10101,\n    "FastRetrieval": true,\n    "Message": "string value",\n    "FundsReserved": "0",\n    "Ref": {\n      "TransferType": "string value",\n      "Root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1024,\n      "RawBlockSize": 42\n    },\n    "AvailableForRetrieval": true,\n    "DealID": 5432,\n    "CreationTime": "0001-01-01T00:00:00Z",\n    "TransferChannelId": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "SectorNumber": 9,\n    "Offset": 1032,\n    "PieceStatus": "Undefine",\n    "InboundCAR": "string value",\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\nResponse: {}\n\n\n# MarketListDataTransfers\n\nPerms: admin\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "TransferID": 3,\n    "Status": 1,\n    "BaseCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "IsInitiator": true,\n    "IsSender": true,\n    "Voucher": "string value",\n    "Message": "string value",\n    "OtherPeer": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Transferred": 42,\n    "Stages": {\n      "Stages": [\n        {\n          "Name": "string value",\n          "Description": "string value",\n          "CreatedTime": "0001-01-01T00:00:00Z",\n          "UpdatedTime": "0001-01-01T00:00:00Z",\n          "Logs": [\n            {\n              "Log": "string value",\n              "UpdatedTime": "0001-01-01T00:00:00Z"\n            }\n          ]\n        }\n      ]\n    }\n  }\n]\n\n\n\n# MarketListDeals\n\nPerms: read\n\nInputs:\n\n[\n  [\n    "f01234"\n  ]\n]\n\n\nResponse:\n\n[\n  {\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "State": {\n      "SectorStartEpoch": 10101,\n      "LastUpdatedEpoch": 10101,\n      "SlashEpoch": 10101,\n      "VerifiedClaim": 0\n    }\n  }\n]\n\n\n\n# MarketListIncompleteDeals\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Miner": "f01234",\n    "State": 12,\n    "Client": "string value",\n    "DiscardFailedDeal": true,\n    "DealID": 5432,\n    "PieceCID": "string value",\n    "Offset": 123,\n    "Limit": 123,\n    "Asc": true\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "ID": "07070707-0707-0707-0707-070707070707",\n    "Proposal": {\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1032,\n      "VerifiedDeal": true,\n      "Client": "f01234",\n      "Provider": "f01234",\n      "Label": "",\n      "StartEpoch": 10101,\n      "EndEpoch": 10101,\n      "StoragePricePerEpoch": "0",\n      "ProviderCollateral": "0",\n      "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "ProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "AddFundsCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PublishCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "Miner": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "Client": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "State": 42,\n    "PiecePath": "/some/path",\n    "PayloadSize": 42,\n    "MetadataPath": "/some/path",\n    "SlashEpoch": 10101,\n    "FastRetrieval": true,\n    "Message": "string value",\n    "FundsReserved": "0",\n    "Ref": {\n      "TransferType": "string value",\n      "Root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceCid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "PieceSize": 1024,\n      "RawBlockSize": 42\n    },\n    "AvailableForRetrieval": true,\n    "DealID": 5432,\n    "CreationTime": "0001-01-01T00:00:00Z",\n    "TransferChannelId": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "SectorNumber": 9,\n    "Offset": 1032,\n    "PieceStatus": "Undefine",\n    "InboundCAR": "string value",\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListRetrievalAsk\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Miner": "f01234",\n    "PricePerByte": "0",\n    "UnsealPrice": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42,\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListRetrievalDeals\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Receiver": "string value",\n    "PayloadCID": "string value",\n    "Status": 12,\n    "DiscardFailedDeal": true,\n    "Offset": 123,\n    "Limit": 123\n  }\n]\n\n\nResponse:\n\n[\n  {\n    "PayloadCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "ID": 5,\n    "Selector": {\n      "Node": null\n    },\n    "PieceCID": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "PricePerByte": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42,\n    "UnsealPrice": "0",\n    "StoreID": 42,\n    "SelStorageProposalCid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "ChannelID": {\n      "Initiator": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "Responder": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n      "ID": 3\n    },\n    "Status": 0,\n    "Receiver": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n    "TotalSent": 42,\n    "FundsReceived": "0",\n    "Message": "string value",\n    "CurrentInterval": 42,\n    "LegacyProtocol": true,\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketListStorageAsk\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Ask": {\n      "Price": "0",\n      "VerifiedPrice": "0",\n      "MinPieceSize": 1032,\n      "MaxPieceSize": 1032,\n      "Miner": "f01234",\n      "Timestamp": 10101,\n      "Expiry": 10101,\n      "SeqNo": 42\n    },\n    "Signature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "CreatedAt": 42,\n    "UpdatedAt": 42\n  }\n]\n\n\n\n# MarketMaxBalanceAddFee\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: "0 FIL"\n\n\n# MarketMaxDealsPerPublishMsg\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 42\n\n\n# MarketPendingDeals\n\nPerms: write\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "Deals": [\n      {\n        "Proposal": {\n          "PieceCID": {\n            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n          },\n          "PieceSize": 1032,\n          "VerifiedDeal": true,\n          "Client": "f01234",\n          "Provider": "f01234",\n          "Label": "",\n          "StartEpoch": 10101,\n          "EndEpoch": 10101,\n          "StoragePricePerEpoch": "0",\n          "ProviderCollateral": "0",\n          "ClientCollateral": "0"\n        },\n        "ClientSignature": {\n          "Type": 2,\n          "Data": "Ynl0ZSBhcnJheQ=="\n        }\n      }\n    ],\n    "PublishPeriodStart": "0001-01-01T00:00:00Z",\n    "PublishPeriod": 60000000000\n  }\n]\n\n\n\n# MarketPublishPendingDeals\n\nPerms: admin\n\nInputs: []\n\nResponse: {}\n\n\n# MarketReleaseFunds\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "0"\n]\n\n\nResponse: {}\n\n\n# MarketReserveFunds\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MarketRestartDataTransfer\n\nMarketRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer\n\nPerms: admin\n\nInputs:\n\n[\n  3,\n  "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  true\n]\n\n\nResponse: {}\n\n\n# MarketSetAsk\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  "0",\n  "0",\n  10101,\n  1032,\n  1032\n]\n\n\nResponse: {}\n\n\n# MarketSetDataTransferPath\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  "string value"\n]\n\n\nResponse: {}\n\n\n# MarketSetMaxBalanceAddFee\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  "0 FIL"\n]\n\n\nResponse: {}\n\n\n# MarketSetMaxDealsPerPublishMsg\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  42\n]\n\n\nResponse: {}\n\n\n# MarketSetRetrievalAsk\n\nPerms: admin\n\nInputs:\n\n[\n  "f01234",\n  {\n    "PricePerByte": "0",\n    "UnsealPrice": "0",\n    "PaymentInterval": 42,\n    "PaymentIntervalIncrease": 42\n  }\n]\n\n\nResponse: {}\n\n\n# MarketWithdraw\n\nPerms: sign\n\nInputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MessagerGetMessage\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "CID": {\n    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n  },\n  "Version": 42,\n  "To": "f01234",\n  "From": "f01234",\n  "Nonce": 42,\n  "Value": "0",\n  "GasLimit": 9,\n  "GasFeeCap": "0",\n  "GasPremium": "0",\n  "Method": 1,\n  "Params": "Ynl0ZSBhcnJheQ=="\n}\n\n\n\n# MessagerPushMessage\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "CID": {\n      "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n    },\n    "Version": 42,\n    "To": "f01234",\n    "From": "f01234",\n    "Nonce": 42,\n    "Value": "0",\n    "GasLimit": 9,\n    "GasFeeCap": "0",\n    "GasPremium": "0",\n    "Method": 1,\n    "Params": "Ynl0ZSBhcnJheQ=="\n  },\n  {\n    "MaxFee": "0",\n    "GasOverEstimation": 12.3,\n    "GasOverPremium": 12.3\n  }\n]\n\n\nResponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# MessagerWaitMessage\n\nmessager\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "Message": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Receipt": {\n    "ExitCode": 0,\n    "Return": "Ynl0ZSBhcnJheQ==",\n    "GasUsed": 9,\n    "EventsRoot": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  },\n  "ReturnDec": {},\n  "TipSet": [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    {\n      "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"\n    }\n  ],\n  "Height": 10101\n}\n\n\n\n# NetAddrsListen\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",\n  "Addrs": [\n    "/ip4/52.36.61.156/tcp/1347/p2p/12D3KooWFETiESTf1v4PGUvtnxMAcEFMzLZbJGg4tjWfGEimYior"\n  ]\n}\n\n\n\n# PaychVoucherList\n\nPaych\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse:\n\n[\n  {\n    "ChannelAddr": "f01234",\n    "TimeLockMin": 10101,\n    "TimeLockMax": 10101,\n    "SecretHash": "Ynl0ZSBhcnJheQ==",\n    "Extra": {\n      "Actor": "f01234",\n      "Method": 1,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    },\n    "Lane": 42,\n    "Nonce": 42,\n    "Amount": "0",\n    "MinSettleHeight": 10101,\n    "Merges": [\n      {\n        "Lane": 42,\n        "Nonce": 42\n      }\n    ],\n    "Signature": {\n      "Type": 2,\n      "Data": "Ynl0ZSBhcnJheQ=="\n    }\n  }\n]\n\n\n\n# PiecesGetCIDInfo\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "CID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "PieceBlockLocations": [\n    {\n      "RelOffset": 42,\n      "BlockSize": 42,\n      "PieceCID": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      }\n    }\n  ]\n}\n\n\n\n# PiecesGetPieceInfo\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nResponse:\n\n{\n  "PieceCID": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "Deals": [\n    {\n      "DealID": 5432,\n      "SectorID": 9,\n      "Offset": 1032,\n      "Length": 1032\n    }\n  ]\n}\n\n\n\n# PiecesListCidInfos\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# PiecesListPieces\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# ReleaseDeals\n\nReleaseDeals is used to release the deals that have been assigned by AssignUnPackedDeals method.\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nResponse: {}\n\n\n# RemovePieceStorage\n\nPerms: admin\n\nInputs:\n\n[\n  "string value"\n]\n\n\nResponse: {}\n\n\n# ResponseMarketEvent\n\nmarket event\n\nPerms: read\n\nInputs:\n\n[\n  {\n    "Id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n    "Payload": "Ynl0ZSBhcnJheQ==",\n    "Error": "string value"\n  }\n]\n\n\nResponse: {}\n\n\n# SectorGetExpectedSealDuration\n\nSectorGetExpectedSealDuration gets the time that a newly-created sector waits for more deals before it starts sealing\n\nPerms: read\n\nInputs:\n\n[\n  "f01234"\n]\n\n\nResponse: 60000000000\n\n\n# SectorSetExpectedSealDuration\n\nSectorSetExpectedSealDuration sets the expected time for a sector to seal\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nResponse: {}\n\n\n# UpdateDealOnPacking\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  5432,\n  9,\n  1032\n]\n\n\nResponse: {}\n\n\n# UpdateDealStatus\n\nPerms: write\n\nInputs:\n\n[\n  "f01234",\n  5432,\n  "Undefine",\n  42\n]\n\n\nResponse: {}\n\n\n# UpdateStorageDealStatus\n\nPerms: write\n\nInputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  42,\n  "Undefine"\n]\n\n\nResponse: {}\n\n\n# Version\n\nVersion provides information about API provider\n\nPerms: read\n\nInputs: []\n\nResponse:\n\n{\n  "Version": "string value",\n  "APIVersion": 131840\n}\n',normalizedContent:'# sample code of curl\n\n# <inputs> corresponding to the value of inputs tag of each api\ncurl http://<ip>:<port>/rpc/v1 -x post -h "content-type: application/json"  -h "authorization: bearer <token>"  -d \'{"method": "venus_market.<method>", "params": <inputs>, "id": 0}\'\n\n\n\n# groups\n\n * market\n   * actordelete\n   * actorexist\n   * actorlist\n   * actorsectorsize\n   * actorupsert\n   * addfspiecestorage\n   * adds3piecestorage\n   * assignunpackeddeals\n   * dagstoredestroyshard\n   * dagstoregc\n   * dagstoreinitializeall\n   * dagstoreinitializeshard\n   * dagstoreinitializestorage\n   * dagstorelistshards\n   * dagstorerecovershard\n   * dealsbatchimportdata\n   * dealsconsiderofflineretrievaldeals\n   * dealsconsiderofflinestoragedeals\n   * dealsconsideronlineretrievaldeals\n   * dealsconsideronlinestoragedeals\n   * dealsconsiderunverifiedstoragedeals\n   * dealsconsiderverifiedstoragedeals\n   * dealsimport\n   * dealsimportdata\n   * dealsmaxprovidercollateralmultiplier\n   * dealsmaxpublishfee\n   * dealsmaxstartdelay\n   * dealspiececidblocklist\n   * dealspublishmsgperiod\n   * dealssetconsiderofflineretrievaldeals\n   * dealssetconsiderofflinestoragedeals\n   * dealssetconsideronlineretrievaldeals\n   * dealssetconsideronlinestoragedeals\n   * dealssetconsiderunverifiedstoragedeals\n   * dealssetconsiderverifiedstoragedeals\n   * dealssetmaxprovidercollateralmultiplier\n   * dealssetmaxpublishfee\n   * dealssetmaxstartdelay\n   * dealssetpiececidblocklist\n   * dealssetpublishmsgperiod\n   * getdeals\n   * getretrievaldealstatistic\n   * getstoragedealstatistic\n   * getunpackeddeals\n   * id\n   * listpiecestorageinfos\n   * listenmarketevent\n   * markdealsaspacking\n   * marketaddbalance\n   * marketcanceldatatransfer\n   * marketdatatransferpath\n   * marketdatatransferupdates\n   * marketgetask\n   * marketgetdeal\n   * marketgetdealupdates\n   * marketgetreserved\n   * marketgetretrievalask\n   * marketgetretrievaldeal\n   * marketimportdealdata\n   * marketimportpublisheddeal\n   * marketlistdatatransfers\n   * marketlistdeals\n   * marketlistincompletedeals\n   * marketlistretrievalask\n   * marketlistretrievaldeals\n   * marketliststorageask\n   * marketmaxbalanceaddfee\n   * marketmaxdealsperpublishmsg\n   * marketpendingdeals\n   * marketpublishpendingdeals\n   * marketreleasefunds\n   * marketreservefunds\n   * marketrestartdatatransfer\n   * marketsetask\n   * marketsetdatatransferpath\n   * marketsetmaxbalanceaddfee\n   * marketsetmaxdealsperpublishmsg\n   * marketsetretrievalask\n   * marketwithdraw\n   * messagergetmessage\n   * messagerpushmessage\n   * messagerwaitmessage\n   * netaddrslisten\n   * paychvoucherlist\n   * piecesgetcidinfo\n   * piecesgetpieceinfo\n   * pieceslistcidinfos\n   * pieceslistpieces\n   * releasedeals\n   * removepiecestorage\n   * responsemarketevent\n   * sectorgetexpectedsealduration\n   * sectorsetexpectedsealduration\n   * updatedealonpacking\n   * updatedealstatus\n   * updatestoragedealstatus\n   * version\n\n\n# market\n\n\n# actordelete\n\nperms: admin\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: {}\n\n\n# actorexist\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# actorlist\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "addr": "f01234",\n    "account": "string value"\n  }\n]\n\n\n\n# actorsectorsize\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 34359738368\n\n\n# actorupsert\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "addr": "f01234",\n    "account": "string value"\n  }\n]\n\n\nresponse: true\n\n\n# addfspiecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  "string value",\n  true\n]\n\n\nresponse: {}\n\n\n# adds3piecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  "string value",\n  true\n]\n\n\nresponse: {}\n\n\n# assignunpackeddeals\n\nperms: write\n\ninputs:\n\n[\n  {\n    "miner": 1000,\n    "number": 9\n  },\n  34359738368,\n  {\n    "maxpiece": 123,\n    "maxpiecesize": 42,\n    "minpiece": 123,\n    "minpiecesize": 42,\n    "minusedspace": 42,\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "sectorexpiration": 10101\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0",\n    "offset": 1032,\n    "length": 1032,\n    "payloadsize": 42,\n    "dealid": 5432,\n    "totalstoragefee": "0",\n    "fastretrieval": true,\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# dagstoredestroyshard\n\ndagstoredestroyshard destroy shard by key\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dagstoregc\n\ndagstoregc runs garbage collection on the dag store.\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "key": "string value",\n    "success": true,\n    "error": "string value"\n  }\n]\n\n\n\n# dagstoreinitializeall\n\ndagstoreinitializeall initializes all uninitialized shards in bulk, according to the policy passed in the parameters.\n\nit is recommended to set a maximum concurrency to avoid extreme io pressure if the storage subsystem has a large amount of deals.\n\nit returns a stream of events to report progress.\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "maxconcurrency": 123,\n    "includesealed": true\n  }\n]\n\n\nresponse:\n\n{\n  "key": "string value",\n  "event": "string value",\n  "success": true,\n  "error": "string value",\n  "total": 123,\n  "current": 123\n}\n\n\n\n# dagstoreinitializeshard\n\ndagstoreinitializeshard initializes an uninitialized shard.\n\ninitialization consists of fetching the shard\'s data (deal payload) from the storage subsystem, generating an index, and persisting the index to facilitate later retrievals, and/or to publish to external sources.\n\nthis operation is intended to complement the initial migration. the migration registers a shard for every unique piece cid, with lazy initialization. thus, shards are not initialized immediately to avoid io activity competing with proving. instead, shard are initialized when first accessed. this method forces the initialization of a shard by accessing it and immediately releasing it. this is useful to warm up the cache to facilitate subsequent retrievals, and to generate the indexes to publish them externally.\n\nthis operation fails if the shard is not in shardstatenew state. it blocks until initialization finishes.\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dagstoreinitializestorage\n\ndagstoreinitializestorage initializes all pieces in specify storage\n\nperms: admin\n\ninputs:\n\n[\n  "string value",\n  {\n    "maxconcurrency": 123,\n    "includesealed": true\n  }\n]\n\n\nresponse:\n\n{\n  "key": "string value",\n  "event": "string value",\n  "success": true,\n  "error": "string value",\n  "total": 123,\n  "current": 123\n}\n\n\n\n# dagstorelistshards\n\ndagstorelistshards returns information about all shards known to the dag store. only available on nodes running the markets subsystem.\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "key": "string value",\n    "state": "string value",\n    "error": "string value"\n  }\n]\n\n\n\n# dagstorerecovershard\n\ndagstorerecovershard attempts to recover a failed shard.\n\nthis operation fails if the shard is not in shardstateerrored state. it blocks until recovery finishes. if recovery failed, it returns the error.\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# dealsbatchimportdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "refs": [\n      {\n        "proposalcid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "uuid": "07070707-0707-0707-0707-070707070707",\n        "file": "string value"\n      }\n    ],\n    "skipcommp": true\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "target": "string value",\n    "message": "string value"\n  }\n]\n\n\n\n# dealsconsiderofflineretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderofflinestoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsideronlineretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsideronlinestoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderunverifiedstoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsconsiderverifiedstoragedeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: true\n\n\n# dealsimport\n\nperms: admin\n\ninputs:\n\n[\n  [\n    {\n      "id": "07070707-0707-0707-0707-070707070707",\n      "proposal": {\n        "piececid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piecesize": 1032,\n        "verifieddeal": true,\n        "client": "f01234",\n        "provider": "f01234",\n        "label": "",\n        "startepoch": 10101,\n        "endepoch": 10101,\n        "storagepriceperepoch": "0",\n        "providercollateral": "0",\n        "clientcollateral": "0"\n      },\n      "clientsignature": {\n        "type": 2,\n        "data": "ynl0zsbhcnjheq=="\n      },\n      "proposalcid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "addfundscid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "publishcid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "state": 42,\n      "piecepath": "/some/path",\n      "payloadsize": 42,\n      "metadatapath": "/some/path",\n      "slashepoch": 10101,\n      "fastretrieval": true,\n      "message": "string value",\n      "fundsreserved": "0",\n      "ref": {\n        "transfertype": "string value",\n        "root": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piececid": {\n          "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n        },\n        "piecesize": 1024,\n        "rawblocksize": 42\n      },\n      "availableforretrieval": true,\n      "dealid": 5432,\n      "creationtime": "0001-01-01t00:00:00z",\n      "transferchannelid": {\n        "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n        "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n        "id": 3\n      },\n      "sectornumber": 9,\n      "offset": 1032,\n      "piecestatus": "undefine",\n      "inboundcar": "string value",\n      "createdat": 42,\n      "updatedat": 42\n    }\n  ]\n]\n\n\nresponse: {}\n\n\n# dealsimportdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "uuid": "07070707-0707-0707-0707-070707070707",\n    "file": "string value"\n  },\n  true\n]\n\n\nresponse: {}\n\n\n# dealsmaxprovidercollateralmultiplier\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 42\n\n\n# dealsmaxpublishfee\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0 fil"\n\n\n# dealsmaxstartdelay\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# dealspiececidblocklist\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# dealspublishmsgperiod\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# dealssetconsiderofflineretrievaldeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderofflinestoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsideronlineretrievaldeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsideronlinestoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderunverifiedstoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetconsiderverifiedstoragedeals\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  true\n]\n\n\nresponse: {}\n\n\n# dealssetmaxprovidercollateralmultiplier\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  42\n]\n\n\nresponse: {}\n\n\n# dealssetmaxpublishfee\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  "0 fil"\n]\n\n\nresponse: {}\n\n\n# dealssetmaxstartdelay\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# dealssetpiececidblocklist\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  ]\n]\n\n\nresponse: {}\n\n\n# dealssetpublishmsgperiod\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# getdeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234",\n  123,\n  123\n]\n\n\nresponse:\n\n[\n  {\n    "dealid": 5432,\n    "sectorid": 9,\n    "offset": 1032,\n    "length": 1032,\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "fastretrieval": true,\n    "status": "undefine"\n  }\n]\n\n\n\n# getretrievaldealstatistic\n\ngetretrievaldealstatistic get retrieval deal statistic information todo address undefined is invalid, it is currently not possible to directly associate an order with a miner\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "dealsstatus": {\n    "0": 9\n  }\n}\n\n\n\n# getstoragedealstatistic\n\ngetstoragedealstatistic get storage deal statistic information if set miner address to address.undef, return all storage deal info\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "dealsstatus": {\n    "42": 9\n  }\n}\n\n\n\n# getunpackeddeals\n\nperms: read\n\ninputs:\n\n[\n  "f01234",\n  {\n    "maxpiece": 123,\n    "maxpiecesize": 42,\n    "minpiece": 123,\n    "minpiecesize": 42,\n    "minusedspace": 42,\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "sectorexpiration": 10101\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0",\n    "offset": 1032,\n    "length": 1032,\n    "payloadsize": 42,\n    "dealid": 5432,\n    "totalstoragefee": "0",\n    "fastretrieval": true,\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  }\n]\n\n\n\n# id\n\nperms: read\n\ninputs: []\n\nresponse: "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf"\n\n\n# listpiecestorageinfos\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "fsstorage": [\n    {\n      "path": "string value",\n      "name": "string value",\n      "readonly": true,\n      "status": {\n        "capacity": 9,\n        "available": 9,\n        "reserved": 9\n      }\n    }\n  ],\n  "s3storage": [\n    {\n      "name": "string value",\n      "readonly": true,\n      "endpoint": "string value",\n      "bucket": "string value",\n      "subdir": "string value",\n      "status": {\n        "capacity": 9,\n        "available": 9,\n        "reserved": 9\n      }\n    }\n  ]\n}\n\n\n\n# listenmarketevent\n\nperms: read\n\ninputs:\n\n[\n  {\n    "miner": "f01234"\n  }\n]\n\n\nresponse:\n\n{\n  "id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n  "method": "string value",\n  "payload": "ynl0zsbhcnjheq=="\n}\n\n\n\n# markdealsaspacking\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nresponse: {}\n\n\n# marketaddbalance\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# marketcanceldatatransfer\n\nmarketcanceldatatransfer cancels a data transfer with the given transfer id and other peer\n\nperms: admin\n\ninputs:\n\n[\n  3,\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  true\n]\n\n\nresponse: {}\n\n\n# marketdatatransferpath\n\nperms: admin\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "string value"\n\n\n# marketdatatransferupdates\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n{\n  "transferid": 3,\n  "status": 1,\n  "basecid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "isinitiator": true,\n  "issender": true,\n  "voucher": "string value",\n  "message": "string value",\n  "otherpeer": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "transferred": 42,\n  "stages": {\n    "stages": [\n      {\n        "name": "string value",\n        "description": "string value",\n        "createdtime": "0001-01-01t00:00:00z",\n        "updatedtime": "0001-01-01t00:00:00z",\n        "logs": [\n          {\n            "log": "string value",\n            "updatedtime": "0001-01-01t00:00:00z"\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# marketgetask\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "ask": {\n    "price": "0",\n    "verifiedprice": "0",\n    "minpiecesize": 1032,\n    "maxpiecesize": 1032,\n    "miner": "f01234",\n    "timestamp": 10101,\n    "expiry": 10101,\n    "seqno": 42\n  },\n  "signature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetdeal\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "id": "07070707-0707-0707-0707-070707070707",\n  "proposal": {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0"\n  },\n  "clientsignature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "proposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "addfundscid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "publishcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "state": 42,\n  "piecepath": "/some/path",\n  "payloadsize": 42,\n  "metadatapath": "/some/path",\n  "slashepoch": 10101,\n  "fastretrieval": true,\n  "message": "string value",\n  "fundsreserved": "0",\n  "ref": {\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1024,\n    "rawblocksize": 42\n  },\n  "availableforretrieval": true,\n  "dealid": 5432,\n  "creationtime": "0001-01-01t00:00:00z",\n  "transferchannelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "sectornumber": 9,\n  "offset": 1032,\n  "piecestatus": "undefine",\n  "inboundcar": "string value",\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetdealupdates\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n{\n  "id": "07070707-0707-0707-0707-070707070707",\n  "proposal": {\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1032,\n    "verifieddeal": true,\n    "client": "f01234",\n    "provider": "f01234",\n    "label": "",\n    "startepoch": 10101,\n    "endepoch": 10101,\n    "storagepriceperepoch": "0",\n    "providercollateral": "0",\n    "clientcollateral": "0"\n  },\n  "clientsignature": {\n    "type": 2,\n    "data": "ynl0zsbhcnjheq=="\n  },\n  "proposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "addfundscid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "publishcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "state": 42,\n  "piecepath": "/some/path",\n  "payloadsize": 42,\n  "metadatapath": "/some/path",\n  "slashepoch": 10101,\n  "fastretrieval": true,\n  "message": "string value",\n  "fundsreserved": "0",\n  "ref": {\n    "transfertype": "string value",\n    "root": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "piecesize": 1024,\n    "rawblocksize": 42\n  },\n  "availableforretrieval": true,\n  "dealid": 5432,\n  "creationtime": "0001-01-01t00:00:00z",\n  "transferchannelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "sectornumber": 9,\n  "offset": 1032,\n  "piecestatus": "undefine",\n  "inboundcar": "string value",\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketgetreserved\n\nperms: sign\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0"\n\n\n# marketgetretrievalask\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n{\n  "priceperbyte": "0",\n  "unsealprice": "0",\n  "paymentinterval": 42,\n  "paymentintervalincrease": 42\n}\n\n\n\n# marketgetretrievaldeal\n\nperms: read\n\ninputs:\n\n[\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  42\n]\n\n\nresponse:\n\n{\n  "payloadcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "id": 5,\n  "selector": {\n    "node": null\n  },\n  "piececid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "priceperbyte": "0",\n  "paymentinterval": 42,\n  "paymentintervalincrease": 42,\n  "unsealprice": "0",\n  "storeid": 42,\n  "selstorageproposalcid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "channelid": {\n    "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "id": 3\n  },\n  "status": 0,\n  "receiver": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "totalsent": 42,\n  "fundsreceived": "0",\n  "message": "string value",\n  "currentinterval": 42,\n  "legacyprotocol": true,\n  "createdat": 42,\n  "updatedat": 42\n}\n\n\n\n# marketimportdealdata\n\nperms: admin\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "string value"\n]\n\n\nresponse: {}\n\n\n# marketimportpublisheddeal\n\nperms: write\n\ninputs:\n\n[\n  {\n    "id": "07070707-0707-0707-0707-070707070707",\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "addfundscid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "state": 42,\n    "piecepath": "/some/path",\n    "payloadsize": 42,\n    "metadatapath": "/some/path",\n    "slashepoch": 10101,\n    "fastretrieval": true,\n    "message": "string value",\n    "fundsreserved": "0",\n    "ref": {\n      "transfertype": "string value",\n      "root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1024,\n      "rawblocksize": 42\n    },\n    "availableforretrieval": true,\n    "dealid": 5432,\n    "creationtime": "0001-01-01t00:00:00z",\n    "transferchannelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "sectornumber": 9,\n    "offset": 1032,\n    "piecestatus": "undefine",\n    "inboundcar": "string value",\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\nresponse: {}\n\n\n# marketlistdatatransfers\n\nperms: admin\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "transferid": 3,\n    "status": 1,\n    "basecid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "isinitiator": true,\n    "issender": true,\n    "voucher": "string value",\n    "message": "string value",\n    "otherpeer": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "transferred": 42,\n    "stages": {\n      "stages": [\n        {\n          "name": "string value",\n          "description": "string value",\n          "createdtime": "0001-01-01t00:00:00z",\n          "updatedtime": "0001-01-01t00:00:00z",\n          "logs": [\n            {\n              "log": "string value",\n              "updatedtime": "0001-01-01t00:00:00z"\n            }\n          ]\n        }\n      ]\n    }\n  }\n]\n\n\n\n# marketlistdeals\n\nperms: read\n\ninputs:\n\n[\n  [\n    "f01234"\n  ]\n]\n\n\nresponse:\n\n[\n  {\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "state": {\n      "sectorstartepoch": 10101,\n      "lastupdatedepoch": 10101,\n      "slashepoch": 10101,\n      "verifiedclaim": 0\n    }\n  }\n]\n\n\n\n# marketlistincompletedeals\n\nperms: read\n\ninputs:\n\n[\n  {\n    "miner": "f01234",\n    "state": 12,\n    "client": "string value",\n    "discardfaileddeal": true,\n    "dealid": 5432,\n    "piececid": "string value",\n    "offset": 123,\n    "limit": 123,\n    "asc": true\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "id": "07070707-0707-0707-0707-070707070707",\n    "proposal": {\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1032,\n      "verifieddeal": true,\n      "client": "f01234",\n      "provider": "f01234",\n      "label": "",\n      "startepoch": 10101,\n      "endepoch": 10101,\n      "storagepriceperepoch": "0",\n      "providercollateral": "0",\n      "clientcollateral": "0"\n    },\n    "clientsignature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "proposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "addfundscid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "publishcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "miner": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "client": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "state": 42,\n    "piecepath": "/some/path",\n    "payloadsize": 42,\n    "metadatapath": "/some/path",\n    "slashepoch": 10101,\n    "fastretrieval": true,\n    "message": "string value",\n    "fundsreserved": "0",\n    "ref": {\n      "transfertype": "string value",\n      "root": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      },\n      "piecesize": 1024,\n      "rawblocksize": 42\n    },\n    "availableforretrieval": true,\n    "dealid": 5432,\n    "creationtime": "0001-01-01t00:00:00z",\n    "transferchannelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "sectornumber": 9,\n    "offset": 1032,\n    "piecestatus": "undefine",\n    "inboundcar": "string value",\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketlistretrievalask\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "miner": "f01234",\n    "priceperbyte": "0",\n    "unsealprice": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42,\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketlistretrievaldeals\n\nperms: read\n\ninputs:\n\n[\n  {\n    "receiver": "string value",\n    "payloadcid": "string value",\n    "status": 12,\n    "discardfaileddeal": true,\n    "offset": 123,\n    "limit": 123\n  }\n]\n\n\nresponse:\n\n[\n  {\n    "payloadcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "id": 5,\n    "selector": {\n      "node": null\n    },\n    "piececid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "priceperbyte": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42,\n    "unsealprice": "0",\n    "storeid": 42,\n    "selstorageproposalcid": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    "channelid": {\n      "initiator": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "responder": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n      "id": 3\n    },\n    "status": 0,\n    "receiver": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n    "totalsent": 42,\n    "fundsreceived": "0",\n    "message": "string value",\n    "currentinterval": 42,\n    "legacyprotocol": true,\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketliststorageask\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "ask": {\n      "price": "0",\n      "verifiedprice": "0",\n      "minpiecesize": 1032,\n      "maxpiecesize": 1032,\n      "miner": "f01234",\n      "timestamp": 10101,\n      "expiry": 10101,\n      "seqno": 42\n    },\n    "signature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "createdat": 42,\n    "updatedat": 42\n  }\n]\n\n\n\n# marketmaxbalanceaddfee\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: "0 fil"\n\n\n# marketmaxdealsperpublishmsg\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 42\n\n\n# marketpendingdeals\n\nperms: write\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "deals": [\n      {\n        "proposal": {\n          "piececid": {\n            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n          },\n          "piecesize": 1032,\n          "verifieddeal": true,\n          "client": "f01234",\n          "provider": "f01234",\n          "label": "",\n          "startepoch": 10101,\n          "endepoch": 10101,\n          "storagepriceperepoch": "0",\n          "providercollateral": "0",\n          "clientcollateral": "0"\n        },\n        "clientsignature": {\n          "type": 2,\n          "data": "ynl0zsbhcnjheq=="\n        }\n      }\n    ],\n    "publishperiodstart": "0001-01-01t00:00:00z",\n    "publishperiod": 60000000000\n  }\n]\n\n\n\n# marketpublishpendingdeals\n\nperms: admin\n\ninputs: []\n\nresponse: {}\n\n\n# marketreleasefunds\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "0"\n]\n\n\nresponse: {}\n\n\n# marketreservefunds\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# marketrestartdatatransfer\n\nmarketrestartdatatransfer attempts to restart a data transfer with the given transfer id and other peer\n\nperms: admin\n\ninputs:\n\n[\n  3,\n  "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  true\n]\n\n\nresponse: {}\n\n\n# marketsetask\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  "0",\n  "0",\n  10101,\n  1032,\n  1032\n]\n\n\nresponse: {}\n\n\n# marketsetdatatransferpath\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  "string value"\n]\n\n\nresponse: {}\n\n\n# marketsetmaxbalanceaddfee\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  "0 fil"\n]\n\n\nresponse: {}\n\n\n# marketsetmaxdealsperpublishmsg\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  42\n]\n\n\nresponse: {}\n\n\n# marketsetretrievalask\n\nperms: admin\n\ninputs:\n\n[\n  "f01234",\n  {\n    "priceperbyte": "0",\n    "unsealprice": "0",\n    "paymentinterval": 42,\n    "paymentintervalincrease": 42\n  }\n]\n\n\nresponse: {}\n\n\n# marketwithdraw\n\nperms: sign\n\ninputs:\n\n[\n  "f01234",\n  "f01234",\n  "0"\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# messagergetmessage\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "cid": {\n    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n  },\n  "version": 42,\n  "to": "f01234",\n  "from": "f01234",\n  "nonce": 42,\n  "value": "0",\n  "gaslimit": 9,\n  "gasfeecap": "0",\n  "gaspremium": "0",\n  "method": 1,\n  "params": "ynl0zsbhcnjheq=="\n}\n\n\n\n# messagerpushmessage\n\nperms: write\n\ninputs:\n\n[\n  {\n    "cid": {\n      "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"\n    },\n    "version": 42,\n    "to": "f01234",\n    "from": "f01234",\n    "nonce": 42,\n    "value": "0",\n    "gaslimit": 9,\n    "gasfeecap": "0",\n    "gaspremium": "0",\n    "method": 1,\n    "params": "ynl0zsbhcnjheq=="\n  },\n  {\n    "maxfee": "0",\n    "gasoverestimation": 12.3,\n    "gasoverpremium": 12.3\n  }\n]\n\n\nresponse:\n\n{\n  "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n}\n\n\n\n# messagerwaitmessage\n\nmessager\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "message": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "receipt": {\n    "exitcode": 0,\n    "return": "ynl0zsbhcnjheq==",\n    "gasused": 9,\n    "eventsroot": {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    }\n  },\n  "returndec": {},\n  "tipset": [\n    {\n      "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n    },\n    {\n      "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"\n    }\n  ],\n  "height": 10101\n}\n\n\n\n# netaddrslisten\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "id": "12d3koowgzxzkzyvehxtpg6asrujbcwxhbfs2hseogtxrmlvkxtf",\n  "addrs": [\n    "/ip4/52.36.61.156/tcp/1347/p2p/12d3koowfetiestf1v4pguvtnxmacefmzlzbjgg4tjwfgeimyior"\n  ]\n}\n\n\n\n# paychvoucherlist\n\npaych\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse:\n\n[\n  {\n    "channeladdr": "f01234",\n    "timelockmin": 10101,\n    "timelockmax": 10101,\n    "secrethash": "ynl0zsbhcnjheq==",\n    "extra": {\n      "actor": "f01234",\n      "method": 1,\n      "data": "ynl0zsbhcnjheq=="\n    },\n    "lane": 42,\n    "nonce": 42,\n    "amount": "0",\n    "minsettleheight": 10101,\n    "merges": [\n      {\n        "lane": 42,\n        "nonce": 42\n      }\n    ],\n    "signature": {\n      "type": 2,\n      "data": "ynl0zsbhcnjheq=="\n    }\n  }\n]\n\n\n\n# piecesgetcidinfo\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "cid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "pieceblocklocations": [\n    {\n      "reloffset": 42,\n      "blocksize": 42,\n      "piececid": {\n        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n      }\n    }\n  ]\n}\n\n\n\n# piecesgetpieceinfo\n\nperms: read\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\nresponse:\n\n{\n  "piececid": {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  "deals": [\n    {\n      "dealid": 5432,\n      "sectorid": 9,\n      "offset": 1032,\n      "length": 1032\n    }\n  ]\n}\n\n\n\n# pieceslistcidinfos\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# pieceslistpieces\n\nperms: read\n\ninputs: []\n\nresponse:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  }\n]\n\n\n\n# releasedeals\n\nreleasedeals is used to release the deals that have been assigned by assignunpackeddeals method.\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  [\n    5432\n  ]\n]\n\n\nresponse: {}\n\n\n# removepiecestorage\n\nperms: admin\n\ninputs:\n\n[\n  "string value"\n]\n\n\nresponse: {}\n\n\n# responsemarketevent\n\nmarket event\n\nperms: read\n\ninputs:\n\n[\n  {\n    "id": "e26f1e5c-47f7-4561-a11d-18fab6e748af",\n    "payload": "ynl0zsbhcnjheq==",\n    "error": "string value"\n  }\n]\n\n\nresponse: {}\n\n\n# sectorgetexpectedsealduration\n\nsectorgetexpectedsealduration gets the time that a newly-created sector waits for more deals before it starts sealing\n\nperms: read\n\ninputs:\n\n[\n  "f01234"\n]\n\n\nresponse: 60000000000\n\n\n# sectorsetexpectedsealduration\n\nsectorsetexpectedsealduration sets the expected time for a sector to seal\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  60000000000\n]\n\n\nresponse: {}\n\n\n# updatedealonpacking\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  5432,\n  9,\n  1032\n]\n\n\nresponse: {}\n\n\n# updatedealstatus\n\nperms: write\n\ninputs:\n\n[\n  "f01234",\n  5432,\n  "undefine",\n  42\n]\n\n\nresponse: {}\n\n\n# updatestoragedealstatus\n\nperms: write\n\ninputs:\n\n[\n  {\n    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"\n  },\n  42,\n  "undefine"\n]\n\n\nresponse: {}\n\n\n# version\n\nversion provides information about api provider\n\nperms: read\n\ninputs: []\n\nresponse:\n\n{\n  "version": "string value",\n  "apiversion": 131840\n}\n',charsets:{}},{title:"boost 新增协议兼容性调研",frontmatter:{},regularPath:"/zh/developer/understand-boost.html",relativePath:"zh/developer/understand-boost.md",key:"v-765c5bb6",path:"/zh/developer/understand-boost.html",headers:[{level:2,title:"结论",slug:"结论",normalizedTitle:"结论",charIndex:22},{level:2,title:"协议变化",slug:"协议变化",normalizedTitle:"协议变化",charIndex:229},{level:3,title:"/fil/storage/mk/1.2.0",slug:"fil-storage-mk-1-2-0",normalizedTitle:"/fil/storage/mk/1.2.0",charIndex:65},{level:3,title:"/fil/storage/status/1.2.0",slug:"fil-storage-status-1-2-0",normalizedTitle:"/fil/storage/status/1.2.0",charIndex:94},{level:3,title:"Request",slug:"request-2",normalizedTitle:"request",charIndex:372},{level:3,title:"Response",slug:"response-2",normalizedTitle:"response",charIndex:1658},{level:2,title:"boost 的相关实现",slug:"boost-的相关实现",normalizedTitle:"boost 的相关实现",charIndex:4584}],lastUpdated:"2023/10/25 07:37:37",headersStr:"结论 协议变化 /fil/storage/mk/1.2.0 /fil/storage/status/1.2.0 Request Response boost 的相关实现",content:'# boost 新增协议兼容性调研\n\n\n# 结论\n\n 1. boost 在协议层补充了两个新的协议 (细节见后文)\n    1. /fil/storage/mk/1.2.0\n    2. /fil/storage/status/1.2.0\n 2. 新协议的提出主要改进了 client 到 market 的数据传输，并不会对 venus-market 多矿工的架构造成影响\n 3. 现在的 venus-market 可以比较顺滑地升级以支持新的协议\n\n\n# 协议变化\n\nboost 在兼容以前协议的基础上，新增了两种协议：\n\n * 向 market 推送订单的协议：/fil/storage/mk/1.2.0\n * 以及查询订单数据：/fil/storage/status/1.2.0\n\n\n# /fil/storage/mk/1.2.0\n\n# Request\n\n# 描述\n\nFIELD                TYPE                 DESCRIPTION\nDealUUID             uuid                 gen by client with uuid ("github.com/google/uuid")\nIsOffline            boolean              Indicates whether the deal is online or offline\nClientDealProposal   ClientDealProposal   Same as <v1 proposal>.DealProposal\nDealDataRoot         cid                  The root cid of the CAR file. Same as <v1\n                                          proposal>.Piece.Root\nTransfer             struct               Transfer has the parameters for a data transfer\n\ntype DealParams struct {\n\tDealUUID           uuid.UUID\n\tIsOffline          bool\n\tClientDealProposal market.ClientDealProposal\n\tDealDataRoot       cid.Cid\n\tTransfer           Transfer // Transfer params will be the zero value if this is an offline deal\n}\n\n\n// Transfer has the parameters for a data transfer\ntype Transfer struct {\n\t// The type of transfer eg "http"\n\tType string\n\t// An optional ID that can be supplied by the client to identify the deal\n\tClientID string\n\t// A byte array containing marshalled data specific to the transfer type\n\t// eg a JSON encoded struct { URL: "<url>", Headers: {...} }\n\tParams []byte\n\t// The size of the data transferred in bytes\n\tSize uint64\n}\n\n\n目前 boost 中只支持 http 类型的 transfer\n\n# Response\n\n# 描述\n\nFIELD      TYPE      DESCRIPTION\nAccepted   boolean   Indicates whether the deal proposal was accepted\nMessage    string    A message about why the deal proposal was rejected\n\ntype DealResponse struct {\n\tAccepted bool\n\t// Message is the reason the deal proposal was rejected. It is empty if\n\t// the deal was accepted.\n\tMessage string\n}\n\n\n\n# /fil/storage/status/1.2.0\n\n\n# Request\n\n# 描述\n\nFIELD       TYPE        DESCRIPTION\nDealUUID    uuid        The uuid of the deal\nSignature   Signature   A signature over the uuid with the client\'s wallet\n\n// DealStatusRequest is sent to get the current state of a deal from a\n// storage provider\ntype DealStatusRequest struct {\n\tDealUUID  uuid.UUID\n\tSignature crypto.Signature\n}\n\n\n\n# Response\n\n# 相关源码\n\nFIELD               TYPE      DESCRIPTION\nDealUUID            uuid      The uuid of the deal\nError               string    Non-empty if there\'s an error getting the deal status\nIsOffline           boolean   Indicates whether the deal is online or offline\nTransferSize        integer   The total size of the transfer in bytes\nNBytesReceived      integer   The number of bytes that have been downloaded\nDealStatus          struct    the status of deal\nSignedProposalCid   cid       cid of the client deal proposal + signature\nPublishCid          cid       The cid of the publish message, if the deal has been\n                              published\nChainDealID         integer   The ID of the deal on chain, if it\'s been published\n\n\n// DealStatusResponse is the current state of a deal\ntype DealStatusResponse struct {\n\tDealUUID uuid.UUID\n\t// Error is non-empty if there is an error getting the deal status\n\t// (eg invalid request signature)\n\tError          string\n\tDealStatus     *DealStatus\n\tIsOffline      bool\n\tTransferSize   uint64\n\tNBytesReceived uint64\n}\n\ntype DealStatus struct {\n\t// Error is non-empty if the deal is in the error state\n\tError string\n\t// Status is a string corresponding to a deal checkpoint\n\tStatus string\n\t// SealingStatus is the sealing status reported by lotus miner\n\tSealingStatus string\n\t// Proposal is the deal proposal\n\tProposal market.DealProposal\n\t// SignedProposalCid is the cid of the client deal proposal + signature\n\tSignedProposalCid cid.Cid\n\t// PublishCid is the cid of the Publish message sent on chain, if the deal\n\t// has reached the publish stage\n\tPublishCid *cid.Cid\n\t// ChainDealID is the id of the deal in chain state\n\tChainDealID abi.DealID\n}\n\n// status\nconst (\n\tAccepted Checkpoint = iota\n\tTransferred\n\tPublished\n\tPublishConfirmed\n\tAddedPiece\n\tIndexedAndAnnounced\n\tComplete\n)\n\nvar names = map[Checkpoint]string{\n\tAccepted:            "Accepted",\n\tTransferred:         "Transferred",\n\tPublished:           "Published",\n\tPublishConfirmed:    "PublishConfirmed",\n\tAddedPiece:          "AddedPiece",\n\tIndexedAndAnnounced: "IndexedAndAnnounced",\n\tComplete:            "Complete",\n}\n\n// SealingStatus string 类型，没看到所有的枚举定义\n\n\n\n\n# boost 的相关实现\n\n# 发起存储订单的流程\n\n# 对比之前的订单发起流程\n\nboost 实现的新的订单发起流程主要是基于 /fil/storage/mk/1.2.0 拓展了 client 向 market 传输数据的方式 (目前 boost 只实现了 http 的形式),舍弃了原本的graphsync,同时也简化了协商的流程\n\n# 两者的时序图\n\n * 传统的的订单发起流程 (基于 /fil/storage/mk/1.0.1 , /fil/storage/mk/1.1.0 /fil/storage/mk/1.1.1 )\n\n * boost 提出的新的订单发起流程 (基于 /fil/storage/mk/1.2.0 )\n\n# 相关源码\n\n线上订单时，client 根据 cli-flag 生成 types.Transfer (离线订单时该对象为空)\n\n\n// Store the path to the CAR file as a transfer parameter\ntransferParams := &types2.HttpRequest{URL: cctx.String("http-url")}\n\nif cctx.IsSet("http-headers") {\n\ttransferParams.Headers = make(map[string]string)\n\n\tfor _, header := range cctx.StringSlice("http-headers") {\n\t\tsp := strings.Split(header, "=")\n\t\tif len(sp) != 2 {\n\t\t\treturn fmt.Errorf("malformed http header: %s", header)\n\t\t}\n\n\t\ttransferParams.Headers[sp[0]] = sp[1]\n\t}\n}\n\nparamsBytes, err := json.Marshal(transferParams)\nif err != nil {\n\treturn fmt.Errorf("marshalling request parameters: %w", err)\n}\ntransfer.Type = "http"\ntransfer.Params = paramsBytes\n\n\n\n准备发起订单的请求参数\n\n// Create a deal proposal to storage provider using deal protocol v1.2.0 format\ndealProposal, err := dealProposal(ctx, n, walletAddr, rootCid, abi.PaddedPieceSize(pieceSize), pieceCid, maddr, startEpoch, cctx.Int("duration"), cctx.Bool("verified"), providerCollateral, abi.NewTokenAmount(cctx.Int64("storage-price")))\nif err != nil {\n\treturn fmt.Errorf("failed to create a deal proposal: %w", err)\n}\n\ndealParams := types.DealParams{\n\tDealUUID:           dealUuid,\n\tClientDealProposal: *dealProposal,\n\tDealDataRoot:       rootCid,\n\tIsOffline:          !isOnline,\n\tTransfer:           transfer,\n}\n\n\nfunc dealProposal(ctx context.Context, n *clinode.Node, clientAddr address.Address, rootCid cid.Cid, pieceSize abi.PaddedPieceSize, pieceCid cid.Cid, minerAddr address.Address, startEpoch abi.ChainEpoch, duration int, verified bool, providerCollateral abi.TokenAmount, storagePrice abi.TokenAmount) (*market.ClientDealProposal, error) {\n\tendEpoch := startEpoch + abi.ChainEpoch(duration)\n\t// deal proposal expects total storage price for deal per epoch, therefore we\n\t// multiply pieceSize * storagePrice (which is set per epoch per GiB) and divide by 2^30\n\tstoragePricePerEpochForDeal := big.Div(big.Mul(big.NewInt(int64(pieceSize)), storagePrice), big.NewInt(int64(1<<30)))\n\tl, err := market.NewLabelFromString(rootCid.String())\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tproposal := market.DealProposal{\n\t\tPieceCID:             pieceCid,\n\t\tPieceSize:            pieceSize,\n\t\tVerifiedDeal:         verified,\n\t\tClient:               clientAddr,\n\t\tProvider:             minerAddr,\n\t\tLabel:                l,\n\t\tStartEpoch:           startEpoch,\n\t\tEndEpoch:             endEpoch,\n\t\tStoragePricePerEpoch: storagePricePerEpochForDeal,\n\t\tProviderCollateral:   providerCollateral,\n\t}\n\n\tbuf, err := cborutil.Dump(&proposal)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tsig, err := n.Wallet.WalletSign(ctx, clientAddr, buf, api.MsgMeta{Type: api.MTDealProposal})\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("wallet sign failed: %w", err)\n\t}\n\n\treturn &market.ClientDealProposal{\n\t\tProposal:        proposal,\n\t\tClientSignature: *sig,\n\t}, nil\n}\n\n\nclient 发送订单请求\n\ns, err := n.Host.NewStream(ctx, addrInfo.ID, DealProtocolv120)\nif err := cborutil.WriteCborRPC(s, &dealParams); err != nil {\n\terrc <- fmt.Errorf("failed to send request: %w", err)\n\treturn\n}\n\n\nboost 接收到订单后，会先进行两步处理\n\n 1. 校验订单的参数\n    * 校验的参数包括：PieceCID,signature,Provider,piece size,duration,epoch,provider collateral,ask,client fun 等等\n 2. 将订单注入到 boost 的订单处理循环\n\n// ExecuteDeal is called when the Storage Provider receives a deal proposal\n// from the network\nfunc (p *Provider) ExecuteDeal(ctx context.Context, dp *types.DealParams, clientPeer peer.ID) (*api.ProviderDealRejectionInfo, error) {\n\tctx, span := tracing.Tracer.Start(ctx, "Provider.ExecuteDeal")\n\tdefer span.End()\n\n\tspan.SetAttributes(attribute.String("dealUuid", dp.DealUUID.String())) // Example of adding additional attributes\n\n\tp.dealLogger.Infow(dp.DealUUID, "executing deal proposal received from network", "peer", clientPeer)\n\n\tds := types.ProviderDealState{\n\t\tDealUuid:           dp.DealUUID,\n\t\tClientDealProposal: dp.ClientDealProposal,\n\t\tClientPeerID:       clientPeer,\n\t\tDealDataRoot:       dp.DealDataRoot,\n\t\tTransfer:           dp.Transfer,\n\t\tIsOffline:          dp.IsOffline,\n\t\tRetry:              smtypes.DealRetryAuto,\n\t}\n\t// validate the deal proposal (校验订单数据)\n\tif err := p.validateDealProposal(ds); err != nil {\n\t\treason := err.reason\n\t\tif reason == "" {\n\t\t\treason = err.Error()\n\t\t}\n\t\tp.dealLogger.Infow(dp.DealUUID, "deal proposal failed validation", "err", err.Error(), "reason", reason)\n\n\t\treturn &api.ProviderDealRejectionInfo{\n\t\t\tReason: fmt.Sprintf("failed validation: %s", reason),\n\t\t}, nil\n\t}\n\n\t// 将订单注入 订单处理循环\n\treturn p.executeDeal(ctx, ds)\n}\n\n\n# 订单的处理\n\n# 订单处理循环\n\n本小结简要介绍 boost 中订单处理循环 的处理流程 该订单处理循环是个典型的 select-case 结构 每个 case 对应一个 channel 作为循环的入口\n\n\t// channels used to pass messages to run loop\n\n\n\t// 接入达成 dealcheckpoints.AddedPiece 状态之前的订单\n\t// 会处理订单直到订单达成 dealcheckpoints.AddedPiece\n\tacceptDealChan       chan acceptDealReq\n\n\t// 接入达成 dealcheckpoints.Published 的订单的\n\t// 释放占用的 fund 资源\n\tpublishedDealChan    chan publishDealReq\n\n\t// 接入 addpiece 之后的订单\n\t// 释放被占用的 storage space 资源\n\tstorageSpaceChan     chan storageSpaceDealReq\n\n\t// 接入需要清理资源占用的的订单 (完成的订单，或者失败的订单)\n\t// 清理订单的资源占用，主要是 fund 和 storage space\n\tfinishedDealChan     chan finishedDealReq\n\n\t// 接入希望重启或者希望终止 的已经停止的订单\n\t// 重启或者终止一个停止了的订单\n\tupdateRetryStateChan chan updateRetryStateReq\n\n\n注释：\n\n * fund 资源： boost 用于抵押的资金，在 deal 初始化时被分配，deal 发布之后，被分配的资金会作为抵押被转走，同时也应该释放相应 deal 的资金占用\n * storage 资源： boost 用于存储订单数据的存储空间资源，在订单创建时会被分配，在订单被 addpiece 之后会被释放掉\n\n# acceptDealChan 分支\n\n五个 case 之中，会着重介绍 acceptDealChan 所在的 case 分支\n\n// case  <-p.acceptDealChan 的部分源码\n\nselect {\n\t// Process a request to\n\t// - accept a deal proposal and execute it immediately\n\t// - accept an offline deal proposal and save it for execution later\n\t//   when the data is imported\n\t// - accept a request to import data for an offline deal\n\tcase dealReq := <-p.acceptDealChan:\n\t\tdeal := dealReq.deal\n\t\tp.dealLogger.Infow(deal.DealUuid, "processing deal acceptance request")\n\n\t\t// 离线订单，预处理，等待数据导入\n\t\tif deal.IsOffline && !dealReq.isImport {\n\t\t\t// When the client proposes an offline deal, save the deal\n\t\t\t// to the database but don\'t execute the deal. The deal\n\t\t\t// will be executed when the Storage Provider imports the\n\t\t\t// deal data.\n\t\t\tdh, err := p.mkAndInsertDealHandler(deal.DealUuid)\n\n\t\t\t// 1.检查订单不重复\n\t\t\t// 2.初始化订单，将之保存到数据库\n\t\t\taerr := p.processOfflineDealProposal(dealReq.deal, dh)\n\n\t\t\t// The deal proposal was successful. Send an Accept response to the client.\n\t\t\tdealReq.rsp <- acceptDealResp{ri: &api.ProviderDealRejectionInfo{Accepted: true}}\n\t\t\t// Don\'t execute the deal now, wait for data import.\n\t\t\tcontinue\n\t\t}\n\n\n\t\t// 1. 分配 fund 和 storage space 资源\n\t\t// 2. 初始化订单参数，包括订单数据的路径，创建订单的时间记录等\n\t\tif deal.IsOffline {\n\t\t\t// 离线订单，并且订单数据已经导入\n\t\t\t// The Storage Provider is importing offline deal data, so tag\n\t\t\t// funds for the deal and execute it\n\t\t\taerr = p.processImportOfflineDealData(dealReq.deal)\n\t\t} else {\n\t\t\t// 在线订单\n\t\t\t// Process a regular deal proposal\n\t\t\taerr = p.processDealProposal(dealReq.deal)\n\t\t}\n\t\tif aerr != nil {\n\t\t\tsendErrorResp(aerr)\n\t\t\tcontinue\n\t\t}\n\n\t\t// set up deal handler so that clients can subscribe to deal update events\n\t\tdh, err := p.mkAndInsertDealHandler(deal.DealUuid)\n\t\tif err != nil {\n\t\t\tsendErrorResp(&acceptError{error: err, isSevereError: true, reason: "server error: starting deal thread"})\n\t\t\tcontinue\n\t\t}\n\n\t\t// start executing the deal\n\t\t_, err = p.startDealThread(dh, deal)\n\t\tif err != nil {\n\t\t\tsendErrorResp(&acceptError{error: err, isSevereError: true, reason: "server error: starting deal thread"})\n\t\t\tcontinue\n\t\t}\n\n\t\t// send an accept response\n\t\tdealReq.rsp <- acceptDealResp{&api.ProviderDealRejectionInfo{Accepted: true}, nil}\n\n\tcase ....\n}\n\n\n在线订单会在完成订单资源分配和参数初始化之后，就会真正地开始执行订单处理线程 离线订单会两次进入这一段代码，第一次初始化订单参数之后退出，当导入离线数据的时候会再次进入这段代码，进行资源分配并开始 叮当处理线程\n\n# 订单处理线程\n\n简要流程\n\n相关源码\n\n\nfunc (p *Provider) execDealUptoAddPiece(ctx context.Context, deal *types.ProviderDealState, dh *dealHandler) *dealMakingError {\n\tpub := dh.Publisher\n\t// publish "new deal" event\n\tp.fireEventDealNew(deal)\n\t// publish an event with the current state of the deal\n\tp.fireEventDealUpdate(pub, deal)\n\n\tp.dealLogger.Infow(deal.DealUuid, "deal execution in progress")\n\n\t// Transfer Data step will be executed only if it\'s NOT an offline deal\n\tif !deal.IsOffline {\n\t\tif deal.Checkpoint < dealcheckpoints.Transferred {\n\t\t\t// Check that the deal\'s start epoch hasn\'t already elapsed\n\t\t\tif derr := p.checkDealProposalStartEpoch(deal); derr != nil {\n\t\t\t\treturn derr\n\t\t\t}\n\t\t\t// download data from the client,and verifyCommP\n\t\t\tif err := p.transferAndVerify(dh, pub, deal); err != nil {\n\t\t\t\t// The transfer has failed. If the user tries to cancel the\n\t\t\t\t// transfer after this point it\'s a no-op.\n\t\t\t\tdh.setCancelTransferResponse(nil)\n\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tp.dealLogger.Infow(deal.DealUuid, "deal data transfer finished successfully")\n\t\t} else {\n\t\t\tp.dealLogger.Infow(deal.DealUuid, "deal data transfer has already been completed")\n\t\t}\n\t\t// transfer can no longer be cancelled\n\t\tdh.setCancelTransferResponse(errors.New("transfer already complete"))\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal data-transfer can no longer be cancelled")\n\t} else if deal.Checkpoint < dealcheckpoints.Transferred {\n\t\t// verify CommP matches for an offline deal\n\t\tif err := p.verifyCommP(deal); err != nil {\n\t\t\terr.error = fmt.Errorf("error when matching commP for imported data for offline deal: %w", err)\n\t\t\treturn err\n\t\t}\n\t\tp.dealLogger.Infow(deal.DealUuid, "commp matched successfully for imported data for offline deal")\n\n\t\t// update checkpoint\n\t\tif derr := p.updateCheckpoint(pub, deal, dealcheckpoints.Transferred); derr != nil {\n\t\t\treturn derr\n\t\t}\n\t}\n\n\t// Publish\n\tif deal.Checkpoint <= dealcheckpoints.Published {\n\t\tif err := p.publishDeal(ctx, pub, deal); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal successfully published and confirmed-publish")\n\t} else {\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal has already been published and confirmed-publish")\n\t}\n\n\t// Now that the deal has been published, we no longer need to have funds\n\t// tagged as being for this deal (the publish message moves collateral\n\t// from the storage market actor escrow balance to the locked balance)\n\tif err := p.untagFundsAfterPublish(ctx, deal); err != nil {\n\t\t// If there\'s an error untagging funds we should still try to continue,\n\t\t// so just log the error\n\t\tp.dealLogger.Warnw(deal.DealUuid, "failed to untag funds after sending publish message", "err", err)\n\t} else {\n\t\tp.dealLogger.Infow(deal.DealUuid, "funds successfully untagged for deal after publish")\n\t}\n\n\t// AddPiece\n\tif deal.Checkpoint < dealcheckpoints.AddedPiece {\n\t\tif err := p.addPiece(ctx, pub, deal); err != nil {\n\t\t\terr.error = fmt.Errorf("failed to add piece: %w", err.error)\n\t\t\treturn err\n\t\t}\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal successfully handed over to the sealing subsystem")\n\t} else {\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal has already been handed over to the sealing subsystem")\n\t}\n\n\t// as deal has already been handed to the sealer, we can remove the inbound file and reclaim the tagged space\n\tif !deal.IsOffline {\n\t\t_ = os.Remove(deal.InboundFilePath)\n\t\tp.dealLogger.Infow(deal.DealUuid, "removed inbound file as deal handed to sealer", "path", deal.InboundFilePath)\n\t}\n\tif err := p.untagStorageSpaceAfterSealing(ctx, deal); err != nil {\n\t\t// If there\'s an error untagging storage space we should still try to continue,\n\t\t// so just log the error\n\t\tp.dealLogger.Warnw(deal.DealUuid, "failed to untag storage space after handing deal to sealer", "err", err)\n\t} else {\n\t\tp.dealLogger.Infow(deal.DealUuid, "storage space successfully untagged for deal after it was handed to sealer")\n\t}\n\n\t// Index deal in DAGStore and Announce deal\n\tif deal.Checkpoint < dealcheckpoints.IndexedAndAnnounced {\n\t\tif err := p.indexAndAnnounce(ctx, pub, deal); err != nil {\n\t\t\terr.error = fmt.Errorf("failed to add index and announce deal: %w", err.error)\n\t\t\treturn err\n\t\t}\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal successfully indexed and announced")\n\t} else {\n\t\tp.dealLogger.Infow(deal.DealUuid, "deal has already been indexed and announced")\n\t}\n\n\treturn nil\n}\n\n\n# 订单分配\n\n在订单的处理流程中，addpiece 阶段会将订单数据分配到矿工的扇区。 这个过程主要是通过调用 PieceAdder 接口的 AddPiece 方法来实现。 其中 PieceAdder 主要底层是由 lotus-miner 的 rpc client 来实现的，其依赖路径如下',normalizedContent:'# boost 新增协议兼容性调研\n\n\n# 结论\n\n 1. boost 在协议层补充了两个新的协议 (细节见后文)\n    1. /fil/storage/mk/1.2.0\n    2. /fil/storage/status/1.2.0\n 2. 新协议的提出主要改进了 client 到 market 的数据传输，并不会对 venus-market 多矿工的架构造成影响\n 3. 现在的 venus-market 可以比较顺滑地升级以支持新的协议\n\n\n# 协议变化\n\nboost 在兼容以前协议的基础上，新增了两种协议：\n\n * 向 market 推送订单的协议：/fil/storage/mk/1.2.0\n * 以及查询订单数据：/fil/storage/status/1.2.0\n\n\n# /fil/storage/mk/1.2.0\n\n# request\n\n# 描述\n\nfield                type                 description\ndealuuid             uuid                 gen by client with uuid ("github.com/google/uuid")\nisoffline            boolean              indicates whether the deal is online or offline\nclientdealproposal   clientdealproposal   same as <v1 proposal>.dealproposal\ndealdataroot         cid                  the root cid of the car file. same as <v1\n                                          proposal>.piece.root\ntransfer             struct               transfer has the parameters for a data transfer\n\ntype dealparams struct {\n\tdealuuid           uuid.uuid\n\tisoffline          bool\n\tclientdealproposal market.clientdealproposal\n\tdealdataroot       cid.cid\n\ttransfer           transfer // transfer params will be the zero value if this is an offline deal\n}\n\n\n// transfer has the parameters for a data transfer\ntype transfer struct {\n\t// the type of transfer eg "http"\n\ttype string\n\t// an optional id that can be supplied by the client to identify the deal\n\tclientid string\n\t// a byte array containing marshalled data specific to the transfer type\n\t// eg a json encoded struct { url: "<url>", headers: {...} }\n\tparams []byte\n\t// the size of the data transferred in bytes\n\tsize uint64\n}\n\n\n目前 boost 中只支持 http 类型的 transfer\n\n# response\n\n# 描述\n\nfield      type      description\naccepted   boolean   indicates whether the deal proposal was accepted\nmessage    string    a message about why the deal proposal was rejected\n\ntype dealresponse struct {\n\taccepted bool\n\t// message is the reason the deal proposal was rejected. it is empty if\n\t// the deal was accepted.\n\tmessage string\n}\n\n\n\n# /fil/storage/status/1.2.0\n\n\n# request\n\n# 描述\n\nfield       type        description\ndealuuid    uuid        the uuid of the deal\nsignature   signature   a signature over the uuid with the client\'s wallet\n\n// dealstatusrequest is sent to get the current state of a deal from a\n// storage provider\ntype dealstatusrequest struct {\n\tdealuuid  uuid.uuid\n\tsignature crypto.signature\n}\n\n\n\n# response\n\n# 相关源码\n\nfield               type      description\ndealuuid            uuid      the uuid of the deal\nerror               string    non-empty if there\'s an error getting the deal status\nisoffline           boolean   indicates whether the deal is online or offline\ntransfersize        integer   the total size of the transfer in bytes\nnbytesreceived      integer   the number of bytes that have been downloaded\ndealstatus          struct    the status of deal\nsignedproposalcid   cid       cid of the client deal proposal + signature\npublishcid          cid       the cid of the publish message, if the deal has been\n                              published\nchaindealid         integer   the id of the deal on chain, if it\'s been published\n\n\n// dealstatusresponse is the current state of a deal\ntype dealstatusresponse struct {\n\tdealuuid uuid.uuid\n\t// error is non-empty if there is an error getting the deal status\n\t// (eg invalid request signature)\n\terror          string\n\tdealstatus     *dealstatus\n\tisoffline      bool\n\ttransfersize   uint64\n\tnbytesreceived uint64\n}\n\ntype dealstatus struct {\n\t// error is non-empty if the deal is in the error state\n\terror string\n\t// status is a string corresponding to a deal checkpoint\n\tstatus string\n\t// sealingstatus is the sealing status reported by lotus miner\n\tsealingstatus string\n\t// proposal is the deal proposal\n\tproposal market.dealproposal\n\t// signedproposalcid is the cid of the client deal proposal + signature\n\tsignedproposalcid cid.cid\n\t// publishcid is the cid of the publish message sent on chain, if the deal\n\t// has reached the publish stage\n\tpublishcid *cid.cid\n\t// chaindealid is the id of the deal in chain state\n\tchaindealid abi.dealid\n}\n\n// status\nconst (\n\taccepted checkpoint = iota\n\ttransferred\n\tpublished\n\tpublishconfirmed\n\taddedpiece\n\tindexedandannounced\n\tcomplete\n)\n\nvar names = map[checkpoint]string{\n\taccepted:            "accepted",\n\ttransferred:         "transferred",\n\tpublished:           "published",\n\tpublishconfirmed:    "publishconfirmed",\n\taddedpiece:          "addedpiece",\n\tindexedandannounced: "indexedandannounced",\n\tcomplete:            "complete",\n}\n\n// sealingstatus string 类型，没看到所有的枚举定义\n\n\n\n\n# boost 的相关实现\n\n# 发起存储订单的流程\n\n# 对比之前的订单发起流程\n\nboost 实现的新的订单发起流程主要是基于 /fil/storage/mk/1.2.0 拓展了 client 向 market 传输数据的方式 (目前 boost 只实现了 http 的形式),舍弃了原本的graphsync,同时也简化了协商的流程\n\n# 两者的时序图\n\n * 传统的的订单发起流程 (基于 /fil/storage/mk/1.0.1 , /fil/storage/mk/1.1.0 /fil/storage/mk/1.1.1 )\n\n * boost 提出的新的订单发起流程 (基于 /fil/storage/mk/1.2.0 )\n\n# 相关源码\n\n线上订单时，client 根据 cli-flag 生成 types.transfer (离线订单时该对象为空)\n\n\n// store the path to the car file as a transfer parameter\ntransferparams := &types2.httprequest{url: cctx.string("http-url")}\n\nif cctx.isset("http-headers") {\n\ttransferparams.headers = make(map[string]string)\n\n\tfor _, header := range cctx.stringslice("http-headers") {\n\t\tsp := strings.split(header, "=")\n\t\tif len(sp) != 2 {\n\t\t\treturn fmt.errorf("malformed http header: %s", header)\n\t\t}\n\n\t\ttransferparams.headers[sp[0]] = sp[1]\n\t}\n}\n\nparamsbytes, err := json.marshal(transferparams)\nif err != nil {\n\treturn fmt.errorf("marshalling request parameters: %w", err)\n}\ntransfer.type = "http"\ntransfer.params = paramsbytes\n\n\n\n准备发起订单的请求参数\n\n// create a deal proposal to storage provider using deal protocol v1.2.0 format\ndealproposal, err := dealproposal(ctx, n, walletaddr, rootcid, abi.paddedpiecesize(piecesize), piececid, maddr, startepoch, cctx.int("duration"), cctx.bool("verified"), providercollateral, abi.newtokenamount(cctx.int64("storage-price")))\nif err != nil {\n\treturn fmt.errorf("failed to create a deal proposal: %w", err)\n}\n\ndealparams := types.dealparams{\n\tdealuuid:           dealuuid,\n\tclientdealproposal: *dealproposal,\n\tdealdataroot:       rootcid,\n\tisoffline:          !isonline,\n\ttransfer:           transfer,\n}\n\n\nfunc dealproposal(ctx context.context, n *clinode.node, clientaddr address.address, rootcid cid.cid, piecesize abi.paddedpiecesize, piececid cid.cid, mineraddr address.address, startepoch abi.chainepoch, duration int, verified bool, providercollateral abi.tokenamount, storageprice abi.tokenamount) (*market.clientdealproposal, error) {\n\tendepoch := startepoch + abi.chainepoch(duration)\n\t// deal proposal expects total storage price for deal per epoch, therefore we\n\t// multiply piecesize * storageprice (which is set per epoch per gib) and divide by 2^30\n\tstoragepriceperepochfordeal := big.div(big.mul(big.newint(int64(piecesize)), storageprice), big.newint(int64(1<<30)))\n\tl, err := market.newlabelfromstring(rootcid.string())\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tproposal := market.dealproposal{\n\t\tpiececid:             piececid,\n\t\tpiecesize:            piecesize,\n\t\tverifieddeal:         verified,\n\t\tclient:               clientaddr,\n\t\tprovider:             mineraddr,\n\t\tlabel:                l,\n\t\tstartepoch:           startepoch,\n\t\tendepoch:             endepoch,\n\t\tstoragepriceperepoch: storagepriceperepochfordeal,\n\t\tprovidercollateral:   providercollateral,\n\t}\n\n\tbuf, err := cborutil.dump(&proposal)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tsig, err := n.wallet.walletsign(ctx, clientaddr, buf, api.msgmeta{type: api.mtdealproposal})\n\tif err != nil {\n\t\treturn nil, fmt.errorf("wallet sign failed: %w", err)\n\t}\n\n\treturn &market.clientdealproposal{\n\t\tproposal:        proposal,\n\t\tclientsignature: *sig,\n\t}, nil\n}\n\n\nclient 发送订单请求\n\ns, err := n.host.newstream(ctx, addrinfo.id, dealprotocolv120)\nif err := cborutil.writecborrpc(s, &dealparams); err != nil {\n\terrc <- fmt.errorf("failed to send request: %w", err)\n\treturn\n}\n\n\nboost 接收到订单后，会先进行两步处理\n\n 1. 校验订单的参数\n    * 校验的参数包括：piececid,signature,provider,piece size,duration,epoch,provider collateral,ask,client fun 等等\n 2. 将订单注入到 boost 的订单处理循环\n\n// executedeal is called when the storage provider receives a deal proposal\n// from the network\nfunc (p *provider) executedeal(ctx context.context, dp *types.dealparams, clientpeer peer.id) (*api.providerdealrejectioninfo, error) {\n\tctx, span := tracing.tracer.start(ctx, "provider.executedeal")\n\tdefer span.end()\n\n\tspan.setattributes(attribute.string("dealuuid", dp.dealuuid.string())) // example of adding additional attributes\n\n\tp.deallogger.infow(dp.dealuuid, "executing deal proposal received from network", "peer", clientpeer)\n\n\tds := types.providerdealstate{\n\t\tdealuuid:           dp.dealuuid,\n\t\tclientdealproposal: dp.clientdealproposal,\n\t\tclientpeerid:       clientpeer,\n\t\tdealdataroot:       dp.dealdataroot,\n\t\ttransfer:           dp.transfer,\n\t\tisoffline:          dp.isoffline,\n\t\tretry:              smtypes.dealretryauto,\n\t}\n\t// validate the deal proposal (校验订单数据)\n\tif err := p.validatedealproposal(ds); err != nil {\n\t\treason := err.reason\n\t\tif reason == "" {\n\t\t\treason = err.error()\n\t\t}\n\t\tp.deallogger.infow(dp.dealuuid, "deal proposal failed validation", "err", err.error(), "reason", reason)\n\n\t\treturn &api.providerdealrejectioninfo{\n\t\t\treason: fmt.sprintf("failed validation: %s", reason),\n\t\t}, nil\n\t}\n\n\t// 将订单注入 订单处理循环\n\treturn p.executedeal(ctx, ds)\n}\n\n\n# 订单的处理\n\n# 订单处理循环\n\n本小结简要介绍 boost 中订单处理循环 的处理流程 该订单处理循环是个典型的 select-case 结构 每个 case 对应一个 channel 作为循环的入口\n\n\t// channels used to pass messages to run loop\n\n\n\t// 接入达成 dealcheckpoints.addedpiece 状态之前的订单\n\t// 会处理订单直到订单达成 dealcheckpoints.addedpiece\n\tacceptdealchan       chan acceptdealreq\n\n\t// 接入达成 dealcheckpoints.published 的订单的\n\t// 释放占用的 fund 资源\n\tpublisheddealchan    chan publishdealreq\n\n\t// 接入 addpiece 之后的订单\n\t// 释放被占用的 storage space 资源\n\tstoragespacechan     chan storagespacedealreq\n\n\t// 接入需要清理资源占用的的订单 (完成的订单，或者失败的订单)\n\t// 清理订单的资源占用，主要是 fund 和 storage space\n\tfinisheddealchan     chan finisheddealreq\n\n\t// 接入希望重启或者希望终止 的已经停止的订单\n\t// 重启或者终止一个停止了的订单\n\tupdateretrystatechan chan updateretrystatereq\n\n\n注释：\n\n * fund 资源： boost 用于抵押的资金，在 deal 初始化时被分配，deal 发布之后，被分配的资金会作为抵押被转走，同时也应该释放相应 deal 的资金占用\n * storage 资源： boost 用于存储订单数据的存储空间资源，在订单创建时会被分配，在订单被 addpiece 之后会被释放掉\n\n# acceptdealchan 分支\n\n五个 case 之中，会着重介绍 acceptdealchan 所在的 case 分支\n\n// case  <-p.acceptdealchan 的部分源码\n\nselect {\n\t// process a request to\n\t// - accept a deal proposal and execute it immediately\n\t// - accept an offline deal proposal and save it for execution later\n\t//   when the data is imported\n\t// - accept a request to import data for an offline deal\n\tcase dealreq := <-p.acceptdealchan:\n\t\tdeal := dealreq.deal\n\t\tp.deallogger.infow(deal.dealuuid, "processing deal acceptance request")\n\n\t\t// 离线订单，预处理，等待数据导入\n\t\tif deal.isoffline && !dealreq.isimport {\n\t\t\t// when the client proposes an offline deal, save the deal\n\t\t\t// to the database but don\'t execute the deal. the deal\n\t\t\t// will be executed when the storage provider imports the\n\t\t\t// deal data.\n\t\t\tdh, err := p.mkandinsertdealhandler(deal.dealuuid)\n\n\t\t\t// 1.检查订单不重复\n\t\t\t// 2.初始化订单，将之保存到数据库\n\t\t\taerr := p.processofflinedealproposal(dealreq.deal, dh)\n\n\t\t\t// the deal proposal was successful. send an accept response to the client.\n\t\t\tdealreq.rsp <- acceptdealresp{ri: &api.providerdealrejectioninfo{accepted: true}}\n\t\t\t// don\'t execute the deal now, wait for data import.\n\t\t\tcontinue\n\t\t}\n\n\n\t\t// 1. 分配 fund 和 storage space 资源\n\t\t// 2. 初始化订单参数，包括订单数据的路径，创建订单的时间记录等\n\t\tif deal.isoffline {\n\t\t\t// 离线订单，并且订单数据已经导入\n\t\t\t// the storage provider is importing offline deal data, so tag\n\t\t\t// funds for the deal and execute it\n\t\t\taerr = p.processimportofflinedealdata(dealreq.deal)\n\t\t} else {\n\t\t\t// 在线订单\n\t\t\t// process a regular deal proposal\n\t\t\taerr = p.processdealproposal(dealreq.deal)\n\t\t}\n\t\tif aerr != nil {\n\t\t\tsenderrorresp(aerr)\n\t\t\tcontinue\n\t\t}\n\n\t\t// set up deal handler so that clients can subscribe to deal update events\n\t\tdh, err := p.mkandinsertdealhandler(deal.dealuuid)\n\t\tif err != nil {\n\t\t\tsenderrorresp(&accepterror{error: err, issevereerror: true, reason: "server error: starting deal thread"})\n\t\t\tcontinue\n\t\t}\n\n\t\t// start executing the deal\n\t\t_, err = p.startdealthread(dh, deal)\n\t\tif err != nil {\n\t\t\tsenderrorresp(&accepterror{error: err, issevereerror: true, reason: "server error: starting deal thread"})\n\t\t\tcontinue\n\t\t}\n\n\t\t// send an accept response\n\t\tdealreq.rsp <- acceptdealresp{&api.providerdealrejectioninfo{accepted: true}, nil}\n\n\tcase ....\n}\n\n\n在线订单会在完成订单资源分配和参数初始化之后，就会真正地开始执行订单处理线程 离线订单会两次进入这一段代码，第一次初始化订单参数之后退出，当导入离线数据的时候会再次进入这段代码，进行资源分配并开始 叮当处理线程\n\n# 订单处理线程\n\n简要流程\n\n相关源码\n\n\nfunc (p *provider) execdealuptoaddpiece(ctx context.context, deal *types.providerdealstate, dh *dealhandler) *dealmakingerror {\n\tpub := dh.publisher\n\t// publish "new deal" event\n\tp.fireeventdealnew(deal)\n\t// publish an event with the current state of the deal\n\tp.fireeventdealupdate(pub, deal)\n\n\tp.deallogger.infow(deal.dealuuid, "deal execution in progress")\n\n\t// transfer data step will be executed only if it\'s not an offline deal\n\tif !deal.isoffline {\n\t\tif deal.checkpoint < dealcheckpoints.transferred {\n\t\t\t// check that the deal\'s start epoch hasn\'t already elapsed\n\t\t\tif derr := p.checkdealproposalstartepoch(deal); derr != nil {\n\t\t\t\treturn derr\n\t\t\t}\n\t\t\t// download data from the client,and verifycommp\n\t\t\tif err := p.transferandverify(dh, pub, deal); err != nil {\n\t\t\t\t// the transfer has failed. if the user tries to cancel the\n\t\t\t\t// transfer after this point it\'s a no-op.\n\t\t\t\tdh.setcanceltransferresponse(nil)\n\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tp.deallogger.infow(deal.dealuuid, "deal data transfer finished successfully")\n\t\t} else {\n\t\t\tp.deallogger.infow(deal.dealuuid, "deal data transfer has already been completed")\n\t\t}\n\t\t// transfer can no longer be cancelled\n\t\tdh.setcanceltransferresponse(errors.new("transfer already complete"))\n\t\tp.deallogger.infow(deal.dealuuid, "deal data-transfer can no longer be cancelled")\n\t} else if deal.checkpoint < dealcheckpoints.transferred {\n\t\t// verify commp matches for an offline deal\n\t\tif err := p.verifycommp(deal); err != nil {\n\t\t\terr.error = fmt.errorf("error when matching commp for imported data for offline deal: %w", err)\n\t\t\treturn err\n\t\t}\n\t\tp.deallogger.infow(deal.dealuuid, "commp matched successfully for imported data for offline deal")\n\n\t\t// update checkpoint\n\t\tif derr := p.updatecheckpoint(pub, deal, dealcheckpoints.transferred); derr != nil {\n\t\t\treturn derr\n\t\t}\n\t}\n\n\t// publish\n\tif deal.checkpoint <= dealcheckpoints.published {\n\t\tif err := p.publishdeal(ctx, pub, deal); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tp.deallogger.infow(deal.dealuuid, "deal successfully published and confirmed-publish")\n\t} else {\n\t\tp.deallogger.infow(deal.dealuuid, "deal has already been published and confirmed-publish")\n\t}\n\n\t// now that the deal has been published, we no longer need to have funds\n\t// tagged as being for this deal (the publish message moves collateral\n\t// from the storage market actor escrow balance to the locked balance)\n\tif err := p.untagfundsafterpublish(ctx, deal); err != nil {\n\t\t// if there\'s an error untagging funds we should still try to continue,\n\t\t// so just log the error\n\t\tp.deallogger.warnw(deal.dealuuid, "failed to untag funds after sending publish message", "err", err)\n\t} else {\n\t\tp.deallogger.infow(deal.dealuuid, "funds successfully untagged for deal after publish")\n\t}\n\n\t// addpiece\n\tif deal.checkpoint < dealcheckpoints.addedpiece {\n\t\tif err := p.addpiece(ctx, pub, deal); err != nil {\n\t\t\terr.error = fmt.errorf("failed to add piece: %w", err.error)\n\t\t\treturn err\n\t\t}\n\t\tp.deallogger.infow(deal.dealuuid, "deal successfully handed over to the sealing subsystem")\n\t} else {\n\t\tp.deallogger.infow(deal.dealuuid, "deal has already been handed over to the sealing subsystem")\n\t}\n\n\t// as deal has already been handed to the sealer, we can remove the inbound file and reclaim the tagged space\n\tif !deal.isoffline {\n\t\t_ = os.remove(deal.inboundfilepath)\n\t\tp.deallogger.infow(deal.dealuuid, "removed inbound file as deal handed to sealer", "path", deal.inboundfilepath)\n\t}\n\tif err := p.untagstoragespaceaftersealing(ctx, deal); err != nil {\n\t\t// if there\'s an error untagging storage space we should still try to continue,\n\t\t// so just log the error\n\t\tp.deallogger.warnw(deal.dealuuid, "failed to untag storage space after handing deal to sealer", "err", err)\n\t} else {\n\t\tp.deallogger.infow(deal.dealuuid, "storage space successfully untagged for deal after it was handed to sealer")\n\t}\n\n\t// index deal in dagstore and announce deal\n\tif deal.checkpoint < dealcheckpoints.indexedandannounced {\n\t\tif err := p.indexandannounce(ctx, pub, deal); err != nil {\n\t\t\terr.error = fmt.errorf("failed to add index and announce deal: %w", err.error)\n\t\t\treturn err\n\t\t}\n\t\tp.deallogger.infow(deal.dealuuid, "deal successfully indexed and announced")\n\t} else {\n\t\tp.deallogger.infow(deal.dealuuid, "deal has already been indexed and announced")\n\t}\n\n\treturn nil\n}\n\n\n# 订单分配\n\n在订单的处理流程中，addpiece 阶段会将订单数据分配到矿工的扇区。 这个过程主要是通过调用 pieceadder 接口的 addpiece 方法来实现。 其中 pieceadder 主要底层是由 lotus-miner 的 rpc client 来实现的，其依赖路径如下',charsets:{cjk:!0}},{title:"venus-market 是什么？",frontmatter:{},regularPath:"/zh/intro/",relativePath:"zh/intro/README.md",key:"v-948a15f4",path:"/zh/intro/",headers:[{level:2,title:"venus-market 是什么？",slug:"venus-market-是什么",normalizedTitle:"venus-market 是什么？",charIndex:2},{level:2,title:"功能特性",slug:"功能特性",normalizedTitle:"功能特性",charIndex:125},{level:3,title:"部署方式",slug:"部署方式",normalizedTitle:"部署方式",charIndex:134},{level:3,title:"多传输协议支持",slug:"多传输协议支持",normalizedTitle:"多传输协议支持",charIndex:286},{level:3,title:"轻量级客户端",slug:"轻量级客户端",normalizedTitle:"轻量级客户端",charIndex:380},{level:3,title:"兼容其他实现",slug:"兼容其他实现",normalizedTitle:"兼容其他实现",charIndex:463},{level:3,title:"开发者友好",slug:"开发者友好",normalizedTitle:"开发者友好",charIndex:558}],lastUpdated:"2023/10/25 07:37:37",headersStr:"venus-market 是什么？ 功能特性 部署方式 多传输协议支持 轻量级客户端 兼容其他实现 开发者友好",content:"# venus-market 是什么？\n\nvenus-market 是 Venus 系统的存储市场及检索市场解决方案，包括用于服务端的 venus-market 组件和用于客户端的 market-client 组件。目前迭代到 V2 版本。\n\n\n# 功能特性\n\n\n# 部署方式\n\nvenus-market v2最大的特点是它即可作为链服务的组件进行部署，也可以单独部署。作为链服务部署时，可以为多个SP cluster 提供市场服务，如：接单、跟踪 deals 状态及管理 pieces等。这样 SP 本地无需部署 market 节点，有效降低了集群的运维成本。\n\n\n# 多传输协议支持\n\n订单piece数据的传输将不仅支持默认的graphsync，还支持 OSS，HTTP 等其他更有韧性，可断点续传的数据传输协议。保证接单过程中数据传输的稳定性。\n\n\n# 轻量级客户端\n\nvenus-market v2带有一个轻量级客户端。存储客户无需本地维护一个与主网保持同步的节点，只需接入一个链服务，便可轻松发出存储订单。\n\n\n# 兼容其他实现\n\nvenus-market v2实现的所有订单流程都将与Filecoin其他实现的订单市场进行兼容。保证Venus存储提供者能够接收来自任何符合协议要求客户端的订单。\n\n\n# 开发者友好\n\n更多venus-market v2的 API 以及 SDK 将陆续开放给开发者。venus-market v2将成为一个开放平台，让开发者在上面实现他们需要的定制化需求。",normalizedContent:"# venus-market 是什么？\n\nvenus-market 是 venus 系统的存储市场及检索市场解决方案，包括用于服务端的 venus-market 组件和用于客户端的 market-client 组件。目前迭代到 v2 版本。\n\n\n# 功能特性\n\n\n# 部署方式\n\nvenus-market v2最大的特点是它即可作为链服务的组件进行部署，也可以单独部署。作为链服务部署时，可以为多个sp cluster 提供市场服务，如：接单、跟踪 deals 状态及管理 pieces等。这样 sp 本地无需部署 market 节点，有效降低了集群的运维成本。\n\n\n# 多传输协议支持\n\n订单piece数据的传输将不仅支持默认的graphsync，还支持 oss，http 等其他更有韧性，可断点续传的数据传输协议。保证接单过程中数据传输的稳定性。\n\n\n# 轻量级客户端\n\nvenus-market v2带有一个轻量级客户端。存储客户无需本地维护一个与主网保持同步的节点，只需接入一个链服务，便可轻松发出存储订单。\n\n\n# 兼容其他实现\n\nvenus-market v2实现的所有订单流程都将与filecoin其他实现的订单市场进行兼容。保证venus存储提供者能够接收来自任何符合协议要求客户端的订单。\n\n\n# 开发者友好\n\n更多venus-market v2的 api 以及 sdk 将陆续开放给开发者。venus-market v2将成为一个开放平台，让开发者在上面实现他们需要的定制化需求。",charsets:{cjk:!0}},{title:"背景",frontmatter:{},regularPath:"/zh/intro/architecture.html",relativePath:"zh/intro/architecture.md",key:"v-55390b85",path:"/zh/intro/architecture.html",headers:[{level:2,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:2},{level:2,title:"架构",slug:"架构",normalizedTitle:"架构",charIndex:217},{level:3,title:"订单流程",slug:"订单流程",normalizedTitle:"订单流程",charIndex:471},{level:2,title:"路线图",slug:"路线图",normalizedTitle:"路线图",charIndex:164}],lastUpdated:"2023/10/25 07:37:37",headersStr:"背景 架构 订单流程 路线图",content:"# 背景\n\n随着由FIP0018 牵头的针对filecoin术语的重新命名，社区（开发者、存储提供商、生态系统合作伙伴等）将进一步推动进行更多的存储交易，以提高公众对大多数网络存储仍然是承诺容量（CC）这一事实的看法。鉴于上述情绪，venus-market 模块的设计和实施已成为焦点。Venus社区应该讨论和迭代一个明确的长期路线图，这也是与Filecoin生态系统进行更好沟通的一种手段。Venus团队正重试Filecoin 组件架构，venus-market如何促进存储提供商和存储之间的互动，将不断融入到Venus filecoin的长期愿景当中。\n\n\n# 架构\n\nVenus最显着的特点之一是，通过使用Venus链服务减轻与Filecoin主链交互的各类运维问题，从而使存储提供商轻松进入Filecoin网络。链交互，包括但不限于链同步、消息发送和合并/查询出块权等等，都可以由一群存储提供者共享一套链服务。基于Venus链服务架构更进一步，可以将venus-market作为链服务的一个组件部署。存储提供商可以通过配置和设定控制其订单流程。通过和venus-cluster和venus-sealer的深度集成，Venus存储提供商可以享受到接近封装 CC 扇区的订单流程。\n\n\n\n上图展示了venus-market架构的概述。在左边，有一列不同类型的存储客户端，像Lotus客户端，venus-market自带的轻量级客户端，甚至是像Estuary或者Filswan这样的平台客户。在中间，是Venus链服务，venus-market v2和其他Venus链服务组件。在右边，是使用链服务的不同存储提供者。\n\n\n# 订单流程\n\n一个常规的订单流程是，存储客户向存储提供者发起订单请求，venus-market按照存储提供者的配置，同意或不同意接收订单。订单数据从客户端传送到链服务端venus-market的pieceStore子模块中，再通过venus-market支持的各种数据传输协议分发给下面的存储提供者，并由他们封装订单数据。\n\n\n# 路线图\n\n更多关于venus-market的路线图可以在这里被找到。在本篇文档发布时，venus-market的实施进度为第二阶段。",normalizedContent:"# 背景\n\n随着由fip0018 牵头的针对filecoin术语的重新命名，社区（开发者、存储提供商、生态系统合作伙伴等）将进一步推动进行更多的存储交易，以提高公众对大多数网络存储仍然是承诺容量（cc）这一事实的看法。鉴于上述情绪，venus-market 模块的设计和实施已成为焦点。venus社区应该讨论和迭代一个明确的长期路线图，这也是与filecoin生态系统进行更好沟通的一种手段。venus团队正重试filecoin 组件架构，venus-market如何促进存储提供商和存储之间的互动，将不断融入到venus filecoin的长期愿景当中。\n\n\n# 架构\n\nvenus最显着的特点之一是，通过使用venus链服务减轻与filecoin主链交互的各类运维问题，从而使存储提供商轻松进入filecoin网络。链交互，包括但不限于链同步、消息发送和合并/查询出块权等等，都可以由一群存储提供者共享一套链服务。基于venus链服务架构更进一步，可以将venus-market作为链服务的一个组件部署。存储提供商可以通过配置和设定控制其订单流程。通过和venus-cluster和venus-sealer的深度集成，venus存储提供商可以享受到接近封装 cc 扇区的订单流程。\n\n\n\n上图展示了venus-market架构的概述。在左边，有一列不同类型的存储客户端，像lotus客户端，venus-market自带的轻量级客户端，甚至是像estuary或者filswan这样的平台客户。在中间，是venus链服务，venus-market v2和其他venus链服务组件。在右边，是使用链服务的不同存储提供者。\n\n\n# 订单流程\n\n一个常规的订单流程是，存储客户向存储提供者发起订单请求，venus-market按照存储提供者的配置，同意或不同意接收订单。订单数据从客户端传送到链服务端venus-market的piecestore子模块中，再通过venus-market支持的各种数据传输协议分发给下面的存储提供者，并由他们封装订单数据。\n\n\n# 路线图\n\n更多关于venus-market的路线图可以在这里被找到。在本篇文档发布时，venus-market的实施进度为第二阶段。",charsets:{cjk:!0}},{title:"快速启用",frontmatter:{},regularPath:"/zh/operation/",relativePath:"zh/operation/README.md",key:"v-14a8a366",path:"/zh/operation/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"droplet",slug:"droplet",normalizedTitle:"droplet",charIndex:15},{level:3,title:"droplet初始化并启动",slug:"droplet初始化并启动",normalizedTitle:"droplet初始化并启动",charIndex:267},{level:3,title:"设置droplet信息到网络",slug:"设置droplet信息到网络",normalizedTitle:"设置droplet信息到网络",charIndex:368},{level:3,title:"挂单",slug:"挂单",normalizedTitle:"挂单",charIndex:392},{level:2,title:"droplet-client",slug:"droplet-client",normalizedTitle:"droplet-client",charIndex:59},{level:3,title:"droplet-client初始化并启动",slug:"droplet-client初始化并启动",normalizedTitle:"droplet-client初始化并启动",charIndex:314},{level:3,title:"存储订单（发单）",slug:"存储订单-发单",normalizedTitle:"存储订单（发单）",charIndex:7393}],lastUpdated:"2023/10/25 07:37:37",headersStr:"概述 droplet droplet初始化并启动 设置droplet信息到网络 挂单 droplet-client droplet-client初始化并启动 存储订单（发单）",content:'# 快速启用\n\n\n# 概述\n\ndroplet 是 venus 系统中的市场服务组件，由两部分组成：droplet 和 droplet-client，通俗理解为市场服务端和客户端。\n\n * droplet 的服务对象是存储提供商；\n\n * droplet-client 的服务对象是有检索需求或存储需求的用户。\n\ndroplet 的市场服务分为存储市场和检索市场，其一般流程如下：\n\n * 存储流程：\n\n阶段                            步骤\n启动 droplet 和 droplet-client   1. droplet初始化并启动\n                              2. droplet-client初始化并启动\n代理 miners 的 libp2p 监听服务       3. 设置droplet信息到网络\n为 miners 挂单                   4. 存储挂单\n指定 miner 发单                   5. 存储发单\n\n发单之后，需要一定时间执行订单交易流程，订单被确认后，存储提供商对订单中数据进行封装并提交证明，droplet 负责跟踪订单状态。\n\n * 检索流程：\n\n阶段                            步骤\n启动 droplet 和 droplet-client   1. droplet初始化并启动\n                              2. droplet-client初始化并启动\n设置检索价格及收款地址                   3. 存储供应商通过 droplet 检索挂单\n提交数据检索订单                      4. 提交数据检索订单\n\n提交数据检索订单之后，开始执行检索交流流程，会按照协议分批次回传数据并将所需费用转给收款地址\n\n💁 无论是存储交易还是检索交易，其协议的执行过程都是自动的，期间会发送消息上链，故需保证交易双方的消息都可以正常签名。交易过程存在必要的 fil 流转，相关地址需要有足够的余额，否则交易将无法达成。\n\n\n# droplet\n\n\n# droplet初始化并启动\n\n# gateway签名模式\n\nsophon-gateway作为中转，会找链接sophon-gateway的wallet进行签名。 作为链服务中的一个组件，配合sophon-auth、venus、 sophon-messager、sophon-gateway等组件一起为注册到链服务的 miner 提供市场服务。\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--auth-url=http://<ip>:<port> \\\n--gateway-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<shared-token> \\\n--signer-type="gateway"\n\n\n生成的服务组件配置参考:\n\n[Node]\n  Url = "/ip4/192.168.200.151/tcp/3455"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Messager]\n  Url = "/ip4/127.0.0.1/tcp/39812"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Signer]\n  Type = "gateway"\n  Url = "/ip4/127.0.0.1/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[AuthNode]\n  Url = "http://127.0.0.1:8989"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n\n💁 shared-token 是用于访问其他链服务组件 API 时的权限验证，由 sophon-auth 管理，需要 admin 权限。具体请参考 sophon-auth token\n\n# venus-wallet 签名模式\n\n💁 签名用独立的venus-wallet组件，则配置为 venus-wallet的监听地址及具有签名权限的 token.\n\nvenus-wallet 生成具有签名权限的 token:\n\n$ ./venus-wallet auth api-info --perm=sign\n> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIl19.Vr-OP7RNOozf6XXZuahpk-ZGA7IDa5NJjmU9L_znJ-0:/ip4/127.0.0.1/tcp/5678/http\n\n\n初始化并启动\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of write-authority that created by sophon-auth> \\\n--signer-url=/ip4/<ip>/tcp/<port> \\\n--signer-token=<token of venus-wallet> \\\n--signer-type="wallet"\n\n\n生成的服务组件配置参考:\n\n[Node]\n  Url = "/ip4/192.168.200.151/tcp/3455"\n  # sophon-auth生成的token\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Messager]\n  Url = "/ip4/127.0.0.1/tcp/39812"\n  # sophon-auth生成的token\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2hhcmVkLXRva2VuIiwicGVybSI6ImFkbWluIiwiZXh0IjoiIn0.aARqJ_7FSe1KakkBhWlFvsYm-xBLAXBnl9SvTfqsVe8"\n\n[Signer]\n  Type = "wallet"\n  Url = "/ip4/127.0.0.1/tcp/5678/http"\n  # wallet生成的token\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIl19.IVBGlmRW__6g4QGbb1D1Jtr1oyMM6Sqs1tj1GDGR5EQ"\n\n\n# 链接lotus启动\n\n配合 lotus fullnode 的启动方式。\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of lotus> \\\n--signer-type="lotusnode"\n\n\n生成的服务组件配置参考:\n\n[Node]\n  Url = "/ip4/127.0.0.1/tcp/1234"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIiwiYWRtaW4iXX0.Ne3JsfHHhN6BgDtdsvLYfUaRC3eJPH_7KrBsMRBdplc"\n\n[Messager]\n  Url = ""\n  Token = ""\n\n[Signer]\n  Type = "lotusnode"\n  Url = "/ip4/127.0.0.1/tcp/1234"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBbGxvdyI6WyJyZWFkIiwid3JpdGUiLCJzaWduIiwiYWRtaW4iXX0.Ne3JsfHHhN6BgDtdsvLYfUaRC3eJPH_7KrBsMRBdplc"\n\n[AuthNode]\n  Url = ""\n  Token = ""\n\n\n💁 初始化命令执行成功后将会生成droplet repo,在使用时需根据实际环境配置。\n\ndroplet 首次启动时会生成配置项，默认目录为: ~/.droplet/config.toml,可以根据实际情况，对配置文件进行设置。具体配置文件的解释请参考：droplet配置解释 tips: 修改完配置文件之后需要重启droplet服务：\n\n$ nohup ./droplet run > droplet.log 2>&1 &\n\n\n> 已经生成 repo 之后，初始化所需的参数被写入配置文件，故后续启动无需再加。\n\n\n# 设置droplet信息到网络\n\n * 查询 droplet 的对等节点监听地址，获取addrs和peer-id值。\n\n./droplet net listen\n\n/ip4/127.0.0.1/tcp/58418/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n/ip4/192.168.19.67/tcp/58418/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n/ip6/::1/tcp/49770/p2p/12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n\n\n * 将 miners 的 Multiaddrs 和 peer-id 设置为 droplet 的 Multiaddrs 和 peer-id\n\n./droplet actor set-addrs --miner=t01041 /ip4/192.168.19.67/tcp/58418\nRequested multiaddrs change in message bafy2bzaceceqgxmiledunzjwbajpghzzn4iibvxhoifsrz4q2grzsirgznzdg\n\n./droplet actor set-peer-id --miner=f01041 12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\n  Requested peerid change in message bafy2bzacea4ruzf4hvyezzhjkt6hnzz5tpk7ttuw6jmyoadqasqtujypqitp2\n\n\n * 等待消息上链后，查看 miner 的代理信息\n\n./droplet actor info --miner t01041\npeers: 12D3KooWQftXTGFBKooKuyaNkugapUzi4VmjxEKTgkpsNCQufKBK\naddr: /ip4/192.168.19.67/tcp/58418\n\n\n\n# 挂单\n\n# 存储挂单\n\nSP设置订单存储订单的价格和存储文件大小限制等信息。\n\n./droplet storage ask set --price=0.01fil --verified-price=0.02fil --min-piece-size=512b --max-piece-size=512M t01041\n\n\n可以通过命令行工具检查定价信息：\n\n./droplet storage ask get t01041\nPrice per GiB/Epoch  Verified  Min. Piece Size (padded)  Max. Piece Size (padded)  Expiry (Epoch)  Expiry (Appx. Rem. Time)  Seq. No.\n0.01 FIL             0.02 FIL  512 B                     521 MiB                     161256          719h59m0s                 0\n\n\n# 检索挂单\n\n存储服务提供商至少应设置收款地址\n\n./droplet retrieval ask set t3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n同时，也可以设置数据检索订单的价格，不设置时，默认为0.\n\n./droplet retrieval ask set \\\n--price 0.02fil \\\n--unseal-price 0.01fil \\\n--payment-interval 1MB \\\nt3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n\n# droplet-client\n\n\n# droplet-client初始化并启动\n\ndroplet-client 正常运行需要同步节点、签名节点（venus fullnode 和 lotus fullnode 可以作为签名节点）、消息节点（venus fullnode 和 lotus fullnode 可以作为消息节点）及 droplet，故其可以灵活配置，只要保证消息能够正常签名并上链即可。\n\ndroplet-client 需要配置 --addr 用来绑定客户的钱包地址，用于支付客户端抵押和检索费用。\n\n这里介绍常用的三种启动方式：\n\n# 接入 Venus 链服务(推荐)\n\nsophon-gateway 的签名 API 只有 admin 权限才能访问（安全考虑），也就是只有链服务组件才能访问，故 droplet-client 无法使用，所以用本地的 venus-wallet 进行签名。\n\ndroplet-client是直连venus-wallet进行本地签名，--addr必须指定venus-wallet有的地址才可以。\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--messager-url=/ip4/<sophon-messager_ip>/tcp/<port> \\\n--auth-token=<user-read-or-write-permission-token> \\\n--signer-type=wallet \\\n--signer-url=/ip4/<venus-wallet_ip>/tcp/<port> \\\n--signer-toke=<wallet-token> \\\n--addr=<signer address> \\\n\n\n> venus-wallet 生成具有签名权限的 token 请参考上文.\n\n# 连接 venus fullnode 启动\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--node-token=<node-token> \\\n--signer-type=wallet \\\n--addr=<signer address> \\\n\n\n# 连接 lotus fullnode 启动\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--node-token=<node-token> \\\n--signer-type=lotusnode \\\n--addr=<signer address> \\\n\n\n这些配置项也可以在配置文件中设置，参见droplet-client配置\n\n\n# 存储订单（发单）\n\n# 在线订单\n\n# 1. 导入待存储的数据\n\n./droplet-client data import <file path>\nImport 1642491708527303001, Root bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n\n\n# 2. 选择挂单(询价)\n\n测试连通性，使用 droplet-client 来查询 miner 挂单信息：\n\n./droplet-client storage asks query f01041 \nAsk: t01041\nPrice per GiB: 0.02 FIL\nVerified Price per GiB: 0.01 FIL\nMax Piece size: 8 MiB\nMin Piece size: 512 B\n\n\n# 3. 发起存储订单（发单）\n\n/droplet-client storage deals init\n# 输入需要存储的数据的cid, `./droplet-client data local`命令查看\nData CID (from lotus client import): bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n.. calculating data size\nPieceCid:  baga6ea4seaqpz47j4kqdiixpehmzk3uw5c4cmqvs5iyi7xf7rwkepfhdvowdiai  PayLoadSize: 809 PieceSize: 1024\n# 输入数据存储周期\nDeal duration (days): 180\n# 输入接单的miner id\nMiner Addresses (f0.. f0..), none to find: t01041\n.. querying miner asks\n-----\nProposing from t16qnfduxzpneb2m3rbdasvhgk7rmmo32zpiypkaq\n  Balance: 9499.999999856612207905 FIL\nPiece size: 1KiB (Payload size: 809B)\nDuration: 4320h0m0s\nTotal price: ~0.0098876953124352 FIL (0.000000019073486328 FIL per epoch)\nVerified: false\n# 确认是否接受订单价格\nAccept (yes/no): yes\n.. executing\nDeal (t01051) CID: bafyreihiln2ha6eaaos7kuhwpnvjvjlxmjnpsklym6hhucu2z776bf2or4\n\n\n然后等待订单消息上链，以及存储提供商完成数据封装即可。\n\ndroplet-client 查看订单:\n\n./droplet-client storage deals list\nDealCid      DealId  Provider  State                          On Chain?  Slashed?  PieceCID     Size    Price                    Duration  Verified\n...76bf2or4  0       t01051    StorageDealCheckForAcceptance  N          N         ...dvowdiai  1016 B  0.00992212295525724 FIL  520205    false\n  Message: Provider state: StorageDealPublish\n\n\n# 离线订单\n\n# 1. 导入订单存储文件\n\n./droplet-client data import ./README.md\nImport 1642643014364955003, Root bafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c\n\n\n# 2. 转为CAR文件\n\n./droplet-client data generate-car ./README.md ./readme.md.car\n\n\n# 3. 计算CAR文件的CID和Piece size\n\n./droplet-client data commP ./readme.md.car\nCID:  baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq\nPiece size:  3.969 KiB\n\n\n# 4. 发起订单\n\n./droplet-client storage deals init \\\n--manual-piece-cid=baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq \\\n--manual-piece-size=4064 \\\nbafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c \\\nf01051 \\\n0.01fil \\\n518400\nbafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm\n\n\n * manual-piece-cid: 在第3步计执行data commP后输出的CID\n * manual-piece-size: 在第3步执行data commP后输出的Piece size.需要注意的是, 在使用这个参数时, 这个值需要转换成byte的大小, 在这里为3.969kib转换成byte的大小是4064. 之后4个参数分别是:\n * 第一步执行import命令后输入的Root\n * 矿工ID\n * 协商支付订单的费用0.01fil, **这个值必须大于旷工设置的storage ask中的最小值, 不然订单会被拒绝掉.\n * 合约周期, 必须大于等于180天, 这个值也需要换成epoch为单位, 每个epoch=30秒, 示例中:518400 = 180天.\n\n最后的输出bafyreidfs2w7lxacq6zpqck7q4zimyitidxyahojf7dbbuz5zr7irdlmqa为propose的cid. 线上订单一样, 此时可以通过droplet-client查看deal信息, 订单的最后状态会停止在StorageDealWaitingForData\n\n./droplet-client storage deals list\nDealCid      DealId  Provider  State                          On Chain?        Slashed?  PieceCID     Size       Price                    Duration  Verified  \n...s7r6hftm  0       t01051    StorageDealCheckForAcceptance  N                N         ...u7o3d6mq  3.969 KiB  5196.63 FIL              519663    false     \n  Message: Provider state: StorageDealWaitingForData\n\n\n💁 如果 droplet-client 出现下面的内容:\n\n2022-01-20T12:47:27.966+0800  ERROR storagemarket_impl  clientstates/client_states.go:324 deal bafyreif2k2e4acraxk33z3llwo5gqmk32tfrdj2kocjanojbfbf6vj72vm failed: adding market funds failed: estimating gas used: message execution failed: exit SysErrInsufficientFunds(6)\n\n\n说明钱包余额不足,调用命令 ./droplet-client actor-funds add 100fil 充值后重新执行命令.\n\n# 5. 导入离线订单的数据文件\n\n需要将之前第2步生成的.car文件线下传输到droplet, 并通过droplet命令导入数据:\n\n./droplet storage deal import-data bafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm ./readme.md.car\n\n\n再次查看状态, 订单状态更新为StorageDealPublishing:\n\n./droplet-client storage deals list\nDealCid      DealId  Provider  State                          On Chain?        Slashed?  PieceCID     Size       Price                    Duration  Verified  \n...s7r6hftm  0       t01051    StorageDealCheckForAcceptance  N                N         ...u7o3d6mq  3.969 KiB  5196.63 FIL              519663    false     \nMessage: Provider state: StorageDealPublishing\n\n\n最后等待订单状态变化为StorageDealAwaitingPreCommit 就可以进行订单数据的封装了。\n\n\n# 提交数据检索订单\n\n用户通过 minerID 和 Data CID 就可以发起数据检索订单\n\n./droplet-client retrieval retrieve --provider t01020 bafk2bzacearla6en6crpouxo72d5lhr3buajbzjippl63bfsd2m7rsyughu42 test.txt\nRecv 0 B, Paid 0 FIL, Open (New), 0s\nRecv 0 B, Paid 0 FIL, DealProposed (WaitForAcceptance), 16ms\nRecv 0 B, Paid 0 FIL, DealAccepted (Accepted), 26ms\nRecv 0 B, Paid 0 FIL, PaymentChannelSkip (Ongoing), 27ms\nRecv 1.479 KiB, Paid 0 FIL, BlocksReceived (Ongoing), 30ms\nRecv 1.479 KiB, Paid 0 FIL, AllBlocksReceived (BlocksComplete), 33ms\nRecv 1.479 KiB, Paid 0 FIL, Complete (CheckComplete), 35ms\nRecv 1.479 KiB, Paid 0 FIL, CompleteVerified (FinalizingBlockstore), 36ms\nRecv 1.479 KiB, Paid 0 FIL, BlockstoreFinalized (Completed), 36ms\nSuccess\n',normalizedContent:'# 快速启用\n\n\n# 概述\n\ndroplet 是 venus 系统中的市场服务组件，由两部分组成：droplet 和 droplet-client，通俗理解为市场服务端和客户端。\n\n * droplet 的服务对象是存储提供商；\n\n * droplet-client 的服务对象是有检索需求或存储需求的用户。\n\ndroplet 的市场服务分为存储市场和检索市场，其一般流程如下：\n\n * 存储流程：\n\n阶段                            步骤\n启动 droplet 和 droplet-client   1. droplet初始化并启动\n                              2. droplet-client初始化并启动\n代理 miners 的 libp2p 监听服务       3. 设置droplet信息到网络\n为 miners 挂单                   4. 存储挂单\n指定 miner 发单                   5. 存储发单\n\n发单之后，需要一定时间执行订单交易流程，订单被确认后，存储提供商对订单中数据进行封装并提交证明，droplet 负责跟踪订单状态。\n\n * 检索流程：\n\n阶段                            步骤\n启动 droplet 和 droplet-client   1. droplet初始化并启动\n                              2. droplet-client初始化并启动\n设置检索价格及收款地址                   3. 存储供应商通过 droplet 检索挂单\n提交数据检索订单                      4. 提交数据检索订单\n\n提交数据检索订单之后，开始执行检索交流流程，会按照协议分批次回传数据并将所需费用转给收款地址\n\n💁 无论是存储交易还是检索交易，其协议的执行过程都是自动的，期间会发送消息上链，故需保证交易双方的消息都可以正常签名。交易过程存在必要的 fil 流转，相关地址需要有足够的余额，否则交易将无法达成。\n\n\n# droplet\n\n\n# droplet初始化并启动\n\n# gateway签名模式\n\nsophon-gateway作为中转，会找链接sophon-gateway的wallet进行签名。 作为链服务中的一个组件，配合sophon-auth、venus、 sophon-messager、sophon-gateway等组件一起为注册到链服务的 miner 提供市场服务。\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--auth-url=http://<ip>:<port> \\\n--gateway-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<shared-token> \\\n--signer-type="gateway"\n\n\n生成的服务组件配置参考:\n\n[node]\n  url = "/ip4/192.168.200.151/tcp/3455"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[messager]\n  url = "/ip4/127.0.0.1/tcp/39812"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[signer]\n  type = "gateway"\n  url = "/ip4/127.0.0.1/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[authnode]\n  url = "http://127.0.0.1:8989"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n\n💁 shared-token 是用于访问其他链服务组件 api 时的权限验证，由 sophon-auth 管理，需要 admin 权限。具体请参考 sophon-auth token\n\n# venus-wallet 签名模式\n\n💁 签名用独立的venus-wallet组件，则配置为 venus-wallet的监听地址及具有签名权限的 token.\n\nvenus-wallet 生成具有签名权限的 token:\n\n$ ./venus-wallet auth api-info --perm=sign\n> eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduil19.vr-op7rnoozf6xxzuahpk-zga7ida5njjmu9l_znj-0:/ip4/127.0.0.1/tcp/5678/http\n\n\n初始化并启动\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--messager-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of write-authority that created by sophon-auth> \\\n--signer-url=/ip4/<ip>/tcp/<port> \\\n--signer-token=<token of venus-wallet> \\\n--signer-type="wallet"\n\n\n生成的服务组件配置参考:\n\n[node]\n  url = "/ip4/192.168.200.151/tcp/3455"\n  # sophon-auth生成的token\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[messager]\n  url = "/ip4/127.0.0.1/tcp/39812"\n  # sophon-auth生成的token\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoic2hhcmvklxrva2vuiiwicgvybsi6imfkbwluiiwizxh0ijoiin0.aarqj_7fse1kakkbhwlfvsym-xblaxbnl9svtfqsve8"\n\n[signer]\n  type = "wallet"\n  url = "/ip4/127.0.0.1/tcp/5678/http"\n  # wallet生成的token\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduil19.ivbglmrw__6g4qgbb1d1jtr1oymm6sqs1tj1gdgr5eq"\n\n\n# 链接lotus启动\n\n配合 lotus fullnode 的启动方式。\n\n./droplet run \\\n--node-url=/ip4/<ip>/tcp/<port> \\\n--cs-token=<token of lotus> \\\n--signer-type="lotusnode"\n\n\n生成的服务组件配置参考:\n\n[node]\n  url = "/ip4/127.0.0.1/tcp/1234"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduiiwiywrtaw4ixx0.ne3jsfhhhn6bgdtdsvlyfuarc3ejph_7krbsmrbdplc"\n\n[messager]\n  url = ""\n  token = ""\n\n[signer]\n  type = "lotusnode"\n  url = "/ip4/127.0.0.1/tcp/1234"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjbbgxvdyi6wyjyzwfkiiwid3jpdguilcjzawduiiwiywrtaw4ixx0.ne3jsfhhhn6bgdtdsvlyfuarc3ejph_7krbsmrbdplc"\n\n[authnode]\n  url = ""\n  token = ""\n\n\n💁 初始化命令执行成功后将会生成droplet repo,在使用时需根据实际环境配置。\n\ndroplet 首次启动时会生成配置项，默认目录为: ~/.droplet/config.toml,可以根据实际情况，对配置文件进行设置。具体配置文件的解释请参考：droplet配置解释 tips: 修改完配置文件之后需要重启droplet服务：\n\n$ nohup ./droplet run > droplet.log 2>&1 &\n\n\n> 已经生成 repo 之后，初始化所需的参数被写入配置文件，故后续启动无需再加。\n\n\n# 设置droplet信息到网络\n\n * 查询 droplet 的对等节点监听地址，获取addrs和peer-id值。\n\n./droplet net listen\n\n/ip4/127.0.0.1/tcp/58418/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n/ip4/192.168.19.67/tcp/58418/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n/ip6/::1/tcp/49770/p2p/12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n\n\n * 将 miners 的 multiaddrs 和 peer-id 设置为 droplet 的 multiaddrs 和 peer-id\n\n./droplet actor set-addrs --miner=t01041 /ip4/192.168.19.67/tcp/58418\nrequested multiaddrs change in message bafy2bzaceceqgxmiledunzjwbajpghzzn4iibvxhoifsrz4q2grzsirgznzdg\n\n./droplet actor set-peer-id --miner=f01041 12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\n  requested peerid change in message bafy2bzacea4ruzf4hvyezzhjkt6hnzz5tpk7ttuw6jmyoadqasqtujypqitp2\n\n\n * 等待消息上链后，查看 miner 的代理信息\n\n./droplet actor info --miner t01041\npeers: 12d3koowqftxtgfbkookuyankugapuzi4vmjxektgkpsncqufkbk\naddr: /ip4/192.168.19.67/tcp/58418\n\n\n\n# 挂单\n\n# 存储挂单\n\nsp设置订单存储订单的价格和存储文件大小限制等信息。\n\n./droplet storage ask set --price=0.01fil --verified-price=0.02fil --min-piece-size=512b --max-piece-size=512m t01041\n\n\n可以通过命令行工具检查定价信息：\n\n./droplet storage ask get t01041\nprice per gib/epoch  verified  min. piece size (padded)  max. piece size (padded)  expiry (epoch)  expiry (appx. rem. time)  seq. no.\n0.01 fil             0.02 fil  512 b                     521 mib                     161256          719h59m0s                 0\n\n\n# 检索挂单\n\n存储服务提供商至少应设置收款地址\n\n./droplet retrieval ask set t3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n同时，也可以设置数据检索订单的价格，不设置时，默认为0.\n\n./droplet retrieval ask set \\\n--price 0.02fil \\\n--unseal-price 0.01fil \\\n--payment-interval 1mb \\\nt3ueb62v5kbyuvwo5tuyzpvds2bfakdjeg2s33p47buvbfiyd7w5fwmeilobt5cqzi673s5z6i267igkgxum6a\n\n\n\n# droplet-client\n\n\n# droplet-client初始化并启动\n\ndroplet-client 正常运行需要同步节点、签名节点（venus fullnode 和 lotus fullnode 可以作为签名节点）、消息节点（venus fullnode 和 lotus fullnode 可以作为消息节点）及 droplet，故其可以灵活配置，只要保证消息能够正常签名并上链即可。\n\ndroplet-client 需要配置 --addr 用来绑定客户的钱包地址，用于支付客户端抵押和检索费用。\n\n这里介绍常用的三种启动方式：\n\n# 接入 venus 链服务(推荐)\n\nsophon-gateway 的签名 api 只有 admin 权限才能访问（安全考虑），也就是只有链服务组件才能访问，故 droplet-client 无法使用，所以用本地的 venus-wallet 进行签名。\n\ndroplet-client是直连venus-wallet进行本地签名，--addr必须指定venus-wallet有的地址才可以。\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--messager-url=/ip4/<sophon-messager_ip>/tcp/<port> \\\n--auth-token=<user-read-or-write-permission-token> \\\n--signer-type=wallet \\\n--signer-url=/ip4/<venus-wallet_ip>/tcp/<port> \\\n--signer-toke=<wallet-token> \\\n--addr=<signer address> \\\n\n\n> venus-wallet 生成具有签名权限的 token 请参考上文.\n\n# 连接 venus fullnode 启动\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--node-token=<node-token> \\\n--signer-type=wallet \\\n--addr=<signer address> \\\n\n\n# 连接 lotus fullnode 启动\n\n./droplet-client run \\\n--node-url=/ip4/<venus_ip>/tcp/<port> \\ \n--node-token=<node-token> \\\n--signer-type=lotusnode \\\n--addr=<signer address> \\\n\n\n这些配置项也可以在配置文件中设置，参见droplet-client配置\n\n\n# 存储订单（发单）\n\n# 在线订单\n\n# 1. 导入待存储的数据\n\n./droplet-client data import <file path>\nimport 1642491708527303001, root bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n\n\n# 2. 选择挂单(询价)\n\n测试连通性，使用 droplet-client 来查询 miner 挂单信息：\n\n./droplet-client storage asks query f01041 \nask: t01041\nprice per gib: 0.02 fil\nverified price per gib: 0.01 fil\nmax piece size: 8 mib\nmin piece size: 512 b\n\n\n# 3. 发起存储订单（发单）\n\n/droplet-client storage deals init\n# 输入需要存储的数据的cid, `./droplet-client data local`命令查看\ndata cid (from lotus client import): bafk2bzacedgv2xqys5ja4gycqipmg543ekxz3tjj6wwfexda352n55ahjldja\n.. calculating data size\npiececid:  baga6ea4seaqpz47j4kqdiixpehmzk3uw5c4cmqvs5iyi7xf7rwkepfhdvowdiai  payloadsize: 809 piecesize: 1024\n# 输入数据存储周期\ndeal duration (days): 180\n# 输入接单的miner id\nminer addresses (f0.. f0..), none to find: t01041\n.. querying miner asks\n-----\nproposing from t16qnfduxzpneb2m3rbdasvhgk7rmmo32zpiypkaq\n  balance: 9499.999999856612207905 fil\npiece size: 1kib (payload size: 809b)\nduration: 4320h0m0s\ntotal price: ~0.0098876953124352 fil (0.000000019073486328 fil per epoch)\nverified: false\n# 确认是否接受订单价格\naccept (yes/no): yes\n.. executing\ndeal (t01051) cid: bafyreihiln2ha6eaaos7kuhwpnvjvjlxmjnpsklym6hhucu2z776bf2or4\n\n\n然后等待订单消息上链，以及存储提供商完成数据封装即可。\n\ndroplet-client 查看订单:\n\n./droplet-client storage deals list\ndealcid      dealid  provider  state                          on chain?  slashed?  piececid     size    price                    duration  verified\n...76bf2or4  0       t01051    storagedealcheckforacceptance  n          n         ...dvowdiai  1016 b  0.00992212295525724 fil  520205    false\n  message: provider state: storagedealpublish\n\n\n# 离线订单\n\n# 1. 导入订单存储文件\n\n./droplet-client data import ./readme.md\nimport 1642643014364955003, root bafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c\n\n\n# 2. 转为car文件\n\n./droplet-client data generate-car ./readme.md ./readme.md.car\n\n\n# 3. 计算car文件的cid和piece size\n\n./droplet-client data commp ./readme.md.car\ncid:  baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq\npiece size:  3.969 kib\n\n\n# 4. 发起订单\n\n./droplet-client storage deals init \\\n--manual-piece-cid=baga6ea4seaqfewgysi3n3cjylkbfknr56vbemb2gwjfvpctqtjgpdweu7o3d6mq \\\n--manual-piece-size=4064 \\\nbafk2bzaceaf4sallirkt63fqrojz5gaut7akiwxrclcsymqelqad7man3hc2c \\\nf01051 \\\n0.01fil \\\n518400\nbafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm\n\n\n * manual-piece-cid: 在第3步计执行data commp后输出的cid\n * manual-piece-size: 在第3步执行data commp后输出的piece size.需要注意的是, 在使用这个参数时, 这个值需要转换成byte的大小, 在这里为3.969kib转换成byte的大小是4064. 之后4个参数分别是:\n * 第一步执行import命令后输入的root\n * 矿工id\n * 协商支付订单的费用0.01fil, **这个值必须大于旷工设置的storage ask中的最小值, 不然订单会被拒绝掉.\n * 合约周期, 必须大于等于180天, 这个值也需要换成epoch为单位, 每个epoch=30秒, 示例中:518400 = 180天.\n\n最后的输出bafyreidfs2w7lxacq6zpqck7q4zimyitidxyahojf7dbbuz5zr7irdlmqa为propose的cid. 线上订单一样, 此时可以通过droplet-client查看deal信息, 订单的最后状态会停止在storagedealwaitingfordata\n\n./droplet-client storage deals list\ndealcid      dealid  provider  state                          on chain?        slashed?  piececid     size       price                    duration  verified  \n...s7r6hftm  0       t01051    storagedealcheckforacceptance  n                n         ...u7o3d6mq  3.969 kib  5196.63 fil              519663    false     \n  message: provider state: storagedealwaitingfordata\n\n\n💁 如果 droplet-client 出现下面的内容:\n\n2022-01-20t12:47:27.966+0800  error storagemarket_impl  clientstates/client_states.go:324 deal bafyreif2k2e4acraxk33z3llwo5gqmk32tfrdj2kocjanojbfbf6vj72vm failed: adding market funds failed: estimating gas used: message execution failed: exit syserrinsufficientfunds(6)\n\n\n说明钱包余额不足,调用命令 ./droplet-client actor-funds add 100fil 充值后重新执行命令.\n\n# 5. 导入离线订单的数据文件\n\n需要将之前第2步生成的.car文件线下传输到droplet, 并通过droplet命令导入数据:\n\n./droplet storage deal import-data bafyreiecguaxgtmgcanfco6huni4d6h6zs3w3bznermmiurtdos7r6hftm ./readme.md.car\n\n\n再次查看状态, 订单状态更新为storagedealpublishing:\n\n./droplet-client storage deals list\ndealcid      dealid  provider  state                          on chain?        slashed?  piececid     size       price                    duration  verified  \n...s7r6hftm  0       t01051    storagedealcheckforacceptance  n                n         ...u7o3d6mq  3.969 kib  5196.63 fil              519663    false     \nmessage: provider state: storagedealpublishing\n\n\n最后等待订单状态变化为storagedealawaitingprecommit 就可以进行订单数据的封装了。\n\n\n# 提交数据检索订单\n\n用户通过 minerid 和 data cid 就可以发起数据检索订单\n\n./droplet-client retrieval retrieve --provider t01020 bafk2bzacearla6en6crpouxo72d5lhr3buajbzjippl63bfsd2m7rsyughu42 test.txt\nrecv 0 b, paid 0 fil, open (new), 0s\nrecv 0 b, paid 0 fil, dealproposed (waitforacceptance), 16ms\nrecv 0 b, paid 0 fil, dealaccepted (accepted), 26ms\nrecv 0 b, paid 0 fil, paymentchannelskip (ongoing), 27ms\nrecv 1.479 kib, paid 0 fil, blocksreceived (ongoing), 30ms\nrecv 1.479 kib, paid 0 fil, allblocksreceived (blockscomplete), 33ms\nrecv 1.479 kib, paid 0 fil, complete (checkcomplete), 35ms\nrecv 1.479 kib, paid 0 fil, completeverified (finalizingblockstore), 36ms\nrecv 1.479 kib, paid 0 fil, blockstorefinalized (completed), 36ms\nsuccess\n',charsets:{cjk:!0}},{title:"批量发单",frontmatter:{},regularPath:"/zh/operation/batch-deal.html",relativePath:"zh/operation/batch-deal.md",key:"v-b00ffe36",path:"/zh/operation/batch-deal.html",headers:[{level:2,title:"批量发单",slug:"批量发单",normalizedTitle:"批量发单",charIndex:2},{level:2,title:"例子",slug:"例子",normalizedTitle:"例子",charIndex:543},{level:3,title:"准备订单数据",slug:"准备订单数据",normalizedTitle:"准备订单数据",charIndex:550},{level:3,title:"批量发单",slug:"批量发单-2",normalizedTitle:"批量发单",charIndex:2},{level:3,title:"查询订单",slug:"查询订单",normalizedTitle:"查询订单",charIndex:4406},{level:3,title:"批量导入订单数据",slug:"批量导入订单数据",normalizedTitle:"批量导入订单数据",charIndex:4586},{level:3,title:"查询占比情况",slug:"查询占比情况",normalizedTitle:"查询占比情况",charIndex:6115}],headersStr:"批量发单 例子 准备订单数据 批量发单 查询订单 批量导入订单数据 查询占比情况",content:'# 批量发单\n\n通过 droplet-client 批量发布离线订单。\n\n批量发单命令：droplet-clientstorage deals batch [command options] [miners price duration]，具体使用和发送单个订单类似，新增了一些 Option。\n\n部分 Option:\n\n * --miner 接收订单的矿工，可以是多个 --miner=t010001 --miner=t010002，多个会平均分配订单。\n * --manifest go-graphsplit 生成的 manifest.csv 文件，包含 payload cid、piece cid 和 piece size 等信息\n * --start-index 从 manifest.csv 第 N 条订单开始\n * --end-index 在 manifest.csv 第 N 条订单结束，start-index - end-index 就是本次预期发布的订单总数\n * --filter 是否启动过滤，默认是 false，目前有两条过滤规则\n   * 存储提供者重复的数据不能超过20%\n   * 一个发单者对同一个存储提供者发的datacap订单不能超过25%\n\n\n# 例子\n\n\n# 准备订单数据\n\n使用 go-graphsplit 生成订单数据，go-graphsplit 是一种用于将大型数据集分割成固定大小的 car 文件的工具。\n\n# --car-dir 指定文件目录存储生成的 car 文件和 manifest.csv 文件\n# --slice-size 指定car文件大小\n# --graph-name 图的名字，可随意填\n# --calc-commp 是否计算 commp，必须要计算，离线订单需要piece cid 和 piece size\n# --rename 生成的car文件默认是以 payloadcid.car 作为文件名，加上本 flag 后以 piececid 作为文件名，建议加上本flag，方便后面数据导入\n# path-to-source-file 指定用于生成car文件的原始数据\n\n./graphsplit chunk --car-dir <car-dir> --slice-size <piece-size> --graph-name <name> --calc-commp --rename <path-to-source-file>\n\n# 结果\n会在指定的目录生成 car 文件和 manifest.csv 文件\n\n\nmanifest.csv 文件内容，发单的时候会使用到 playload_cid、piece_cid、payload_size 和 payload_size。\n\nplayload_cid,filename,piece_cid,payload_size,payload_size,detail\nbafybeib6kembdoggfwssslpcrxgpbhxmeyretwcnaspx5ff2r4rybt73gq,test-total-19-part-1.car,baga6ea4seaqevygou3u5mlxl6prwifaw2n4e6eanrbdl7wm2guzfm2r5tool4fi,14241759,16646144,"{""Name"":"""",""Hash"":""bafybeib6kembdoggfwssslpcrxgpbhxmeyretwcnaspx5ff2r4rybt73gq"",""Size"":0,""Link"":[{""Name"":""filecoin-ffi"",""Hash"":""bafybeibum5nzwz54733lioyzwhqrod2zauax2jaa4qiu5hdqw7fidzl47m"",""Size"":14240979,""Link"":[{""Name"":""libfilcrypto.a.00000001"",""Hash"":""bafybeigptobclymvmmlxn4n764dey2p6hgot6h34vtte5fzm67l2znwz4q"",""Size"":14240905,""Link"":null}]}]}"\nbafybeihh6sq3w5qmzrxakde5wwjkw7wnbwwxm5yvfo3nd5zjw25vtgcqom,test-total-19-part-2.car,baga6ea4seaqh4vblymafqc3tskmy5jilgs462gsbvuu6mxnsql364bhbj5omcji,14241759,16646144,"{""Name"":"""",""Hash"":""bafybeihh6sq3w5qmzrxakde5wwjkw7wnbwwxm5yvfo3nd5zjw25vtgcqom"",""Size"":0,""Link"":[{""Name"":""filecoin-ffi"",""Hash"":""bafybeigiprvgstre4ctcwleocm2gg52hzc32ccnjr66phud5qrnbmjyqli"",""Size"":14240979,""Link"":[{""Name"":""libfilcrypto.a.00000002"",""Hash"":""bafybeia4fxflzrihwbjkjayasrtvmnocvq5xn3pesendcjnlog47fchd6q"",""Size"":14240905,""Link"":null}]}]}"\nbafybeihw7afqagfvg2uhmigyunsgvxeidaqfbg6odi4jwbus6557kqhsd4,test-total-19-part-3.car,baga6ea4seaqij5nrrmypz22lchdrjcaowjdjk67agjntbcfbcbbrcrnrdbn7kfy,14241759,16646144,"{""Name"":"""",""Hash"":""bafybeihw7afqagfvg2uhmigyunsgvxeidaqfbg6odi4jwbus6557kqhsd4"",""Size"":0,""Link"":[{""Name"":""filecoin-ffi"",""Hash"":""bafybeicn4bdznskvsjt3on2633mm3uh5gungf37hmfhsizraugq4uleosu"",""Size"":14240979,""Link"":[{""Name"":""libfilcrypto.a.00000003"",""Hash"":""bafybeidi5kz5hhfwcqechj4czbyat3tlyyd4d6rigigkks66ysjy5agfke"",""Size"":14240905,""Link"":null}]}]}"\nbafybeigq66gjr6c6junro7t4fwcpkhl7vpowi3soadksjvleusq6nlzu6a,test-total-19-part-4.car,baga6ea4seaqaamzryns5cphp5bynuq5nrxdltxzcj6hoybboduhh4377rw6lqgy,14241759,16646144,"{""Name"":"""",""Hash"":""bafybeigq66gjr6c6junro7t4fwcpkhl7vpowi3soadksjvleusq6nlzu6a"",""Size"":0,""Link"":[{""Name"":""filecoin-ffi"",""Hash"":""bafybeih5lopymib4lbnoonqatu43r2avm2rw2nz4eeva6zmnyyegjsoyma"",""Size"":14240979,""Link"":[{""Name"":""libfilcrypto.a.00000004"",""Hash"":""bafybeieo2dahkmiak4rlyfehpgu4gyjq2v6wulbmcobha3f2nk6ftysaae"",""Size"":14240905,""Link"":null}]}]}"\n\n\n\n# 批量发单\n\n 1. 发布普通离线订单\n\n./droplet-client storage deals batch --from <address> --manifest <path-to-manifest.csv> --end-index 10 --start-index 5 --miner=t019150 --miner=t018682 0 518400\n\n# 结果\nhas 5 deals need to publish, t018682: 3, t019150: 2\ncreate deal success, proposal cid: bafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a\ncreate deal success, proposal cid: bafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem\ncreate deal success, proposal cid: bafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm\ncreate deal success, proposal cid: bafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4\ncreate deal success, proposal cid: bafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei\n\n\n 2. 批量发布 datacap 订单\n\n> 请加上 --verified-deal flag\n\n./droplet-client storage deals batch --from <address> --manifest <path-to-manifest.csv> --end-index 15 --start-index 10 --verified-deal --miner=t019150 --miner=t018682 0 518400\n\n\n\n# 查询订单\n\n 1. 查询单个订单\n\n./droplet-client storage deals get bafyreify4mm46vfdqsogcfhki44vi3ll5n2h35p5fflcclew53fgm3yieu\n\n\n 2. 列出所有离线订单\n\n./droplet-client storage deals list --offline\n\n\n\n# 批量导入订单数据\n\n前提：使用 go-graphsplit 生成的 car 文件是以 piececid 作为文件名。\n\n 1. 导出待导入的离线订单\n\n可以导出所有订单状态在 StorageDealWaitingForData 的订单，导出数据包括 proposal cid 和 piece cid。\n\n./droplet-client storage deals export --output proposal_piece.txt\n\ncat proposal_piece.txt\n\nproposalCID,pieceCID\nbafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a,baga6ea4seaqbj3yywnq3yisdxy4zlf4if2whlm5sdjcz7ricm2wrow2b7rc2uja\nbafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem,baga6ea4seaqcdstiui27aajpz2dcpx2f6brimxhfvepgxljwsweicul32pkeofq\nbafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm,baga6ea4seaqlrwtnhj322vczuuiy2ekb4kjftbf3ho6f4bgy6k5rnzh67eia4lq\nbafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4,baga6ea4seaqdgfsfsdtpnsgwlwhtj4ecvk7432gaqheltfrzun3vju3yc3d7cnq\nbafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei,\nbaga6ea4seaqknn4cstmtmscdhebaxmv5dopnxqthwbdmvuslbuv5dcupzvw46ni\n\n\n 2. 批量导入订单数据\n\n# --cardir car 文件的目录，若提前把 car 文件放到 piecestore，则本 flag 可以省略，如果确认piece数据没有问题，可以使用 `--skip-commp` 参数来加速数据导入过程。\n./droplet storage deal batch-import-data --manifest <proposal_piece.txt> --cardir <path-to-cardir>\n\n# 结果\nimport data success: bafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a\nimport data success: bafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem\nimport data success: bafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm\nimport data success: bafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4\nimport data success: bafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei\n\n\n\n# 查询占比情况\n\n 1. 查看存储提供者订单重复情况\n\n./droplet-client storage deals verified-deal-stat --provider t019150\n\n# 结果\nProvider  Total      Uniq       DuplicationPercentage  \nt019150   981467136  612368384  37.61% \n\n\n 2. 查看样本分布情况\n\n./droplet-client storage deals verified-deal-stat --client t3wivhkdivcxj5zp2l4wjkzon232s52smnd5m3na66ujl5nel75jggguhgaa3zbhjo3as4epf5ytxl6ly3qoha\n\n# 结果\nClient: t3wivhkdivcxj5zp2l4wjkzon232s52smnd5m3na66ujl5nel75jggguhgaa3zbhjo3as4epf5ytxl6ly3qoha\nTotal:  16.17 GiB / 17362337792 B\nUniq:   14.77 GiB / 15860764672 B\nDuplicationPercentage: 8.65%\nProvider  Total                      Percentage  Uniq                       DuplicationPercentage  \nt019150   620 MiB / 650117120 B      3.74%       620 MiB / 650117120 B      0.00%                  \nt018682   15.56 GiB / 16712220672 B  96.26%      14.42 GiB / 15487471616 B  7.33%  \n',normalizedContent:'# 批量发单\n\n通过 droplet-client 批量发布离线订单。\n\n批量发单命令：droplet-clientstorage deals batch [command options] [miners price duration]，具体使用和发送单个订单类似，新增了一些 option。\n\n部分 option:\n\n * --miner 接收订单的矿工，可以是多个 --miner=t010001 --miner=t010002，多个会平均分配订单。\n * --manifest go-graphsplit 生成的 manifest.csv 文件，包含 payload cid、piece cid 和 piece size 等信息\n * --start-index 从 manifest.csv 第 n 条订单开始\n * --end-index 在 manifest.csv 第 n 条订单结束，start-index - end-index 就是本次预期发布的订单总数\n * --filter 是否启动过滤，默认是 false，目前有两条过滤规则\n   * 存储提供者重复的数据不能超过20%\n   * 一个发单者对同一个存储提供者发的datacap订单不能超过25%\n\n\n# 例子\n\n\n# 准备订单数据\n\n使用 go-graphsplit 生成订单数据，go-graphsplit 是一种用于将大型数据集分割成固定大小的 car 文件的工具。\n\n# --car-dir 指定文件目录存储生成的 car 文件和 manifest.csv 文件\n# --slice-size 指定car文件大小\n# --graph-name 图的名字，可随意填\n# --calc-commp 是否计算 commp，必须要计算，离线订单需要piece cid 和 piece size\n# --rename 生成的car文件默认是以 payloadcid.car 作为文件名，加上本 flag 后以 piececid 作为文件名，建议加上本flag，方便后面数据导入\n# path-to-source-file 指定用于生成car文件的原始数据\n\n./graphsplit chunk --car-dir <car-dir> --slice-size <piece-size> --graph-name <name> --calc-commp --rename <path-to-source-file>\n\n# 结果\n会在指定的目录生成 car 文件和 manifest.csv 文件\n\n\nmanifest.csv 文件内容，发单的时候会使用到 playload_cid、piece_cid、payload_size 和 payload_size。\n\nplayload_cid,filename,piece_cid,payload_size,payload_size,detail\nbafybeib6kembdoggfwssslpcrxgpbhxmeyretwcnaspx5ff2r4rybt73gq,test-total-19-part-1.car,baga6ea4seaqevygou3u5mlxl6prwifaw2n4e6eanrbdl7wm2guzfm2r5tool4fi,14241759,16646144,"{""name"":"""",""hash"":""bafybeib6kembdoggfwssslpcrxgpbhxmeyretwcnaspx5ff2r4rybt73gq"",""size"":0,""link"":[{""name"":""filecoin-ffi"",""hash"":""bafybeibum5nzwz54733lioyzwhqrod2zauax2jaa4qiu5hdqw7fidzl47m"",""size"":14240979,""link"":[{""name"":""libfilcrypto.a.00000001"",""hash"":""bafybeigptobclymvmmlxn4n764dey2p6hgot6h34vtte5fzm67l2znwz4q"",""size"":14240905,""link"":null}]}]}"\nbafybeihh6sq3w5qmzrxakde5wwjkw7wnbwwxm5yvfo3nd5zjw25vtgcqom,test-total-19-part-2.car,baga6ea4seaqh4vblymafqc3tskmy5jilgs462gsbvuu6mxnsql364bhbj5omcji,14241759,16646144,"{""name"":"""",""hash"":""bafybeihh6sq3w5qmzrxakde5wwjkw7wnbwwxm5yvfo3nd5zjw25vtgcqom"",""size"":0,""link"":[{""name"":""filecoin-ffi"",""hash"":""bafybeigiprvgstre4ctcwleocm2gg52hzc32ccnjr66phud5qrnbmjyqli"",""size"":14240979,""link"":[{""name"":""libfilcrypto.a.00000002"",""hash"":""bafybeia4fxflzrihwbjkjayasrtvmnocvq5xn3pesendcjnlog47fchd6q"",""size"":14240905,""link"":null}]}]}"\nbafybeihw7afqagfvg2uhmigyunsgvxeidaqfbg6odi4jwbus6557kqhsd4,test-total-19-part-3.car,baga6ea4seaqij5nrrmypz22lchdrjcaowjdjk67agjntbcfbcbbrcrnrdbn7kfy,14241759,16646144,"{""name"":"""",""hash"":""bafybeihw7afqagfvg2uhmigyunsgvxeidaqfbg6odi4jwbus6557kqhsd4"",""size"":0,""link"":[{""name"":""filecoin-ffi"",""hash"":""bafybeicn4bdznskvsjt3on2633mm3uh5gungf37hmfhsizraugq4uleosu"",""size"":14240979,""link"":[{""name"":""libfilcrypto.a.00000003"",""hash"":""bafybeidi5kz5hhfwcqechj4czbyat3tlyyd4d6rigigkks66ysjy5agfke"",""size"":14240905,""link"":null}]}]}"\nbafybeigq66gjr6c6junro7t4fwcpkhl7vpowi3soadksjvleusq6nlzu6a,test-total-19-part-4.car,baga6ea4seaqaamzryns5cphp5bynuq5nrxdltxzcj6hoybboduhh4377rw6lqgy,14241759,16646144,"{""name"":"""",""hash"":""bafybeigq66gjr6c6junro7t4fwcpkhl7vpowi3soadksjvleusq6nlzu6a"",""size"":0,""link"":[{""name"":""filecoin-ffi"",""hash"":""bafybeih5lopymib4lbnoonqatu43r2avm2rw2nz4eeva6zmnyyegjsoyma"",""size"":14240979,""link"":[{""name"":""libfilcrypto.a.00000004"",""hash"":""bafybeieo2dahkmiak4rlyfehpgu4gyjq2v6wulbmcobha3f2nk6ftysaae"",""size"":14240905,""link"":null}]}]}"\n\n\n\n# 批量发单\n\n 1. 发布普通离线订单\n\n./droplet-client storage deals batch --from <address> --manifest <path-to-manifest.csv> --end-index 10 --start-index 5 --miner=t019150 --miner=t018682 0 518400\n\n# 结果\nhas 5 deals need to publish, t018682: 3, t019150: 2\ncreate deal success, proposal cid: bafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a\ncreate deal success, proposal cid: bafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem\ncreate deal success, proposal cid: bafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm\ncreate deal success, proposal cid: bafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4\ncreate deal success, proposal cid: bafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei\n\n\n 2. 批量发布 datacap 订单\n\n> 请加上 --verified-deal flag\n\n./droplet-client storage deals batch --from <address> --manifest <path-to-manifest.csv> --end-index 15 --start-index 10 --verified-deal --miner=t019150 --miner=t018682 0 518400\n\n\n\n# 查询订单\n\n 1. 查询单个订单\n\n./droplet-client storage deals get bafyreify4mm46vfdqsogcfhki44vi3ll5n2h35p5fflcclew53fgm3yieu\n\n\n 2. 列出所有离线订单\n\n./droplet-client storage deals list --offline\n\n\n\n# 批量导入订单数据\n\n前提：使用 go-graphsplit 生成的 car 文件是以 piececid 作为文件名。\n\n 1. 导出待导入的离线订单\n\n可以导出所有订单状态在 storagedealwaitingfordata 的订单，导出数据包括 proposal cid 和 piece cid。\n\n./droplet-client storage deals export --output proposal_piece.txt\n\ncat proposal_piece.txt\n\nproposalcid,piececid\nbafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a,baga6ea4seaqbj3yywnq3yisdxy4zlf4if2whlm5sdjcz7ricm2wrow2b7rc2uja\nbafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem,baga6ea4seaqcdstiui27aajpz2dcpx2f6brimxhfvepgxljwsweicul32pkeofq\nbafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm,baga6ea4seaqlrwtnhj322vczuuiy2ekb4kjftbf3ho6f4bgy6k5rnzh67eia4lq\nbafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4,baga6ea4seaqdgfsfsdtpnsgwlwhtj4ecvk7432gaqheltfrzun3vju3yc3d7cnq\nbafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei,\nbaga6ea4seaqknn4cstmtmscdhebaxmv5dopnxqthwbdmvuslbuv5dcupzvw46ni\n\n\n 2. 批量导入订单数据\n\n# --cardir car 文件的目录，若提前把 car 文件放到 piecestore，则本 flag 可以省略，如果确认piece数据没有问题，可以使用 `--skip-commp` 参数来加速数据导入过程。\n./droplet storage deal batch-import-data --manifest <proposal_piece.txt> --cardir <path-to-cardir>\n\n# 结果\nimport data success: bafyreihwvsr3vfsdbrxagtdjzsemngtc3r3xra2gaunbs6pjb63lyodl6a\nimport data success: bafyreid2oakcs2di6lq5mv3e4h5sybkezl3zn7lhvf656zeqentcsqetem\nimport data success: bafyreidmzdh7zee7inm65cdxmuwyxyv7uwtoo2hiphsjfseyymoir2z4nm\nimport data success: bafyreigt663jymtilnxocfybs27w6b564yxfczdpsx47fbsqwzrj54zxz4\nimport data success: bafyreigtemnxftqg65gtwsw3rwfvqaqzbb47d4r75ipksjlypcs56y7qei\n\n\n\n# 查询占比情况\n\n 1. 查看存储提供者订单重复情况\n\n./droplet-client storage deals verified-deal-stat --provider t019150\n\n# 结果\nprovider  total      uniq       duplicationpercentage  \nt019150   981467136  612368384  37.61% \n\n\n 2. 查看样本分布情况\n\n./droplet-client storage deals verified-deal-stat --client t3wivhkdivcxj5zp2l4wjkzon232s52smnd5m3na66ujl5nel75jggguhgaa3zbhjo3as4epf5ytxl6ly3qoha\n\n# 结果\nclient: t3wivhkdivcxj5zp2l4wjkzon232s52smnd5m3na66ujl5nel75jggguhgaa3zbhjo3as4epf5ytxl6ly3qoha\ntotal:  16.17 gib / 17362337792 b\nuniq:   14.77 gib / 15860764672 b\nduplicationpercentage: 8.65%\nprovider  total                      percentage  uniq                       duplicationpercentage  \nt019150   620 mib / 650117120 b      3.74%       620 mib / 650117120 b      0.00%                  \nt018682   15.56 gib / 16712220672 b  96.26%      14.42 gib / 15487471616 b  7.33%  \n',charsets:{cjk:!0}},{title:"订单过滤器",frontmatter:{},regularPath:"/zh/operation/deal-filter.html",relativePath:"zh/operation/deal-filter.md",key:"v-82e0499e",path:"/zh/operation/deal-filter.html",headers:[{level:2,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:12},{level:2,title:"详情",slug:"详情",normalizedTitle:"详情",charIndex:133},{level:3,title:"订单信息",slug:"订单信息",normalizedTitle:"订单信息",charIndex:395},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:1842}],headersStr:"背景 详情 订单信息 示例",content:'# 订单过滤器\n\n\n# 背景\n\n有时候, SP 可能会希望可以对是否接受订单以及接受哪些订单做出一些更加精细化的控制. 例如, 有些 SP 可能希望只接受来自特定 peer 的订单, 或者只接受来自特定 peer 的订单, 并且订单的价格必须在某个范围内.\n\n\n# 详情\n\n为了满足这些需求, 可以在 Droplet 的配置文件中给特定的 miner 配置一个订单过滤器, 该过滤器在配置文件中的表现形式是一个表示一个 shell 命令的字符串, 每当 Droplet 决定是否接受指向某个 miner 的订单时, 就会调用该命令, 并将 订单的信息 ( json 字符串) 作为命令的参数 (标准输入) 传递给该命令. 如果命令退出码为 0, 则表示接受该订单, 否则拒绝该订单.\n\n * exit with 0 : 接受订单\n * exit with non-0 : 拒绝订单\n\n\n# 订单信息\n\n * Storage Deal\n\n{\n"IsOffline": false,\n"FormatVersion":      "1.0.0",\n"FastRetrieval":        false,\n"TransferType" :        "manual",\n"ClientDealProposal":{\n    "Proposal": {\n    "PieceCID": {\n    "/": "baga6ea4seaqihx2pxanewwxvqwgeyrcmal7aomucelef52vhqy7qaarciamaqoq"\n    },\n    "PieceSize": 2048,\n    "VerifiedDeal": false,\n    "Client": "f3r3hr3xl27unpefvipve2f4hlfvdnq3forgr253z6dqahufvanatdandxm74zikheccvx74ys7by5vzafq2va",\n    "Provider": "f01000",\n    "Label": "bafk2bzacebiupsywspqnsvc5v7ing74i3u4y3r7wtgjioor7pqn3cxopq7lo4",\n    "StartEpoch": 18171,\n    "EndEpoch": 536571,\n    "StoragePricePerEpoch": "1",\n    "ProviderCollateral": "0",\n    "ClientCollateral": "0"\n    },\n    "ClientSignature": {\n    "Type": 2,\n    "Data": "oEnUUL1WejrLawl3sP9o/TZYRZgPYA86xmF3RMQt5bPQJbrK/5x3UXYxeUKoIDMjE96fA1GSqfrE14tFl/nMyatPLUvzzZ0ulsPTQVwfb54Mgx0yBSMYTf/O8Bg09MNq"\n    },\n},\n"DealType": "storage",\n"Agent": "droplet"\n}\n\n\n * Retrivel Deal\n\n{\n  "PayloadCID": null,\n  "ID": 0,\n  "Selector": null,\n  "PieceCID": null,\n  "PricePerByte": "\\u003cnil\\u003e",\n  "PaymentInterval": 0,\n  "PaymentIntervalIncrease": 0,\n  "UnsealPrice": "\\u003cnil\\u003e",\n  "StoreID": 0,\n  "SelStorageProposalCid": null,\n  "ChannelID": null,\n  "Status": 0,\n  "Receiver": "",\n  "TotalSent": 0,\n  "FundsReceived": "\\u003cnil\\u003e",\n  "Message": "",\n  "CurrentInterval": 0,\n  "LegacyProtocol": false,\n  "CreatedAt": 0,\n  "UpdatedAt": 0,\n  "DealType": "retrieval"\n}\n\n\n\n# 示例\n\n# Storage Deal\nFilter = ""\n\n# Retrieval Deal\nRetrievalFilter = ""\n\n\n * 例子: 最简单的订单过滤器\n\n# 拒绝所有订单\nFilter = "exit 1"\n\n# 接受所有订单\nFilter = "exit 0"\n\n\n * 例子: 只接受来自 f01000 的订单\n\nFilter = "jq -r \'.ClientDealProposal.Proposal.Provider\' | grep -q \'^f01000$\'"\n\n\n * 例子: 只接受来自 f1aaaaaaaaaaaaaaaaaaaaaaaaa 、 f1bbbbbbbbbbbbbbbbbbbbbbbbb 和 f1ccccccccccccccccccccccccc 地址发送过来的订单\n\nFilter = "jq -e \'.Proposal.Client == \\"f1aaaaaaaaaaaaaaaaaaaaaaaaa\\" or .Proposal.Client == \\"f1bbbbbbbbbbbbbbbbbbbbbbbbb\\" or .Proposal.Client == \\"f1ccccccccccccccccccccccccc\\"\'"\n\n\n * 例子: 使用 python 脚本\n\n# config.toml\nFilter = "python3 /path/to/filter.py"\n\n\n# filter.py\nimport json\nimport sys\n\ntry:\n    json_str = sys.stdin.read()\n    data = json.loads(json_str)\n\n    if data["ClientDealProposal"][\'Proposal\'][\'PieceSize\'] < 2048:\n        print("")\n        sys.exit(0)\n    else:\n        print("PieceSize is greater than or equal to 2048. Exiting with code 1.")\n        sys.exit(1)\nexcept Exception as e:\n    print("An error occurred: ", e)\n    sys.exit(1)\n',normalizedContent:'# 订单过滤器\n\n\n# 背景\n\n有时候, sp 可能会希望可以对是否接受订单以及接受哪些订单做出一些更加精细化的控制. 例如, 有些 sp 可能希望只接受来自特定 peer 的订单, 或者只接受来自特定 peer 的订单, 并且订单的价格必须在某个范围内.\n\n\n# 详情\n\n为了满足这些需求, 可以在 droplet 的配置文件中给特定的 miner 配置一个订单过滤器, 该过滤器在配置文件中的表现形式是一个表示一个 shell 命令的字符串, 每当 droplet 决定是否接受指向某个 miner 的订单时, 就会调用该命令, 并将 订单的信息 ( json 字符串) 作为命令的参数 (标准输入) 传递给该命令. 如果命令退出码为 0, 则表示接受该订单, 否则拒绝该订单.\n\n * exit with 0 : 接受订单\n * exit with non-0 : 拒绝订单\n\n\n# 订单信息\n\n * storage deal\n\n{\n"isoffline": false,\n"formatversion":      "1.0.0",\n"fastretrieval":        false,\n"transfertype" :        "manual",\n"clientdealproposal":{\n    "proposal": {\n    "piececid": {\n    "/": "baga6ea4seaqihx2pxanewwxvqwgeyrcmal7aomucelef52vhqy7qaarciamaqoq"\n    },\n    "piecesize": 2048,\n    "verifieddeal": false,\n    "client": "f3r3hr3xl27unpefvipve2f4hlfvdnq3forgr253z6dqahufvanatdandxm74zikheccvx74ys7by5vzafq2va",\n    "provider": "f01000",\n    "label": "bafk2bzacebiupsywspqnsvc5v7ing74i3u4y3r7wtgjioor7pqn3cxopq7lo4",\n    "startepoch": 18171,\n    "endepoch": 536571,\n    "storagepriceperepoch": "1",\n    "providercollateral": "0",\n    "clientcollateral": "0"\n    },\n    "clientsignature": {\n    "type": 2,\n    "data": "oenuul1wejrlawl3sp9o/tzyrzgpya86xmf3rmqt5bpqjbrk/5x3uxyxeukoidmje96fa1gsqfre14tfl/nmyatpluvzzz0ulsptqvwfb54mgx0ybsmytf/o8bg09mnq"\n    },\n},\n"dealtype": "storage",\n"agent": "droplet"\n}\n\n\n * retrivel deal\n\n{\n  "payloadcid": null,\n  "id": 0,\n  "selector": null,\n  "piececid": null,\n  "priceperbyte": "\\u003cnil\\u003e",\n  "paymentinterval": 0,\n  "paymentintervalincrease": 0,\n  "unsealprice": "\\u003cnil\\u003e",\n  "storeid": 0,\n  "selstorageproposalcid": null,\n  "channelid": null,\n  "status": 0,\n  "receiver": "",\n  "totalsent": 0,\n  "fundsreceived": "\\u003cnil\\u003e",\n  "message": "",\n  "currentinterval": 0,\n  "legacyprotocol": false,\n  "createdat": 0,\n  "updatedat": 0,\n  "dealtype": "retrieval"\n}\n\n\n\n# 示例\n\n# storage deal\nfilter = ""\n\n# retrieval deal\nretrievalfilter = ""\n\n\n * 例子: 最简单的订单过滤器\n\n# 拒绝所有订单\nfilter = "exit 1"\n\n# 接受所有订单\nfilter = "exit 0"\n\n\n * 例子: 只接受来自 f01000 的订单\n\nfilter = "jq -r \'.clientdealproposal.proposal.provider\' | grep -q \'^f01000$\'"\n\n\n * 例子: 只接受来自 f1aaaaaaaaaaaaaaaaaaaaaaaaa 、 f1bbbbbbbbbbbbbbbbbbbbbbbbb 和 f1ccccccccccccccccccccccccc 地址发送过来的订单\n\nfilter = "jq -e \'.proposal.client == \\"f1aaaaaaaaaaaaaaaaaaaaaaaaa\\" or .proposal.client == \\"f1bbbbbbbbbbbbbbbbbbbbbbbbb\\" or .proposal.client == \\"f1ccccccccccccccccccccccccc\\"\'"\n\n\n * 例子: 使用 python 脚本\n\n# config.toml\nfilter = "python3 /path/to/filter.py"\n\n\n# filter.py\nimport json\nimport sys\n\ntry:\n    json_str = sys.stdin.read()\n    data = json.loads(json_str)\n\n    if data["clientdealproposal"][\'proposal\'][\'piecesize\'] < 2048:\n        print("")\n        sys.exit(0)\n    else:\n        print("piecesize is greater than or equal to 2048. exiting with code 1.")\n        sys.exit(1)\nexcept exception as e:\n    print("an error occurred: ", e)\n    sys.exit(1)\n',charsets:{cjk:!0}},{title:"datacap 续期",frontmatter:{},regularPath:"/zh/operation/extend-claim.html",relativePath:"zh/operation/extend-claim.md",key:"v-60d2eb25",path:"/zh/operation/extend-claim.html",headers:[{level:2,title:"续期命令",slug:"续期命令",normalizedTitle:"续期命令",charIndex:82}],headersStr:"续期命令",content:"# datacap 续期\n\ndatacap 续期目的是调整 datacap 的最大期限时间，但最大期限时间不能超过 5 年（5256000 epoch）。\n\n\n# 续期命令\n\n 1. 手动指定 claim id，并设置新的最大期限时间和存储提供者（provider）\n\n# --from 需使用 datacap 地址，为空则使用 droplet client 默认地址\n# --max-term 新的最大期限时间\n./droplet-client datacap extend --max-term 1909497 --from <address> --claimId 1 <address>\n\neg.\n./droplet-client datacap extend --max-term 1909497 --from t3wp7bkktkeybm42kvxtyuqsmod262fmwn7zuo3nf3xll34xaokhm4n4x5rgivwg6fcu2mnjecourodjmil3fq --claimId 1 --claimId 2 t01000\n\n\n可以通过命令来查看存储提供者的 claim：\n\n./droplet-client datacap list-claim <address>\n\neg.\n./droplet-client datacap list-claim t01000\n\n\n 2. 自动选择符合要求的 datacap\n\n# --from 需使用 datacap 地址，为空则使用 droplet client 默认地址\n# --max-term 新的最大期限时间\n# --expiration-cutoff 忽略过期时间大于 cutoff 的 datacap，例：如果 cutoff 的值为 2880（一天），则会对过期时间小于一天的 datacap 进行续期\n./droplet-client datacap extend --max-term 1909697 --from <address> --auto --expiration-cutoff 2880 <address>\n\neg.\n./droplet-client datacap extend --max-term 1909597 --from t3wp7bkktkeybm42kvxtyuqsmod262fmwn7zuo3nf3xll34xaokhm4n4x5rgivwg6fcu2mnjecourodjmil3fq --auto --expiration-cutoff 2880 t01000\n",normalizedContent:"# datacap 续期\n\ndatacap 续期目的是调整 datacap 的最大期限时间，但最大期限时间不能超过 5 年（5256000 epoch）。\n\n\n# 续期命令\n\n 1. 手动指定 claim id，并设置新的最大期限时间和存储提供者（provider）\n\n# --from 需使用 datacap 地址，为空则使用 droplet client 默认地址\n# --max-term 新的最大期限时间\n./droplet-client datacap extend --max-term 1909497 --from <address> --claimid 1 <address>\n\neg.\n./droplet-client datacap extend --max-term 1909497 --from t3wp7bkktkeybm42kvxtyuqsmod262fmwn7zuo3nf3xll34xaokhm4n4x5rgivwg6fcu2mnjecourodjmil3fq --claimid 1 --claimid 2 t01000\n\n\n可以通过命令来查看存储提供者的 claim：\n\n./droplet-client datacap list-claim <address>\n\neg.\n./droplet-client datacap list-claim t01000\n\n\n 2. 自动选择符合要求的 datacap\n\n# --from 需使用 datacap 地址，为空则使用 droplet client 默认地址\n# --max-term 新的最大期限时间\n# --expiration-cutoff 忽略过期时间大于 cutoff 的 datacap，例：如果 cutoff 的值为 2880（一天），则会对过期时间小于一天的 datacap 进行续期\n./droplet-client datacap extend --max-term 1909697 --from <address> --auto --expiration-cutoff 2880 <address>\n\neg.\n./droplet-client datacap extend --max-term 1909597 --from t3wp7bkktkeybm42kvxtyuqsmod262fmwn7zuo3nf3xll34xaokhm4n4x5rgivwg6fcu2mnjecourodjmil3fq --auto --expiration-cutoff 2880 t01000\n",charsets:{cjk:!0}},{title:"模拟官方机器人 HTTP 方式检索",frontmatter:{},regularPath:"/zh/operation/http-retrieval.html",relativePath:"zh/operation/http-retrieval.md",key:"v-2e3997e5",path:"/zh/operation/http-retrieval.html",headers:[{level:2,title:"开启 HTTP 检索",slug:"开启-http-检索",normalizedTitle:"开启 http 检索",charIndex:163},{level:3,title:"通过 HTTP 请求验证检索功能",slug:"通过-http-请求验证检索功能",normalizedTitle:"通过 http 请求验证检索功能",charIndex:611},{level:3,title:"通过 RetrievalBot 工具验证检索功能",slug:"通过-retrievalbot-工具验证检索功能",normalizedTitle:"通过 retrievalbot 工具验证检索功能",charIndex:735}],headersStr:"开启 HTTP 检索 通过 HTTP 请求验证检索功能 通过 RetrievalBot 工具验证检索功能",content:'# 模拟官方机器人 HTTP 方式检索\n\n目前常见的检索方式 GraphSync、HTTP、Bitswap 三种，droplet 默认使用的是 GraphSync 方式，在 v2.8.0 版本之后，也支持 HTTP 方式。由于 HTTP 是无状态的请求数据，在检索时无需要建立大量索引的特性，对于检索成功率提升较高。\n\n\n# 开启 HTTP 检索\n\n除了需要将 Libp2p 的端口公网映射出去，用于 GraphSync 接单和检索使用；droplet 还需要将 ListenAddress 的 41235 端口映射出去 (可以自定义，在配置文件中修改即可)，用于 HTTP 方式的检索使用。\n\n在 .droplet/config.toml 中，配置 HTTPRetrievalMultiaddr 的公网地址，用于向检索的客户端发送订单的 piece 数据。\n\n[CommonProvider]\n  HTTPRetrievalMultiaddr = "/ip4/公网IP地址/tcp/41235/http"\n  ConsiderOnlineStorageDeals = false\n  ConsiderOfflineStorageDeals = false\n  ConsiderOnlineRetrievalDeals = true\n  ConsiderOfflineRetrievalDeals = true\n\n\n\n# 通过 HTTP 请求验证检索功能\n\ncurl http://公网IP:41235/piece/baga6ea4sexxxxxx --output /tmp/test\n\n\n如果可以正常下载到 piece，则说明 HTTP 方式的检索配置成功\n\n\n# 通过 RetrievalBot 工具验证检索功能\n\ngit clone https://github.com/simlecode/RetrievalBot.git\ngit checkout feat/simple-http\nmake\n\n\n 1. 确保 droplet 已经开启 HTTP 检索；\n 2. 配置 RetrievalBot。 先通过 droplet actor info --miner f0xxxx 获取 RetrievalBot 工具需要的 PeerID 和 Multiaddrs。\n\nRetrievalBot 配置文件示例如下:\n\n# http_retrieval.toml\n\n# miner id\nID = "f0xxxx"\n# miner peer\nPeerID = "12D3KooWBvPWkWLEHbr7iwDUs8CMQ8j2V85keakBZunP3YMZ9SEk"\n#\nMultiaddrs = ["/ip4/1.182.90.10/tcp/48027"]\n# piece cids\nPieces = [\n    "baga6ea4seaqd65uw3tksjc5nilba5fmy4swlbchwx4k47cpe3slba37z7o26cga",\n]\n\n\n使用 ./http_worker 进行验证\n\n返回值为 miner f0xxx retrieval bagaxxxxxoa success 则说明支持 HTTP 方式检索',normalizedContent:'# 模拟官方机器人 http 方式检索\n\n目前常见的检索方式 graphsync、http、bitswap 三种，droplet 默认使用的是 graphsync 方式，在 v2.8.0 版本之后，也支持 http 方式。由于 http 是无状态的请求数据，在检索时无需要建立大量索引的特性，对于检索成功率提升较高。\n\n\n# 开启 http 检索\n\n除了需要将 libp2p 的端口公网映射出去，用于 graphsync 接单和检索使用；droplet 还需要将 listenaddress 的 41235 端口映射出去 (可以自定义，在配置文件中修改即可)，用于 http 方式的检索使用。\n\n在 .droplet/config.toml 中，配置 httpretrievalmultiaddr 的公网地址，用于向检索的客户端发送订单的 piece 数据。\n\n[commonprovider]\n  httpretrievalmultiaddr = "/ip4/公网ip地址/tcp/41235/http"\n  consideronlinestoragedeals = false\n  considerofflinestoragedeals = false\n  consideronlineretrievaldeals = true\n  considerofflineretrievaldeals = true\n\n\n\n# 通过 http 请求验证检索功能\n\ncurl http://公网ip:41235/piece/baga6ea4sexxxxxx --output /tmp/test\n\n\n如果可以正常下载到 piece，则说明 http 方式的检索配置成功\n\n\n# 通过 retrievalbot 工具验证检索功能\n\ngit clone https://github.com/simlecode/retrievalbot.git\ngit checkout feat/simple-http\nmake\n\n\n 1. 确保 droplet 已经开启 http 检索；\n 2. 配置 retrievalbot。 先通过 droplet actor info --miner f0xxxx 获取 retrievalbot 工具需要的 peerid 和 multiaddrs。\n\nretrievalbot 配置文件示例如下:\n\n# http_retrieval.toml\n\n# miner id\nid = "f0xxxx"\n# miner peer\npeerid = "12d3koowbvpwkwlehbr7iwdus8cmq8j2v85keakbzunp3ymz9sek"\n#\nmultiaddrs = ["/ip4/1.182.90.10/tcp/48027"]\n# piece cids\npieces = [\n    "baga6ea4seaqd65uw3tksjc5nilba5fmy4swlbchwx4k47cpe3slba37z7o26cga",\n]\n\n\n使用 ./http_worker 进行验证\n\n返回值为 miner f0xxx retrieval bagaxxxxxoa success 则说明支持 http 方式检索',charsets:{cjk:!0}},{title:"droplet-client 配置解释",frontmatter:{},regularPath:"/zh/operation/market-client-config.html",relativePath:"zh/operation/market-client-config.md",key:"v-001fe8e5",path:"/zh/operation/market-client-config.html",headers:[{level:2,title:"网络配置",slug:"网络配置",normalizedTitle:"网络配置",charIndex:957},{level:3,title:"[API]",slug:"api",normalizedTitle:"[api]",charIndex:264},{level:3,title:"[Libp2p]",slug:"libp2p",normalizedTitle:"[libp2p]",charIndex:378},{level:2,title:"venus 组件服务配置",slug:"venus-组件服务配置",normalizedTitle:"venus 组件服务配置",charIndex:1713},{level:3,title:"[Node]",slug:"node",normalizedTitle:"[node]",charIndex:522},{level:3,title:"[Messager]",slug:"messager",normalizedTitle:"[messager]",charIndex:718},{level:3,title:"[Signer]",slug:"signer",normalizedTitle:"[signer]",charIndex:889},{level:2,title:"其他配置",slug:"其他配置",normalizedTitle:"其他配置",charIndex:977}],headersStr:"网络配置 [API] [Libp2p] venus 组件服务配置 [Node] [Messager] [Signer] 其他配置",content:'# droplet-client 配置解释\n\ndroplet-client 的一份典型的配置如下\n\nSimultaneousTransfersForRetrieval = 20\nSimultaneousTransfersForStorage = 20\n\n[DefaultMarketAddress]\n  Addr = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q"\n  Account = ""\n\n[API]\n  ListenAddress = "/ip4/127.0.0.1/tcp/41231/ws"\n  RemoteListenAddress = ""\n  Secret = ""\n  Timeout = "30s"\n\n[Libp2p]\n  ListenAddresses = ["/ip4/0.0.0.0/tcp/34123", "/ip6/::/tcp/0"]\n  AnnounceAddresses = []\n  NoAnnounceAddresses = []\n  PrivateKey = ""\n\n[Node]\n  Url = "/ip4/192.168.200.106/tcp/3453"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Messager]\n  Url = ""\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Signer]\n  Type = ""\n  Url = ""\n  Token = ""\n\n\n\n其中，可以分成三个部分： client 网络配置，venus 服务组件的配置和 其他配置\n\n\n# 网络配置\n\n这部分的配置决定了 venus client 和外界交互的接口\n\n\n# [API]\n\ndroplet-client 对外提供服务的接口\n\n[API]\n# droplet-client 提供服务监听的地址\n# 字符串类型，必选项，默认为:"/ip4/127.0.0.1/tcp/41235"\nListenAddress = "/ip4/127.0.0.1/tcp/41235"\n\n# 保留字段\nRemoteListenAddress = ""\n\n# 密钥用于加密通信\n# 字符串类型，可选项，没有则自动生成\nSecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# 保留字段\nTimeout = "30s"\n\n\n\n# [Libp2p]\n\n在P2P网络中通信时使用的 通信地址\n\n[Libp2p]\n# 监听的网络地址\n# 字符串数组，必选，默认为:["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# 保留字段\nAnnounceAddresses = []\n\n# 保留字段\nNoAnnounceAddresses = []\n\n# 用于p2p加密通信的私钥\n# 字符串，可选，没设置则自动生成\nPrivateKey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus 组件服务配置\n\n当 droplet-client 接入 venus 组件使用时，需要配置相关组件的 API。\n\n\n# [Node]\n\nvenus链服务接入配置\n\n[Node]\n# 链服务的入口\n# 字符串类型，必选，也可以直接通过命令行的--node-url flag 进行配置\nUrl = "/ip4/192.168.200.128/tcp/3453"\n\n# venus 系列组件的鉴权token\n# 字符串类型，必选，也可以直接通过命令行的 --auth-token flag 进行配置\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n\n# [Messager]\n\nvenus 消息服务接入配置\n\n[Messager]\n# 消息服务入口\n# 字符串类型，必选，也可以直接通过命令行的 --messager-url flag 进行配置\nUrl = "/ip4/192.168.200.128/tcp/39812/"\n\n# venus 系列组件的鉴权token\n# 字符串类型，必选，也可以直接通过命令行的 --auth-token flag 进行配置\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# [Signer]\n\nvenus 提供签名服务的组件 在 droplet-client 只能使用 wallet 类型的签名服务\n\n[Signer]\n# 签名服务组件的类型\n# 字符串类型，"wallet"或者"lotusnode"两种类型\nType = "wallet"\n\n# 签名服务入口\n# 字符串类型，必选，也可以直接通过命令行的 --signer-url flag 进行配置\nUrl = "/ip4/192.168.200.128/tcp/5678/"\n\n# wallet 用于鉴权的token\n# 字符串类型，必选\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# 其他配置\n\n# 获取数据订单进行同时传输的最大数量\n# 整数类型，默认：20\nSimultaneousTransfersForRetrieval = 20\n\n# 存储订单同时进行传输的最大数量\n# 整数类型，默认：20\nSimultaneousTransfersForStorage = 20\n\n# 当前droplet-client的默认地址\n# 字符串类型，可选，也可以直接通过命令行的 --addr flag 进行配置\nDefaultMarketAddress = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q:username"\n',normalizedContent:'# droplet-client 配置解释\n\ndroplet-client 的一份典型的配置如下\n\nsimultaneoustransfersforretrieval = 20\nsimultaneoustransfersforstorage = 20\n\n[defaultmarketaddress]\n  addr = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q"\n  account = ""\n\n[api]\n  listenaddress = "/ip4/127.0.0.1/tcp/41231/ws"\n  remotelistenaddress = ""\n  secret = ""\n  timeout = "30s"\n\n[libp2p]\n  listenaddresses = ["/ip4/0.0.0.0/tcp/34123", "/ip6/::/tcp/0"]\n  announceaddresses = []\n  noannounceaddresses = []\n  privatekey = ""\n\n[node]\n  url = "/ip4/192.168.200.106/tcp/3453"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiywrtaw4ilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.0fylymsnjp8dktrclykfqsjo9fokdkxrl5dqgpmdaoe"\n\n[messager]\n  url = ""\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiywrtaw4ilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.0fylymsnjp8dktrclykfqsjo9fokdkxrl5dqgpmdaoe"\n\n[signer]\n  type = ""\n  url = ""\n  token = ""\n\n\n\n其中，可以分成三个部分： client 网络配置，venus 服务组件的配置和 其他配置\n\n\n# 网络配置\n\n这部分的配置决定了 venus client 和外界交互的接口\n\n\n# [api]\n\ndroplet-client 对外提供服务的接口\n\n[api]\n# droplet-client 提供服务监听的地址\n# 字符串类型，必选项，默认为:"/ip4/127.0.0.1/tcp/41235"\nlistenaddress = "/ip4/127.0.0.1/tcp/41235"\n\n# 保留字段\nremotelistenaddress = ""\n\n# 密钥用于加密通信\n# 字符串类型，可选项，没有则自动生成\nsecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# 保留字段\ntimeout = "30s"\n\n\n\n# [libp2p]\n\n在p2p网络中通信时使用的 通信地址\n\n[libp2p]\n# 监听的网络地址\n# 字符串数组，必选，默认为:["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nlistenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# 保留字段\nannounceaddresses = []\n\n# 保留字段\nnoannounceaddresses = []\n\n# 用于p2p加密通信的私钥\n# 字符串，可选，没设置则自动生成\nprivatekey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus 组件服务配置\n\n当 droplet-client 接入 venus 组件使用时，需要配置相关组件的 api。\n\n\n# [node]\n\nvenus链服务接入配置\n\n[node]\n# 链服务的入口\n# 字符串类型，必选，也可以直接通过命令行的--node-url flag 进行配置\nurl = "/ip4/192.168.200.128/tcp/3453"\n\n# venus 系列组件的鉴权token\n# 字符串类型，必选，也可以直接通过命令行的 --auth-token flag 进行配置\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n\n# [messager]\n\nvenus 消息服务接入配置\n\n[messager]\n# 消息服务入口\n# 字符串类型，必选，也可以直接通过命令行的 --messager-url flag 进行配置\nurl = "/ip4/192.168.200.128/tcp/39812/"\n\n# venus 系列组件的鉴权token\n# 字符串类型，必选，也可以直接通过命令行的 --auth-token flag 进行配置\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# [signer]\n\nvenus 提供签名服务的组件 在 droplet-client 只能使用 wallet 类型的签名服务\n\n[signer]\n# 签名服务组件的类型\n# 字符串类型，"wallet"或者"lotusnode"两种类型\ntype = "wallet"\n\n# 签名服务入口\n# 字符串类型，必选，也可以直接通过命令行的 --signer-url flag 进行配置\nurl = "/ip4/192.168.200.128/tcp/5678/"\n\n# wallet 用于鉴权的token\n# 字符串类型，必选\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# 其他配置\n\n# 获取数据订单进行同时传输的最大数量\n# 整数类型，默认：20\nsimultaneoustransfersforretrieval = 20\n\n# 存储订单同时进行传输的最大数量\n# 整数类型，默认：20\nsimultaneoustransfersforstorage = 20\n\n# 当前droplet-client的默认地址\n# 字符串类型，可选，也可以直接通过命令行的 --addr flag 进行配置\ndefaultmarketaddress = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q:username"\n',charsets:{cjk:!0}},{title:"droplet 的配置解释",frontmatter:{},regularPath:"/zh/operation/market-config.html",relativePath:"zh/operation/market-config.md",key:"v-4150d23d",path:"/zh/operation/market-config.html",headers:[{level:3,title:"常用配置项说明",slug:"常用配置项说明",normalizedTitle:"常用配置项说明",charIndex:20},{level:3,title:"一份典型的 droplet 全量配置",slug:"一份典型的-droplet-全量配置",normalizedTitle:"一份典型的 droplet 全量配置",charIndex:2888},{level:2,title:"全量配置说明",slug:"全量配置说明",normalizedTitle:"全量配置说明",charIndex:7480},{level:3,title:"数据传输参数配置",slug:"数据传输参数配置",normalizedTitle:"数据传输参数配置",charIndex:2917},{level:3,title:"基础参数配置",slug:"基础参数配置",normalizedTitle:"基础参数配置",charIndex:3069},{level:3,title:"droplet  网络配置",slug:"droplet-网络配置",normalizedTitle:"droplet  网络配置",charIndex:null},{level:3,title:"venus 组件服务配置",slug:"venus-组件服务配置",normalizedTitle:"venus 组件服务配置",charIndex:5381},{level:3,title:"矿工配置",slug:"矿工配置",normalizedTitle:"矿工配置",charIndex:12332},{level:3,title:"数据库配置",slug:"数据库配置",normalizedTitle:"数据库配置",charIndex:13632},{level:3,title:"扇区存储配置",slug:"扇区存储配置",normalizedTitle:"扇区存储配置",charIndex:14118},{level:3,title:"日志设置",slug:"日志设置",normalizedTitle:"日志设置",charIndex:6693},{level:3,title:"DAG存储设置",slug:"dag存储设置",normalizedTitle:"dag存储设置",charIndex:6746},{level:3,title:"数据检索",slug:"数据检索",normalizedTitle:"数据检索",charIndex:6975},{level:3,title:"[RetrievalPaymentAddress]",slug:"retrievalpaymentaddress",normalizedTitle:"[retrievalpaymentaddress]",charIndex:15964},{level:3,title:"Metric 配置",slug:"metric-配置",normalizedTitle:"metric 配置",charIndex:7030}],headersStr:"常用配置项说明 一份典型的 droplet 全量配置 全量配置说明 数据传输参数配置 基础参数配置 droplet  网络配置 venus 组件服务配置 矿工配置 数据库配置 扇区存储配置 日志设置 DAG存储设置 数据检索 [RetrievalPaymentAddress] Metric 配置",content:'# droplet 的配置解释\n\n\n# 常用配置项说明\n\n这里我们对比较常用的配置项进行说明。\n\n# 链服务配置\n\n * 包括：同步节点，消息节点，签名节点及授权节点。\n\n[ChainService]\n  Url =  "/ip4/192.168.200.21/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[Node]\n  Url = "/ip4/192.168.200.21/tcp/3453"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[Messager]\n  Url = "/ip4/192.168.200.21/tcp/39812"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[Signer]\n  Type = "gateway"\n  Url = "/ip4/192.168.200.21/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n[AuthNode]\n  Url = "http://192.168.200.21:8989"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n\n\n# API 监听配置\n\ndroplet 默认监听端口为 127.0.0.1:41235, 为了支持不同网络的访问请求, 需要修改API的监听地址:\n\n[API]\nListenAddress = "/ip4/0.0.0.0/tcp/41235"\n\n\n# PublishMsgPeriod 配置\n\ndroplet 在收到 droplet-client 的订单时, 并不会马上就发布 ClientDealProposal 消息,会等待一定的时间, 由配置文件中的 PublishMsgPeriod 项来控制，在测试时可以将此项设置为较小值减少等待时间。下面的设置，将等待时间设置为10秒。\n\nPublishMsgPeriod = "10s"\n\n\n# PieceStorage 配置\n\n目前 droplet 支持两种 Piece 数据的存储模式：\n\n * 文件系统\n * 对象存储\n\n[PieceStorage]\n  [[PieceStorage.Fs]]\n    Name = "local"\n    Enable = true\n    Path = "/mnt/pieces"\n  [[PieceStorage.S3]]\n    Name = "oss"\n    Enable = false\n    EndPoint = ""\n    AccessKey = ""\n    SecretKey = ""\n    Token = ""\n\n\n也可以通过命令配置，命令设置不需要重启进程。命令设置后会更新配置文件：\n\n# 本地文件系统存储\n./droplet piece-storage add-fs --path="/piece/storage/path" --name="local"\n\n# 对象存储\n./droplet piece-storage add-s3 --endpoint=<url> --name="oss"\n\n\n# Miners 配置\n\ndroplet 服务的矿工及每个矿工的参数，配置如下：\n\n[[Miners]]\n  Addr = "f01000"\n  Account = "testuser01"\n  \n  ConsiderOnlineStorageDeals = true\n  ConsiderOfflineStorageDeals = true\n  ConsiderOnlineRetrievalDeals = true\n  ConsiderOfflineRetrievalDeals = true\n  ConsiderVerifiedStorageDeals = true\n  ConsiderUnverifiedStorageDeals = true\n  PieceCidBlocklist = []\n  ExpectedSealDuration = "24h0m0s"\n  MaxDealStartDelay = "336h0m0s"\n  PublishMsgPeriod = "1h0m0s"\n  MaxDealsPerPublishMsg = 8\n  MaxProviderCollateralMultiplier = 2\n  Filter = ""\n  RetrievalFilter = ""\n  TransferPath = ""\n  MaxPublishDealsFee = "0 FIL"\n  MaxMarketBalanceAddFee = "0 FIL"\n  [CommonProviderConfig.RetrievalPricing]\n    Strategy = "default"\n    [CommonProviderConfig.RetrievalPricing.Default]\n      VerifiedDealsFreeTransfer = true\n    [CommonProviderConfig.RetrievalPricing.External]\n      Path = ""\n    [CommonProviderConfig.AddressConfig]\n      DisableWorkerFallback = false\n\n\nTIP\n\n如果有多个矿工，将上述配置拷贝一份即可。如果矿工比较多，那配置文件会很长，后续会考虑优化\n\n\n# 一份典型的 droplet 全量配置\n\n# ****** 数据传输参数配置 ********\nSimultaneousTransfersForStorage = 20\nSimultaneousTransfersForStoragePerClient = 20\nSimultaneousTransfersForRetrieval = 20\n\n# ****** 全局基础参数配置 ********\n[CommonProvider]\n  ConsiderOnlineStorageDeals = true\n  ConsiderOfflineStorageDeals = true\n  ConsiderOnlineRetrievalDeals = true\n  ConsiderOfflineRetrievalDeals = true\n  ConsiderVerifiedStorageDeals = true\n  ConsiderUnverifiedStorageDeals = true\n  PieceCidBlocklist = []\n  ExpectedSealDuration = "24h0m0s"\n  MaxDealStartDelay = "336h0m0s"\n  PublishMsgPeriod = "1h0m0s"\n  MaxDealsPerPublishMsg = 8\n  MaxProviderCollateralMultiplier = 2\n  Filter = ""\n  RetrievalFilter = ""\n  TransferPath = ""\n  MaxPublishDealsFee = "0 FIL"\n  MaxMarketBalanceAddFee = "0 FIL"\n  RetrievalPaymentAddress = ""\n  DealPublishAddress = []\n  [CommonProvider.RetrievalPricing]\n    Strategy = "default"\n    [CommonProvider.RetrievalPricing.Default]\n      VerifiedDealsFreeTransfer = true\n    [CommonProvider.RetrievalPricing.External]\n      Path = ""\n    \n\n# 每个矿工可以有独立的基础参数，没有配置时使用全局配置，配置方式如下：\n\n# ****** miner基础参数配置 ********\n[[Miners]]\n  Addr = "f01000"\n  Account = "testuser01"\n  \n   ConsiderOnlineStorageDeals = true\n   ConsiderOfflineStorageDeals = true\n   ConsiderOnlineRetrievalDeals = true\n   ConsiderOfflineRetrievalDeals = true\n   ConsiderVerifiedStorageDeals = true\n   ConsiderUnverifiedStorageDeals = true\n   PieceCidBlocklist = []\n   ExpectedSealDuration = "24h0m0s"\n   MaxDealStartDelay = "336h0m0s"\n   PublishMsgPeriod = "1h0m0s"\n   MaxDealsPerPublishMsg = 8\n   MaxProviderCollateralMultiplier = 2\n   Filter = ""\n   RetrievalFilter = ""\n   TransferPath = "/mnt/transfer"\n   MaxPublishDealsFee = "0 FIL"\n   MaxMarketBalanceAddFee = "0 FIL"\n   RetrievalPaymentAddress = ""\n   DealPublishAddress = []\n   [CommonProvider.RetrievalPricing]\n     Strategy = "default"\n     [CommonProvider.RetrievalPricing.Default]\n       VerifiedDealsFreeTransfer = true\n     [CommonProvider.RetrievalPricing.External]\n       Path = ""\n\n# ****** droplet 网络配置  ********\n[API]\n  ListenAddress = "/ip4/127.0.0.1/tcp/41235"\n  RemoteListenAddress = ""\n  Secret = "e647ee23cf95424162b974cd641b6a6479cbc7cb1209cc755f762c8248d50ba4"\n  Timeout = "30s"\n\n[Libp2p]\n  ListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n  AnnounceAddresses = []\n  NoAnnounceAddresses = []\n  PrivateKey = "08011240d47934b6fccf8b79786335a55ccc04bdb9c92866cae2c0cea2fdefe0f2e7c18650dfbde5dd126c2a23a0d1c60686d3dedd064b67ba97c6161dd8007f0675e1a9"\n\n\n# ****** venus 组件服务配置 ********\n[ChainService]\n  Url =  "/ip4/192.168.200.21/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n\n[Node]\n  Url = "/ip4/192.168.200.151/tcp/3453"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[Messager]\n  Url = "/ip4/127.0.0.1/tcp/39812"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[Signer]\n  Type = "gateway"\n  Url = "/ip4/127.0.0.1/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n[AuthNode]\n  Url = "http://127.0.0.1:8989"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoidGVzdC11c2VyMDEiLCJwZXJtIjoic2lnbiIsImV4dCI6IiJ9.ETjNy3HMDS3ScZ3cax9xYb6AopNWYp4y71lZGCvYxMg"\n\n#  ******** 数据库设置 ********\n[Mysql]\nConnectionString = ""\nMaxOpenConn = 100\nMaxIdleConn = 100\nConnMaxLifeTime = "1m"\nDebug = false\n\n# ******** 扇区存储设置 ********\n[PieceStorage]\nS3 = []\n\n[[PieceStorage.Fs]]\nName = "local"\nReadOnly = false\nPath = "./.vscode/test"\n\n# ******** 日志设置 ********\n[Journal]\nPath = "journal"\n\n# ******** DAG存储设置 ********\n[DAGStore]\nRootDir = "/root/.droplet/dagstore"\nMaxConcurrentIndex = 5\nMaxConcurrentReadyFetches = 0\nMaxConcurrencyStorageCalls = 100\nGCInterval = "1m0s"\nTransient = ""\nIndex = ""\nUseTransient = false\n\n# ******** 数据检索配置 ********\nRetrievalPaymentAddress = ""\n\n# ****** Metric 配置 ********\n[Metrics]\n  Enabled = false\n  [Metrics.Exporter]\n    Type = "prometheus"\n    [Metrics.Exporter.Prometheus]\n      RegistryType = "define"\n      Namespace = ""\n      EndPoint = "/ip4/0.0.0.0/tcp/4568"\n      Path = "/debug/metrics"\n      ReportingPeriod = "10s"\n    [Metrics.Exporter.Graphite]\n      Namespace = ""\n      Host = "127.0.0.1"\n      Port = 4568\n      ReportingPeriod = "10s"\n\n\n接下来，将这个配置分成基础参数，网络配置，Venus组件配置等多个部分进行讲解\n\n\n# 全量配置说明\n\n\n# 数据传输参数配置\n\n# 存储订单的最大同时传输数目\n# 整数类型 默认为：20\nSimultaneousTransfersForStorage = 20\n\n# 针对每一个客户端的存储订单最大同时传输数目\n# 整数类型 默认为：20\nSimultaneousTransfersForStoragePerClient = 20\n\n# 获取数据最大同时传输数目\n# 整数类型 默认为：20\nSimultaneousTransfersForRetrieval = 20\n\n\n\n# 基础参数配置\n\n这部分的配置主要是决定了了 droplet 在进行工作时的偏好，满足定制化的需求，其中各项配置的作用如下：\n\n# 决定是否接受线上存储订单\n# 布尔值 默认为 true\nConsiderOnlineStorageDeals = true\n\n# 决定是否接受线下存储订单\n# 布尔值 默认为 true\nConsiderOfflineStorageDeals = true\n\n# 决定是否接受线上数据获取订单\n# 布尔值 默认为 true\nConsiderOnlineRetrievalDeals = true\n\n# 决定是否接受线下数据获取订单\n# 布尔值 默认为 true\nConsiderOfflineRetrievalDeals = true\n\n# 决定是否接受经过验证的存储订单\n# 布尔值 默认为 true\nConsiderVerifiedStorageDeals = true\n\n# 决定是否接受未经过验证的存储订单\n# 布尔值 默认为 true\nConsiderUnverifiedStorageDeals = true\n\n# 订单数据黑名单\n# 字符串数组 其中每一个字符串都是CID 默认为空\n# CID在黑名单中的数据，不会被用于构建订单\nPieceCidBlocklist = []\n\n# 订单数据被封装完成的最大时间预期\n# 时间字符串 默认为："24h0m0s"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\nExpectedSealDuration = "24h0m0s"\n\n# 预期订单封装开始前等待时间\n# 时间字符串 默认为："336h0m0s"\nMaxDealStartDelay = "336h0m0s"\n\n# 消息推送上链的周期\n# 时间字符串 默认为："1h0m0s"\nPublishMsgPeriod = "5m0s"\n\n# 在一个消息推送周期内的最大订数量\n# 整数类型 默认为8 \nMaxDealsPerPublishMsg = 8\n\n# 最大的存储供应商抵押乘法因子\n# 整数类型 默认为：2\nMaxProviderCollateralMultiplier = 2\n\n# 通过外部执行器来筛选存储订单,是可执行的程序或脚本\nFilter = ""\n\n# 通过外部执行器来筛选检索订单,是可执行的程序或脚本\nRetrievalFilter = ""\n\n# 订单传输数据的存储位置\n# 字符串类型 可选 为空值时默认使用`DROPLET_REPO`的路径\nTransferPath = ""\n\n# 发送订单消息的最大费用\n# FIL类型 默认为："0 FIL"\n# FIL类型字符串形式为 整数+" FIL"\nMaxPublishDealsFee = "0 FIL"\n\n# 发送增加抵押消息时花费的最大费用\n# FIL类型 默认为："0 FIL"\nMaxMarketBalanceAddFee = "0 FIL"\n\n# 保留字段，当前配置无效\n[RetrievalPricing]\n\n# 使用的策略类型\n# 字符串类型 可以选择"default"和"external"  默认为:"default"\n# 前者使用内置的默认策略，后者使用外部提供的脚本自定义的策略\nStrategy = "default"\n\n[RetrievalPricing.Default]\n\n# 对于经过认证的订单数据，是否定价为0\n# 布尔值 默认为 "true"\n# 只有Strategy = "default" 才会生效\nVerifiedDealsFreeTransfer = true\n\n[RetrievalPricing.External]\n# 定义外部策略的脚本的路径\n# 字符串类型 如果选择external策略时，必选\nPath = ""\n\n# 该设置为保留字段，当前无效\n[AddressConfig]\n\n# 是否降低使用woker地址发布消息的优先级，如果是，则只有在其他可选地址没有的情况下才会使用woker的地址发消息\n# 布尔值 默认为 false\nDisableWorkerFallback = false\n\n[[AddressConfig.DealPublishControl]]\n\n# 发布订单消息的地址\n# 字符串类型 必选\nAddr = ""\n\n# 持有相应地址的账户\n# 字符串类型 必选\nAccount =""\n\n\n\n# droplet 网络配置\n\n这部分的配置决定了 droplet 和外界交互的接口\n\n# [API]\n\ndroplet 对外提供服务的接口\n\n[API]\n# droplet 提供服务监听的地址\n# 字符串类型，必选项，默认为:"/ip4/127.0.0.1/tcp/41235"\nListenAddress = "/ip4/127.0.0.1/tcp/41235"\n\n# 保留字段\nRemoteListenAddress = ""\n\n# 密钥用于加密通信\n# 字符串类型 可选项（没有则自动生成）\nSecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# 保留字段\nTimeout = "30s"\n\n\n# [Libp2p]\n\ndroplet 在P2P网络中通信时使用的 通信地址\n\n[Libp2p]\n# 监听的网络地址\n# 字符串数组 必选 默认为:["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# 保留字段\nAnnounceAddresses = []\n\n# 保留字段\nNoAnnounceAddresses = []\n\n# 用于生成p2p节点的peerid\n# 字符串 可选（没设置则自动生成）\nPrivateKey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus 组件服务配置\n\n当 droplet 接入venus组件使用时，需要配置相关组件的API。\n\n# [ChainService]\n\nvenus 链服务统一入口配置。 该配置项的 Url 和 Token 会成为后续配置项 Node , Messager 以及 AuthNode 的默认值\n\n[ChainService]\n  Url =  "/ip4/192.168.200.21/tcp/45132"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiemwiLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.3u-PInSUmX-8f6Z971M7JBCHYgFVQrvwUjJfFY03ouQ"\n\n\n# [Node]\n\nvenus链同步节点接入配置\n\n[Node]\n# 链服务的入口\n# 字符串类型 必选（也可以直接通过命令行的--node-url flag 进行配置）\nUrl = "/ip4/192.168.200.128/tcp/3453"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# [Messager]\n\nvenus 消息服务接入配置\n\n[Messager]\n# 消息服务入口\n# 字符串类型 可选（也可以直接通过命令行的 --messager-url flag 进行配置） 不接入链服务时可不填\nUrl = "/ip4/192.168.200.128/tcp/39812/"\n\n# venus 系列组件的鉴权token\n# 字符串类型 可选（也可以直接通过命令行的 --auth-token flag 进行配置） 不接入链服务时可不填\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n# [Signer]\n\nvenus 提供签名服务的组件，它可以由两种类型：由venus-wallet直接提供的签名服务和由sophon-gateway提供的间接签名服务\n\n[Signer]\n# 签名服务组件的类型\n# 字符串类型  枚举："gateway"，"wallet"，"lotusnode"\nType = "gateway"\n\n# 签名服务入口\n# 字符串类型 必选（也可以直接通过命令行的 --signer-url flag 进行配置）\nUrl = "/ip4/192.168.200.128/tcp/45132/"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n# [AuthNode]\n\nvenus 提供鉴权服务接入配置\n\n[AuthNode]\n\n# 鉴权服务入口\n# 字符串类型 可选（也可以直接通过命令行的 --signer-url flag 进行配置） 不接入链服务时可不填\nUrl = "http://192.168.200.128:8989"\n\n# venus 系列组件的鉴权token\n# 字符串类型 可选（也可以直接通过命令行的 --auth-token flag 进行配置） 不接入链服务时可不填\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n\n\n# 矿工配置\n\n预置矿工信息\n\n[[Miners]]\n# 矿工的地址\n# 字符串类型 必选\nAddr ="f01000"\n\n# 账户名，可以随意设定\n# 字符串类型 可选\nAccount = ""\n\n# 基础参数，见上文\n\n\nTIP\n\n基础参数在不配置时将会使用 CommonProvider, 如下:\n\n[[Miners]]\n  Addr = "f02472"\n  Account = "litao"\n\n\n基础参数一旦配置了一项,则所有项都必须自己配置,比如配置:\n\n[[Miners]]\n  Addr = "f02472"\n  Account = "litao"\n  TransferPath = "/mnt/transfer/2472"\n\n\n这样的配置会导致基础参数中的其他配置项都去各自类型的零值,而不会用 CommonProvider 中的配置， 如 f02472 对应的 ConsiderOnlineStorageDeals 等于 false, 而并非是 CommonProvider 中的 true.\n\n这一点需要特别注意,正确的配置方式:\n\n[[Miners]]\n  Addr = "f02472"\n  Account = "litao"\n  TransferPath = "/mnt/transfer/2472"\n  ConsiderOnlineStorageDeals = true\n  ConsiderOfflineStorageDeals = true\n  ConsiderOnlineRetrievalDeals = true\n  ConsiderOfflineRetrievalDeals = true\n  ConsiderVerifiedStorageDeals = true\n  ConsiderUnverifiedStorageDeals = true\n  PieceCidBlocklist = []\n  ExpectedSealDuration = "24h0m0s"\n  MaxDealStartDelay = "336h0m0s"\n  PublishMsgPeriod = "1m0s"\n  MaxDealsPerPublishMsg = 8\n  MaxProviderCollateralMultiplier = 2\n  Filter = ""\n  RetrievalFilter = ""\n  MaxPublishDealsFee = "0 FIL"\n  MaxMarketBalanceAddFee = "0 FIL"\n  RetrievalPaymentAddress = ""\n  [RetrievalPricing]\n    Strategy = "default"\n    [RetrievalPricing.Default]\n      VerifiedDealsFreeTransfer = true\n    [RetrievalPricing.External]\n      Path = ""\n\n\n这样不是很灵活,以后会考虑优化.\n\n\n# 数据库配置\n\ndroplet 运行过程中产生的数据的存储数据库的设置 目前支持BadgerDB和MySQLDB，默认使用BadgerDB\n\n# [Mysql]\n\nMySQLDB的配置\n\n[Mysql]\n\n# 用于连接MySQL数据库的 connection string\n# 字符串类型 如果要使用 MySQL 数据库的话，这是必选，否则使用默认的BadgerDB\nConnectionString = ""\n\n# 打开连接的最大数量\n# 整数类型 默认为100\nMaxOpenConn = 100\n\n# 空闲连接的最大数量\n# 整数类型 默认为100\nMaxIdleConn = 100\n\n# 可复用连接的最大生命周期\n# 时间字符串 默认为："1m"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\nConnMaxLifeTime = "1m"\n\n# 是否输出数据库相关的调试信息\n# 布尔值 默认false\nDebug = false\n\n\n\n# 扇区存储配置\n\n配置 droplet 导入数据后生成的扇区的存储空间 支持使用两种类型的数据存储方式： 文件系统存储和对象存储\n\n# [[PieceStorage.Fs]]\n\n配置本地文件系统作为扇区存储 对于大量数据的扇区，建议挂载和Damocles共用的文件系统进行配置\n\n[PieceStorage]\n[[PieceStorage.Fs]]\n\n# 存储空间的名称，它在 `droplet` 的所有的存储空间中，必须是唯一的\n# 字符串类型 必选\nName = "local"\n\n# 该存储空间是否可写（ read only false 即为可写）\n# 布尔值 默认为 false\nReadOnly = false\n\n# 该存储空间在本地文件系统中的路径\n# 字符串类型 必选\nPath = "/piecestorage/"\n\n\n\n[PieceStorage]\n[[PieceStorage.S3]]\n# 存储空间的名称，它在 `droplet` 的所有的存储空间中，必须是唯一的\n# 字符串类型 必选\nName = "s3"\n\n# 该存储空间是否可写（ read only false 即为可写）\n# 布尔值 默认为 false\nReadOnly = true\n\n# 对象存储服务的入口\n# 字符串类型 必选\n# 支持单独的EndPoint（"oss-cn-shanghai.aliyuncs.com"）和完整的EndPoint Url（"http://oss-cn-shanghai.aliyuncs.com"）\nEndPoint = "oss-cn-shanghai.aliyuncs.com"\n\n# 对象存储服务的Bucket名称\n# 字符串类型 必选\nBucket = "droplet"\n\n# 指定在Bucket 中的子目录\n# 字符串类型 可选\nSubDir = "dir1/dir2"\n\n# 访问对象存储服务的参数\n# 字符串类型 其中AccessKey，SecretKey必选，token 可选\nAccessKey = "LTAI5t6HiFgsqN6eVJ......"\nSecretKey = "AlFNH9NakUsVjVRxMHaaYP7p......"\nToken = ""\n\n\n\n\n# 日志设置\n\n配置 droplet 使用过程中，产生日志存储的位置\n\n[Journal]\n\n# 日志存储的位置\n# 字符串类型 默认为："journal" (即`DROPLET_REPO`文件夹下面的journal文件夹)\nPath = "journal"\n\n\n\n# DAG存储设置\n\nDAG 数据存储的配置\n\n# 参考 github.com/filecoin-project/dagstore/dagstore.go\n[DAGStore]\n\n# DAG数据存储的根目录\n# 字符串类型 默认为： "<DROPLET_REPO_PATH>/dagstore"\nRootDir = "/root/.droplet/dagstore"\n\n# 可以同时进行索引作业的最大数量\n# 整数类型 默认为5 0表示不限制\nMaxConcurrentIndex = 5\n\n# 可以同时被抓取的最大未封装订单的数量\n# 整数类型 默认为0 0表示不限制\nMaxConcurrentReadyFetches = 0\n\n# 可以被同时调用的存储API的最大数量\n# 整数类型 默认为100\nMaxConcurrencyStorageCalls = 100\n\n# DAG 数据进行垃圾回收的时间间隔\n# 时间字符串 默认为："1m0s"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\nGCInterval = "1m0s"\n\n# 临时文件的存储路径\n# 字符串类型 可选 不设置则使用RooDir目录下的\'transients\'文件夹\nTransient = ""\n\n# 存储扇区索引数据的路径\n# 字符串类型 可选 不设置则使用RooDir目录下的\'index\'文件夹\nIndex = ""\n\n# 不使用本地缓存，直接读取数据源\n# 布尔类型 默认为 false\nUseTransient = false\n\n\n\n# 数据检索\n\n获取订单中存储的扇区数据时的相关配置\n\n\n# [RetrievalPaymentAddress]\n\n获取订单扇区数据时，使用的收款地址\n\nRetrievalPaymentAddress = ""\n\n\n\n# Metric 配置\n\n配置 Metric 相关的参数\n\n[Metrics]\n\n# 是否启用 Metric\n# 布尔值 默认为 false\nEnabled = false\n\n# Metric 导出设置\n[Metrics.Exporter]\n\n# Metric 导出的类型\n# 字符串类型 可选值为 "prometheus" 和 "graphite" 默认为 "prometheus"\nType = "prometheus"\n\n# Prometheus 导出设置\n[Metrics.Exporter.Prometheus]\n\n# 注册器的类型\n# 字符串类型 可选值为 "define" 和 "default" 默认为 "define"\n# define: 空白全新的注册器; default:Prometheus 提供的默认注册器\nRegistryType = "define"\n\n# 命名空间\n# 字符串类型 默认为 ""\nNamespace = ""\n\n# 监听地址\n# 字符串类型 默认为 "/ip4/0.0.0.0/tcp/4568"\nEndPoint = "/ip4/0.0.0.0/tcp/4568"\n\n# Metrics 指标的访问路径\n# 字符串类型 默认为 "/debug/metrics"\nPath = "/debug/metrics"\n\n# Metric 指标聚合的周期\n# 时间字符串 默认为 "10s"\nReportingPeriod = "10s"\n\n\n# Graphite 导出设置\n[Metrics.Exporter.Graphite]\n\n# 命名空间\n# 字符串类型 默认为 ""\nNamespace = ""\n\n# 监听地址\n# 字符串类型 默认为 "127.0.0.1"\nHost = "127.0.0.1"\n\n# 监听端口\n# 整数类型 默认为 4568\nPort = 4568\n\n# Metric 指标聚合的周期\n# 时间字符串 默认为 "10s"\nReportingPeriod = "10s"\n',normalizedContent:'# droplet 的配置解释\n\n\n# 常用配置项说明\n\n这里我们对比较常用的配置项进行说明。\n\n# 链服务配置\n\n * 包括：同步节点，消息节点，签名节点及授权节点。\n\n[chainservice]\n  url =  "/ip4/192.168.200.21/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[node]\n  url = "/ip4/192.168.200.21/tcp/3453"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[messager]\n  url = "/ip4/192.168.200.21/tcp/39812"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[signer]\n  type = "gateway"\n  url = "/ip4/192.168.200.21/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n[authnode]\n  url = "http://192.168.200.21:8989"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n\n\n# api 监听配置\n\ndroplet 默认监听端口为 127.0.0.1:41235, 为了支持不同网络的访问请求, 需要修改api的监听地址:\n\n[api]\nlistenaddress = "/ip4/0.0.0.0/tcp/41235"\n\n\n# publishmsgperiod 配置\n\ndroplet 在收到 droplet-client 的订单时, 并不会马上就发布 clientdealproposal 消息,会等待一定的时间, 由配置文件中的 publishmsgperiod 项来控制，在测试时可以将此项设置为较小值减少等待时间。下面的设置，将等待时间设置为10秒。\n\npublishmsgperiod = "10s"\n\n\n# piecestorage 配置\n\n目前 droplet 支持两种 piece 数据的存储模式：\n\n * 文件系统\n * 对象存储\n\n[piecestorage]\n  [[piecestorage.fs]]\n    name = "local"\n    enable = true\n    path = "/mnt/pieces"\n  [[piecestorage.s3]]\n    name = "oss"\n    enable = false\n    endpoint = ""\n    accesskey = ""\n    secretkey = ""\n    token = ""\n\n\n也可以通过命令配置，命令设置不需要重启进程。命令设置后会更新配置文件：\n\n# 本地文件系统存储\n./droplet piece-storage add-fs --path="/piece/storage/path" --name="local"\n\n# 对象存储\n./droplet piece-storage add-s3 --endpoint=<url> --name="oss"\n\n\n# miners 配置\n\ndroplet 服务的矿工及每个矿工的参数，配置如下：\n\n[[miners]]\n  addr = "f01000"\n  account = "testuser01"\n  \n  consideronlinestoragedeals = true\n  considerofflinestoragedeals = true\n  consideronlineretrievaldeals = true\n  considerofflineretrievaldeals = true\n  considerverifiedstoragedeals = true\n  considerunverifiedstoragedeals = true\n  piececidblocklist = []\n  expectedsealduration = "24h0m0s"\n  maxdealstartdelay = "336h0m0s"\n  publishmsgperiod = "1h0m0s"\n  maxdealsperpublishmsg = 8\n  maxprovidercollateralmultiplier = 2\n  filter = ""\n  retrievalfilter = ""\n  transferpath = ""\n  maxpublishdealsfee = "0 fil"\n  maxmarketbalanceaddfee = "0 fil"\n  [commonproviderconfig.retrievalpricing]\n    strategy = "default"\n    [commonproviderconfig.retrievalpricing.default]\n      verifieddealsfreetransfer = true\n    [commonproviderconfig.retrievalpricing.external]\n      path = ""\n    [commonproviderconfig.addressconfig]\n      disableworkerfallback = false\n\n\ntip\n\n如果有多个矿工，将上述配置拷贝一份即可。如果矿工比较多，那配置文件会很长，后续会考虑优化\n\n\n# 一份典型的 droplet 全量配置\n\n# ****** 数据传输参数配置 ********\nsimultaneoustransfersforstorage = 20\nsimultaneoustransfersforstorageperclient = 20\nsimultaneoustransfersforretrieval = 20\n\n# ****** 全局基础参数配置 ********\n[commonprovider]\n  consideronlinestoragedeals = true\n  considerofflinestoragedeals = true\n  consideronlineretrievaldeals = true\n  considerofflineretrievaldeals = true\n  considerverifiedstoragedeals = true\n  considerunverifiedstoragedeals = true\n  piececidblocklist = []\n  expectedsealduration = "24h0m0s"\n  maxdealstartdelay = "336h0m0s"\n  publishmsgperiod = "1h0m0s"\n  maxdealsperpublishmsg = 8\n  maxprovidercollateralmultiplier = 2\n  filter = ""\n  retrievalfilter = ""\n  transferpath = ""\n  maxpublishdealsfee = "0 fil"\n  maxmarketbalanceaddfee = "0 fil"\n  retrievalpaymentaddress = ""\n  dealpublishaddress = []\n  [commonprovider.retrievalpricing]\n    strategy = "default"\n    [commonprovider.retrievalpricing.default]\n      verifieddealsfreetransfer = true\n    [commonprovider.retrievalpricing.external]\n      path = ""\n    \n\n# 每个矿工可以有独立的基础参数，没有配置时使用全局配置，配置方式如下：\n\n# ****** miner基础参数配置 ********\n[[miners]]\n  addr = "f01000"\n  account = "testuser01"\n  \n   consideronlinestoragedeals = true\n   considerofflinestoragedeals = true\n   consideronlineretrievaldeals = true\n   considerofflineretrievaldeals = true\n   considerverifiedstoragedeals = true\n   considerunverifiedstoragedeals = true\n   piececidblocklist = []\n   expectedsealduration = "24h0m0s"\n   maxdealstartdelay = "336h0m0s"\n   publishmsgperiod = "1h0m0s"\n   maxdealsperpublishmsg = 8\n   maxprovidercollateralmultiplier = 2\n   filter = ""\n   retrievalfilter = ""\n   transferpath = "/mnt/transfer"\n   maxpublishdealsfee = "0 fil"\n   maxmarketbalanceaddfee = "0 fil"\n   retrievalpaymentaddress = ""\n   dealpublishaddress = []\n   [commonprovider.retrievalpricing]\n     strategy = "default"\n     [commonprovider.retrievalpricing.default]\n       verifieddealsfreetransfer = true\n     [commonprovider.retrievalpricing.external]\n       path = ""\n\n# ****** droplet 网络配置  ********\n[api]\n  listenaddress = "/ip4/127.0.0.1/tcp/41235"\n  remotelistenaddress = ""\n  secret = "e647ee23cf95424162b974cd641b6a6479cbc7cb1209cc755f762c8248d50ba4"\n  timeout = "30s"\n\n[libp2p]\n  listenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n  announceaddresses = []\n  noannounceaddresses = []\n  privatekey = "08011240d47934b6fccf8b79786335a55ccc04bdb9c92866cae2c0cea2fdefe0f2e7c18650dfbde5dd126c2a23a0d1c60686d3dedd064b67ba97c6161dd8007f0675e1a9"\n\n\n# ****** venus 组件服务配置 ********\n[chainservice]\n  url =  "/ip4/192.168.200.21/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n\n[node]\n  url = "/ip4/192.168.200.151/tcp/3453"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[messager]\n  url = "/ip4/127.0.0.1/tcp/39812"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[signer]\n  type = "gateway"\n  url = "/ip4/127.0.0.1/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n[authnode]\n  url = "http://127.0.0.1:8989"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoidgvzdc11c2vymdeilcjwzxjtijoic2lnbiisimv4dci6iij9.etjny3hmds3scz3cax9xyb6aopnwyp4y71lzgcvyxmg"\n\n#  ******** 数据库设置 ********\n[mysql]\nconnectionstring = ""\nmaxopenconn = 100\nmaxidleconn = 100\nconnmaxlifetime = "1m"\ndebug = false\n\n# ******** 扇区存储设置 ********\n[piecestorage]\ns3 = []\n\n[[piecestorage.fs]]\nname = "local"\nreadonly = false\npath = "./.vscode/test"\n\n# ******** 日志设置 ********\n[journal]\npath = "journal"\n\n# ******** dag存储设置 ********\n[dagstore]\nrootdir = "/root/.droplet/dagstore"\nmaxconcurrentindex = 5\nmaxconcurrentreadyfetches = 0\nmaxconcurrencystoragecalls = 100\ngcinterval = "1m0s"\ntransient = ""\nindex = ""\nusetransient = false\n\n# ******** 数据检索配置 ********\nretrievalpaymentaddress = ""\n\n# ****** metric 配置 ********\n[metrics]\n  enabled = false\n  [metrics.exporter]\n    type = "prometheus"\n    [metrics.exporter.prometheus]\n      registrytype = "define"\n      namespace = ""\n      endpoint = "/ip4/0.0.0.0/tcp/4568"\n      path = "/debug/metrics"\n      reportingperiod = "10s"\n    [metrics.exporter.graphite]\n      namespace = ""\n      host = "127.0.0.1"\n      port = 4568\n      reportingperiod = "10s"\n\n\n接下来，将这个配置分成基础参数，网络配置，venus组件配置等多个部分进行讲解\n\n\n# 全量配置说明\n\n\n# 数据传输参数配置\n\n# 存储订单的最大同时传输数目\n# 整数类型 默认为：20\nsimultaneoustransfersforstorage = 20\n\n# 针对每一个客户端的存储订单最大同时传输数目\n# 整数类型 默认为：20\nsimultaneoustransfersforstorageperclient = 20\n\n# 获取数据最大同时传输数目\n# 整数类型 默认为：20\nsimultaneoustransfersforretrieval = 20\n\n\n\n# 基础参数配置\n\n这部分的配置主要是决定了了 droplet 在进行工作时的偏好，满足定制化的需求，其中各项配置的作用如下：\n\n# 决定是否接受线上存储订单\n# 布尔值 默认为 true\nconsideronlinestoragedeals = true\n\n# 决定是否接受线下存储订单\n# 布尔值 默认为 true\nconsiderofflinestoragedeals = true\n\n# 决定是否接受线上数据获取订单\n# 布尔值 默认为 true\nconsideronlineretrievaldeals = true\n\n# 决定是否接受线下数据获取订单\n# 布尔值 默认为 true\nconsiderofflineretrievaldeals = true\n\n# 决定是否接受经过验证的存储订单\n# 布尔值 默认为 true\nconsiderverifiedstoragedeals = true\n\n# 决定是否接受未经过验证的存储订单\n# 布尔值 默认为 true\nconsiderunverifiedstoragedeals = true\n\n# 订单数据黑名单\n# 字符串数组 其中每一个字符串都是cid 默认为空\n# cid在黑名单中的数据，不会被用于构建订单\npiececidblocklist = []\n\n# 订单数据被封装完成的最大时间预期\n# 时间字符串 默认为："24h0m0s"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\nexpectedsealduration = "24h0m0s"\n\n# 预期订单封装开始前等待时间\n# 时间字符串 默认为："336h0m0s"\nmaxdealstartdelay = "336h0m0s"\n\n# 消息推送上链的周期\n# 时间字符串 默认为："1h0m0s"\npublishmsgperiod = "5m0s"\n\n# 在一个消息推送周期内的最大订数量\n# 整数类型 默认为8 \nmaxdealsperpublishmsg = 8\n\n# 最大的存储供应商抵押乘法因子\n# 整数类型 默认为：2\nmaxprovidercollateralmultiplier = 2\n\n# 通过外部执行器来筛选存储订单,是可执行的程序或脚本\nfilter = ""\n\n# 通过外部执行器来筛选检索订单,是可执行的程序或脚本\nretrievalfilter = ""\n\n# 订单传输数据的存储位置\n# 字符串类型 可选 为空值时默认使用`droplet_repo`的路径\ntransferpath = ""\n\n# 发送订单消息的最大费用\n# fil类型 默认为："0 fil"\n# fil类型字符串形式为 整数+" fil"\nmaxpublishdealsfee = "0 fil"\n\n# 发送增加抵押消息时花费的最大费用\n# fil类型 默认为："0 fil"\nmaxmarketbalanceaddfee = "0 fil"\n\n# 保留字段，当前配置无效\n[retrievalpricing]\n\n# 使用的策略类型\n# 字符串类型 可以选择"default"和"external"  默认为:"default"\n# 前者使用内置的默认策略，后者使用外部提供的脚本自定义的策略\nstrategy = "default"\n\n[retrievalpricing.default]\n\n# 对于经过认证的订单数据，是否定价为0\n# 布尔值 默认为 "true"\n# 只有strategy = "default" 才会生效\nverifieddealsfreetransfer = true\n\n[retrievalpricing.external]\n# 定义外部策略的脚本的路径\n# 字符串类型 如果选择external策略时，必选\npath = ""\n\n# 该设置为保留字段，当前无效\n[addressconfig]\n\n# 是否降低使用woker地址发布消息的优先级，如果是，则只有在其他可选地址没有的情况下才会使用woker的地址发消息\n# 布尔值 默认为 false\ndisableworkerfallback = false\n\n[[addressconfig.dealpublishcontrol]]\n\n# 发布订单消息的地址\n# 字符串类型 必选\naddr = ""\n\n# 持有相应地址的账户\n# 字符串类型 必选\naccount =""\n\n\n\n# droplet 网络配置\n\n这部分的配置决定了 droplet 和外界交互的接口\n\n# [api]\n\ndroplet 对外提供服务的接口\n\n[api]\n# droplet 提供服务监听的地址\n# 字符串类型，必选项，默认为:"/ip4/127.0.0.1/tcp/41235"\nlistenaddress = "/ip4/127.0.0.1/tcp/41235"\n\n# 保留字段\nremotelistenaddress = ""\n\n# 密钥用于加密通信\n# 字符串类型 可选项（没有则自动生成）\nsecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n# 保留字段\ntimeout = "30s"\n\n\n# [libp2p]\n\ndroplet 在p2p网络中通信时使用的 通信地址\n\n[libp2p]\n# 监听的网络地址\n# 字符串数组 必选 默认为:["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nlistenaddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# 保留字段\nannounceaddresses = []\n\n# 保留字段\nnoannounceaddresses = []\n\n# 用于生成p2p节点的peerid\n# 字符串 可选（没设置则自动生成）\nprivatekey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n\n\n\n# venus 组件服务配置\n\n当 droplet 接入venus组件使用时，需要配置相关组件的api。\n\n# [chainservice]\n\nvenus 链服务统一入口配置。 该配置项的 url 和 token 会成为后续配置项 node , messager 以及 authnode 的默认值\n\n[chainservice]\n  url =  "/ip4/192.168.200.21/tcp/45132"\n  token = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoiemwilcjwzxjtijoiywrtaw4ilcjlehqioiiifq.3u-pinsumx-8f6z971m7jbchygfvqrvwujjffy03ouq"\n\n\n# [node]\n\nvenus链同步节点接入配置\n\n[node]\n# 链服务的入口\n# 字符串类型 必选（也可以直接通过命令行的--node-url flag 进行配置）\nurl = "/ip4/192.168.200.128/tcp/3453"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# [messager]\n\nvenus 消息服务接入配置\n\n[messager]\n# 消息服务入口\n# 字符串类型 可选（也可以直接通过命令行的 --messager-url flag 进行配置） 不接入链服务时可不填\nurl = "/ip4/192.168.200.128/tcp/39812/"\n\n# venus 系列组件的鉴权token\n# 字符串类型 可选（也可以直接通过命令行的 --auth-token flag 进行配置） 不接入链服务时可不填\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n# [signer]\n\nvenus 提供签名服务的组件，它可以由两种类型：由venus-wallet直接提供的签名服务和由sophon-gateway提供的间接签名服务\n\n[signer]\n# 签名服务组件的类型\n# 字符串类型  枚举："gateway"，"wallet"，"lotusnode"\ntype = "gateway"\n\n# 签名服务入口\n# 字符串类型 必选（也可以直接通过命令行的 --signer-url flag 进行配置）\nurl = "/ip4/192.168.200.128/tcp/45132/"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n# [authnode]\n\nvenus 提供鉴权服务接入配置\n\n[authnode]\n\n# 鉴权服务入口\n# 字符串类型 可选（也可以直接通过命令行的 --signer-url flag 进行配置） 不接入链服务时可不填\nurl = "http://192.168.200.128:8989"\n\n# venus 系列组件的鉴权token\n# 字符串类型 可选（也可以直接通过命令行的 --auth-token flag 进行配置） 不接入链服务时可不填\ntoken = "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuyw1lijoizm9yy2vuzxqtbnyxniisinblcm0ioijhzg1pbiisimv4dci6iij9.puzey1tlajjnisuu_tbhi2xpuritdlm9xf5uw3mhre8"\n\n\n\n# 矿工配置\n\n预置矿工信息\n\n[[miners]]\n# 矿工的地址\n# 字符串类型 必选\naddr ="f01000"\n\n# 账户名，可以随意设定\n# 字符串类型 可选\naccount = ""\n\n# 基础参数，见上文\n\n\ntip\n\n基础参数在不配置时将会使用 commonprovider, 如下:\n\n[[miners]]\n  addr = "f02472"\n  account = "litao"\n\n\n基础参数一旦配置了一项,则所有项都必须自己配置,比如配置:\n\n[[miners]]\n  addr = "f02472"\n  account = "litao"\n  transferpath = "/mnt/transfer/2472"\n\n\n这样的配置会导致基础参数中的其他配置项都去各自类型的零值,而不会用 commonprovider 中的配置， 如 f02472 对应的 consideronlinestoragedeals 等于 false, 而并非是 commonprovider 中的 true.\n\n这一点需要特别注意,正确的配置方式:\n\n[[miners]]\n  addr = "f02472"\n  account = "litao"\n  transferpath = "/mnt/transfer/2472"\n  consideronlinestoragedeals = true\n  considerofflinestoragedeals = true\n  consideronlineretrievaldeals = true\n  considerofflineretrievaldeals = true\n  considerverifiedstoragedeals = true\n  considerunverifiedstoragedeals = true\n  piececidblocklist = []\n  expectedsealduration = "24h0m0s"\n  maxdealstartdelay = "336h0m0s"\n  publishmsgperiod = "1m0s"\n  maxdealsperpublishmsg = 8\n  maxprovidercollateralmultiplier = 2\n  filter = ""\n  retrievalfilter = ""\n  maxpublishdealsfee = "0 fil"\n  maxmarketbalanceaddfee = "0 fil"\n  retrievalpaymentaddress = ""\n  [retrievalpricing]\n    strategy = "default"\n    [retrievalpricing.default]\n      verifieddealsfreetransfer = true\n    [retrievalpricing.external]\n      path = ""\n\n\n这样不是很灵活,以后会考虑优化.\n\n\n# 数据库配置\n\ndroplet 运行过程中产生的数据的存储数据库的设置 目前支持badgerdb和mysqldb，默认使用badgerdb\n\n# [mysql]\n\nmysqldb的配置\n\n[mysql]\n\n# 用于连接mysql数据库的 connection string\n# 字符串类型 如果要使用 mysql 数据库的话，这是必选，否则使用默认的badgerdb\nconnectionstring = ""\n\n# 打开连接的最大数量\n# 整数类型 默认为100\nmaxopenconn = 100\n\n# 空闲连接的最大数量\n# 整数类型 默认为100\nmaxidleconn = 100\n\n# 可复用连接的最大生命周期\n# 时间字符串 默认为："1m"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\nconnmaxlifetime = "1m"\n\n# 是否输出数据库相关的调试信息\n# 布尔值 默认false\ndebug = false\n\n\n\n# 扇区存储配置\n\n配置 droplet 导入数据后生成的扇区的存储空间 支持使用两种类型的数据存储方式： 文件系统存储和对象存储\n\n# [[piecestorage.fs]]\n\n配置本地文件系统作为扇区存储 对于大量数据的扇区，建议挂载和damocles共用的文件系统进行配置\n\n[piecestorage]\n[[piecestorage.fs]]\n\n# 存储空间的名称，它在 `droplet` 的所有的存储空间中，必须是唯一的\n# 字符串类型 必选\nname = "local"\n\n# 该存储空间是否可写（ read only false 即为可写）\n# 布尔值 默认为 false\nreadonly = false\n\n# 该存储空间在本地文件系统中的路径\n# 字符串类型 必选\npath = "/piecestorage/"\n\n\n\n[piecestorage]\n[[piecestorage.s3]]\n# 存储空间的名称，它在 `droplet` 的所有的存储空间中，必须是唯一的\n# 字符串类型 必选\nname = "s3"\n\n# 该存储空间是否可写（ read only false 即为可写）\n# 布尔值 默认为 false\nreadonly = true\n\n# 对象存储服务的入口\n# 字符串类型 必选\n# 支持单独的endpoint（"oss-cn-shanghai.aliyuncs.com"）和完整的endpoint url（"http://oss-cn-shanghai.aliyuncs.com"）\nendpoint = "oss-cn-shanghai.aliyuncs.com"\n\n# 对象存储服务的bucket名称\n# 字符串类型 必选\nbucket = "droplet"\n\n# 指定在bucket 中的子目录\n# 字符串类型 可选\nsubdir = "dir1/dir2"\n\n# 访问对象存储服务的参数\n# 字符串类型 其中accesskey，secretkey必选，token 可选\naccesskey = "ltai5t6hifgsqn6evj......"\nsecretkey = "alfnh9nakusvjvrxmhaayp7p......"\ntoken = ""\n\n\n\n\n# 日志设置\n\n配置 droplet 使用过程中，产生日志存储的位置\n\n[journal]\n\n# 日志存储的位置\n# 字符串类型 默认为："journal" (即`droplet_repo`文件夹下面的journal文件夹)\npath = "journal"\n\n\n\n# dag存储设置\n\ndag 数据存储的配置\n\n# 参考 github.com/filecoin-project/dagstore/dagstore.go\n[dagstore]\n\n# dag数据存储的根目录\n# 字符串类型 默认为： "<droplet_repo_path>/dagstore"\nrootdir = "/root/.droplet/dagstore"\n\n# 可以同时进行索引作业的最大数量\n# 整数类型 默认为5 0表示不限制\nmaxconcurrentindex = 5\n\n# 可以同时被抓取的最大未封装订单的数量\n# 整数类型 默认为0 0表示不限制\nmaxconcurrentreadyfetches = 0\n\n# 可以被同时调用的存储api的最大数量\n# 整数类型 默认为100\nmaxconcurrencystoragecalls = 100\n\n# dag 数据进行垃圾回收的时间间隔\n# 时间字符串 默认为："1m0s"\n# 时间字符串是由数字和时间单位组成的字符串，数字包括整数和小数，合法的单位包括 "ns", "us" (or "µs"), "ms", "s", "m", "h".\ngcinterval = "1m0s"\n\n# 临时文件的存储路径\n# 字符串类型 可选 不设置则使用roodir目录下的\'transients\'文件夹\ntransient = ""\n\n# 存储扇区索引数据的路径\n# 字符串类型 可选 不设置则使用roodir目录下的\'index\'文件夹\nindex = ""\n\n# 不使用本地缓存，直接读取数据源\n# 布尔类型 默认为 false\nusetransient = false\n\n\n\n# 数据检索\n\n获取订单中存储的扇区数据时的相关配置\n\n\n# [retrievalpaymentaddress]\n\n获取订单扇区数据时，使用的收款地址\n\nretrievalpaymentaddress = ""\n\n\n\n# metric 配置\n\n配置 metric 相关的参数\n\n[metrics]\n\n# 是否启用 metric\n# 布尔值 默认为 false\nenabled = false\n\n# metric 导出设置\n[metrics.exporter]\n\n# metric 导出的类型\n# 字符串类型 可选值为 "prometheus" 和 "graphite" 默认为 "prometheus"\ntype = "prometheus"\n\n# prometheus 导出设置\n[metrics.exporter.prometheus]\n\n# 注册器的类型\n# 字符串类型 可选值为 "define" 和 "default" 默认为 "define"\n# define: 空白全新的注册器; default:prometheus 提供的默认注册器\nregistrytype = "define"\n\n# 命名空间\n# 字符串类型 默认为 ""\nnamespace = ""\n\n# 监听地址\n# 字符串类型 默认为 "/ip4/0.0.0.0/tcp/4568"\nendpoint = "/ip4/0.0.0.0/tcp/4568"\n\n# metrics 指标的访问路径\n# 字符串类型 默认为 "/debug/metrics"\npath = "/debug/metrics"\n\n# metric 指标聚合的周期\n# 时间字符串 默认为 "10s"\nreportingperiod = "10s"\n\n\n# graphite 导出设置\n[metrics.exporter.graphite]\n\n# 命名空间\n# 字符串类型 默认为 ""\nnamespace = ""\n\n# 监听地址\n# 字符串类型 默认为 "127.0.0.1"\nhost = "127.0.0.1"\n\n# 监听端口\n# 整数类型 默认为 4568\nport = 4568\n\n# metric 指标聚合的周期\n# 时间字符串 默认为 "10s"\nreportingperiod = "10s"\n',charsets:{cjk:!0}},{title:"Metric 指标解释",frontmatter:{},regularPath:"/zh/operation/metrics.html",relativePath:"zh/operation/metrics.md",key:"v-ac4c5bc6",path:"/zh/operation/metrics.html",headers:[{level:2,title:"Graphsync的连接状态",slug:"graphsync的连接状态",normalizedTitle:"graphsync的连接状态",charIndex:44},{level:2,title:"内存使用状况",slug:"内存使用状况",normalizedTitle:"内存使用状况",charIndex:1134},{level:2,title:"DagStore 的相关状态",slug:"dagstore-的相关状态",normalizedTitle:"dagstore 的相关状态",charIndex:2387},{level:2,title:"piecestore 的相关状态",slug:"piecestore-的相关状态",normalizedTitle:"piecestore 的相关状态",charIndex:2703},{level:3,title:"rpc",slug:"rpc",normalizedTitle:"rpc",charIndex:3084}],headersStr:"Graphsync的连接状态 内存使用状况 DagStore 的相关状态 piecestore 的相关状态 rpc",content:'# Metric 指标解释\n\n本文档简要阐述了每个 metric 的具体含义。\n\n\n# Graphsync的连接状态\n\n// 正在向本节点传输数据的 peer 数量\nGraphsyncReceivingPeersCount              = stats.Int64("graphsync/receiving_peers", "number of peers we are receiving graphsync data from", stats.UnitDimensionless)\n// 正在接收本节点数据的 peer 的数量\nGraphsyncSendingPeersCount              = stats.Int64("graphsync/sending_peers", "number of peers we are sending graphsync data to", stats.UnitDimensionless)\n// 正在接收数据的连接的数量\nGraphsyncReceivingActiveCount             = stats.Int64("graphsync/receiving_active", "number of active receiving graphsync transfers", stats.UnitDimensionless)\n// 待接收数据的连接的数量\nGraphsyncReceivingCountCount              = stats.Int64("graphsync/receiving_pending", "number of pending receiving graphsync transfers", stats.UnitDimensionless)\n// 正在发送数据的连接的数量\nGraphsyncSendingActiveCount             = stats.Int64("graphsync/sending_active", "number of active sending graphsync transfers", stats.UnitDimensionless)\n// 等待发送数据的连接的数量\nGraphsyncSendingCountCount              = stats.Int64("graphsync/sending_pending", "number of pending sending graphsync transfers", stats.UnitDimensionless)\n\n\n\n# 内存使用状况\n\n// 已分配于接收数据的内存块的数量\nGraphsyncReceivingTotalMemoryAllocated    = stats.Int64("graphsync/receiving_total_allocated", "amount of block memory allocated for receiving graphsync data", stats.UnitBytes)\n// 等待被释放的用于接收数据的内存块的数量\nGraphsyncReceivingTotalPendingAllocations = stats.Int64("graphsync/receiving_pending_allocations", "amount of block memory on hold being received pending allocation", stats.UnitBytes)\n// 因为可用接收内存不足而被挂起的 peer 的数量\nGraphsyncReceivingPeersPending            = stats.Int64("graphsync/receiving_peers_pending", "number of peers we can\'t receive more data from cause of pending allocations", stats.UnitDimensionless)\n\n// 已分配用于发送数据的内存块的数量\nGraphsyncSendingTotalMemoryAllocated    = stats.Int64("graphsync/sending_total_allocated", "amount of block memory allocated for sending graphsync data", stats.UnitBytes)\n// 等待被释放的用于发送数据的内存块的数量\nGraphsyncSendingTotalPendingAllocations = stats.Int64("graphsync/sending_pending_allocations", "amount of block memory on hold from sending pending allocation", stats.UnitBytes)\n// 因为可用发送内存不足而被挂起的 peer 的数量\nGraphsyncSendingPeersPending            = stats.Int64("graphsync/sending_peers_pending", "number of peers we can\'t send more data to cause of pending allocations", stats.UnitDimensionless)\n\n\n\n\n# DagStore 的相关状态\n\n// DagStore 中的 Retrieval 订单的个数\nDagStorePRInitCount      = stats.Int64("dagstore/pr_init_count", "Retrieval init count", stats.UnitDimensionless)\n// DagStore 中的 Retrieval 占用的存储容量\nDagStorePRBytesRequested = stats.Int64("dagstore/pr_requested_bytes", "Retrieval requested bytes", stats.UnitBytes)\n\n\n\n\n# piecestore 的相关状态\n\n// retrieval deal 正好命中 piecestore 中的 piece 的次数\nStorageRetrievalHitCount = stats.Int64("piecestorage/retrieval_hit", "PieceStorage hit count for retrieval", stats.UnitDimensionless)\n// 保存 piece 时正好命中 piecestore 中的 piece 的次数\nStorageSaveHitCount      = stats.Int64("piecestorage/save_hit", "PieceStorage hit count for save piece data", stats.UnitDimensionless)\n\n\n\n# rpc\n\n# 调用无效RPC方法的次数\nRPCInvalidMethod = stats.Int64("rpc/invalid_method", "Total number of invalid RPC methods called", stats.UnitDimensionless)\n# RPC请求失败的次数\nRPCRequestError  = stats.Int64("rpc/request_error", "Total number of request errors handled", stats.UnitDimensionless)\n# RPC响应失败的次数\nRPCResponseError = stats.Int64("rpc/response_error", "Total number of responses errors handled", stats.UnitDimensionless)\n',normalizedContent:'# metric 指标解释\n\n本文档简要阐述了每个 metric 的具体含义。\n\n\n# graphsync的连接状态\n\n// 正在向本节点传输数据的 peer 数量\ngraphsyncreceivingpeerscount              = stats.int64("graphsync/receiving_peers", "number of peers we are receiving graphsync data from", stats.unitdimensionless)\n// 正在接收本节点数据的 peer 的数量\ngraphsyncsendingpeerscount              = stats.int64("graphsync/sending_peers", "number of peers we are sending graphsync data to", stats.unitdimensionless)\n// 正在接收数据的连接的数量\ngraphsyncreceivingactivecount             = stats.int64("graphsync/receiving_active", "number of active receiving graphsync transfers", stats.unitdimensionless)\n// 待接收数据的连接的数量\ngraphsyncreceivingcountcount              = stats.int64("graphsync/receiving_pending", "number of pending receiving graphsync transfers", stats.unitdimensionless)\n// 正在发送数据的连接的数量\ngraphsyncsendingactivecount             = stats.int64("graphsync/sending_active", "number of active sending graphsync transfers", stats.unitdimensionless)\n// 等待发送数据的连接的数量\ngraphsyncsendingcountcount              = stats.int64("graphsync/sending_pending", "number of pending sending graphsync transfers", stats.unitdimensionless)\n\n\n\n# 内存使用状况\n\n// 已分配于接收数据的内存块的数量\ngraphsyncreceivingtotalmemoryallocated    = stats.int64("graphsync/receiving_total_allocated", "amount of block memory allocated for receiving graphsync data", stats.unitbytes)\n// 等待被释放的用于接收数据的内存块的数量\ngraphsyncreceivingtotalpendingallocations = stats.int64("graphsync/receiving_pending_allocations", "amount of block memory on hold being received pending allocation", stats.unitbytes)\n// 因为可用接收内存不足而被挂起的 peer 的数量\ngraphsyncreceivingpeerspending            = stats.int64("graphsync/receiving_peers_pending", "number of peers we can\'t receive more data from cause of pending allocations", stats.unitdimensionless)\n\n// 已分配用于发送数据的内存块的数量\ngraphsyncsendingtotalmemoryallocated    = stats.int64("graphsync/sending_total_allocated", "amount of block memory allocated for sending graphsync data", stats.unitbytes)\n// 等待被释放的用于发送数据的内存块的数量\ngraphsyncsendingtotalpendingallocations = stats.int64("graphsync/sending_pending_allocations", "amount of block memory on hold from sending pending allocation", stats.unitbytes)\n// 因为可用发送内存不足而被挂起的 peer 的数量\ngraphsyncsendingpeerspending            = stats.int64("graphsync/sending_peers_pending", "number of peers we can\'t send more data to cause of pending allocations", stats.unitdimensionless)\n\n\n\n\n# dagstore 的相关状态\n\n// dagstore 中的 retrieval 订单的个数\ndagstoreprinitcount      = stats.int64("dagstore/pr_init_count", "retrieval init count", stats.unitdimensionless)\n// dagstore 中的 retrieval 占用的存储容量\ndagstoreprbytesrequested = stats.int64("dagstore/pr_requested_bytes", "retrieval requested bytes", stats.unitbytes)\n\n\n\n\n# piecestore 的相关状态\n\n// retrieval deal 正好命中 piecestore 中的 piece 的次数\nstorageretrievalhitcount = stats.int64("piecestorage/retrieval_hit", "piecestorage hit count for retrieval", stats.unitdimensionless)\n// 保存 piece 时正好命中 piecestore 中的 piece 的次数\nstoragesavehitcount      = stats.int64("piecestorage/save_hit", "piecestorage hit count for save piece data", stats.unitdimensionless)\n\n\n\n# rpc\n\n# 调用无效rpc方法的次数\nrpcinvalidmethod = stats.int64("rpc/invalid_method", "total number of invalid rpc methods called", stats.unitdimensionless)\n# rpc请求失败的次数\nrpcrequesterror  = stats.int64("rpc/request_error", "total number of request errors handled", stats.unitdimensionless)\n# rpc响应失败的次数\nrpcresponseerror = stats.int64("rpc/response_error", "total number of responses errors handled", stats.unitdimensionless)\n',charsets:{cjk:!0}},{title:"迁移订单",frontmatter:{},regularPath:"/zh/operation/migrate-offline-deal.html",relativePath:"zh/operation/migrate-offline-deal.md",key:"v-f2267476",path:"/zh/operation/migrate-offline-deal.html",headers:[{level:2,title:"前置条件",slug:"前置条件",normalizedTitle:"前置条件",charIndex:131},{level:2,title:"从 lotus-miner 迁移订单",slug:"从-lotus-miner-迁移订单",normalizedTitle:"从 lotus-miner 迁移订单",charIndex:220},{level:3,title:"从 lotus-miner 导出订单",slug:"从-lotus-miner-导出订单",normalizedTitle:"从 lotus-miner 导出订单",charIndex:243},{level:3,title:"将订单导入到 droplet",slug:"将订单导入到-droplet",normalizedTitle:"将订单导入到 droplet",charIndex:1459},{level:2,title:"从 boost 迁移订单",slug:"从-boost-迁移订单",normalizedTitle:"从 boost 迁移订单",charIndex:1682},{level:3,title:"从 boost 导出订单",slug:"从-boost-导出订单",normalizedTitle:"从 boost 导出订单",charIndex:1699},{level:3,title:"导入订单",slug:"导入订单",normalizedTitle:"导入订单",charIndex:1477}],headersStr:"前置条件 从 lotus-miner 迁移订单 从 lotus-miner 导出订单 将订单导入到 droplet 从 boost 迁移订单 从 boost 导出订单 导入订单",content:'# 迁移订单\n\n从 lotus 迁移到 venus 的时候，需要迁移已完成封装证明的订单和还在 StorageDealWaitingForData 状态的订单。 本文档主要介绍如何从 lotus-miner 和 boost 迁移订单到 droplet。\n\n\n# 前置条件\n\n要完成订单的迁移，需要满足以下两个条件：\n\n * 已经拥有一套带有 droplet 组件的 venus 链服务\n * 已经将矿工账号迁入 venus 链服务\n\n\n# 从 lotus-miner 迁移订单\n\n\n# 从 lotus-miner 导出订单\n\n通过接口导出订单，参考以下示例：\n\n> TOKEN 是 lotus-miner 的 token，可以通过命令生成：lotus-miner auth api-info --perm=admin\n\ncurl http://127.0.0.1:2345/rpc/v0 -X POST \\\n-H "Content-Type: application/json" \\\n-H "Authorization: Bearer <TOKEN>" \\\n-d \'{"method": "Filecoin.MarketListIncompleteDeals","params":[], "id": 0}\' > lotus_miner_deals.json\n\n\n执行完命令后，你可能得到如下结果：\n\n{"jsonrpc":"2.0","result":[{"Proposal":{"PieceCID":{"/":"baga6ea4seaqcrddjqzqavqipgljq6jn3bmbnhzw5yucdmoqoji3tni6kisjqini"},"PieceSize":128,"VerifiedDeal":false,"Client":"t3r3nyp4sitvilwc5wggvrsyoqmue3zgliqsqzqxri5up2fmlx2e5xeltxv4qbokjj6qrdgz3t7zdwygogpjaa","Provider":"t01000","Label":"uAVUAHOi_meaYr-eUqOadpea1i-ivleeahOaVsOaNrgo","StartEpoch":173482,"EndEpoch":694737,"StoragePricePerEpoch":"0",\n......\n":"bafkqahhix6m6ngfp46kkrzu5uxtllc7iv6k6pgue42k3bzunvyfa"},"PieceCid":{"/":"baga6ea4seaqcrddjqzqavqipgljq6jn3bmbnhzw5yucdmoqoji3tni6kisjqini"},"PieceSize":127,"RawBlockSize":0},"AvailableForRetrieval":false,"DealID":0,"CreationTime":"2022-08-03T10:35:09.774748628+08:00","TransferChannelId":null,"SectorNumber":0,"InboundCAR":""}],"id":0}\n\n\n其中，result 中的每一项都是一个订单的详细信息。每个订单中的 State 字段表征了当前订单的状态，如果 State = 18，表示当前订单处于 StorageDealWaitingForData 的状态。\n\n\n# 将订单导入到 droplet\n\n开始导入订单之前，先确认矿工账号是否在 venus 链服务中，如果不在，需要将矿工账号迁入 venus 链服务。\n\n./droplet actor list\n\n\n确定完矿工之后，在 droplet 中可以直接通过命令导入订单：\n\n./droplet storage deal import-deal lotus_miner_deals.json\n\n# 结果\nimport 2 deals success\n\n\n\n# 从 boost 迁移订单\n\n\n# 从 boost 导出订单\n\nboost 支持两种发单协议，暂且称之为新老协议，用户发单时两种协议可能都使用到了，所以需要分两步导出订单。\n\n# 导出老协议订单\n\n通过接口导出订单，此次导出和从 lotus-miner 导出订单很类似，参考例子：\n\n> TOKEN 是 boost 生成的 token，可以通过命令 ./boostd auth create-token --perm admin 生成。\n\ncurl http://127.0.0.1:1288/rpc/v0 -X POST \\\n-H "Content-Type: application/json" \\\n-H "Authorization: Bearer <TOKEN>" \\\n-d \'{"method": "Filecoin.MarketListIncompleteDeals","params":[], "id": 0}\' > boost_old_deals.json\n\n\n# 导出新协议订单\n\n 1. 先确定有多少订单\n\ncurl -X POST -H "Content-Type: application/json" -d \'{"query":"query { dealsCount() }"}\' http://localhost:8080/graphql/query | jq\n\n# 结果\n\n{\n  "data": {\n    "dealsCount": 2\n  }\n}\n\n\n返回结果中 dealsCount 的值就是现有订单数量。\n\n 2. 导出全部订单\n\n> 下面查询中 limit 字段的值是 10000000，最多获取到 10000000 条订单，需要大于现有的订单数量。\n\ncurl -X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"query":"query { deals(limit: 10000000) { totalCount deals { ID ClientAddress ProviderAddress CreatedAt PieceCid PieceSize IsVerified ProposalLabel ProviderCollateral ClientCollateral StoragePricePerEpoch StartEpoch EndEpoch ClientPeerID DealDataRoot SignedProposalCid InboundFilePath ChainDealID PublishCid IsOffline Transfer { Type Size } IsTransferStalled Checkpoint Err Sector { ID Offset Length } Message } } }"}\' \\\nhttp://localhost:8080/graphql/query | jq > boost_deals.json\n\n\n\n# 导入订单\n\n开始导入订单之前，先确认矿工账号是否在 venus 链服务中，如果不在，需要将矿工账号迁入 venus 链服务。\n\n./droplet actor list\n\n\n 1. 导入老协议订单\n\n./droplet storage deal import-deal boost_old_deals.json\n\n# 结果\nimport 2 deals success\n\n\n 2. 导入新协议订单\n\n./droplet storage deal import-deal --from boost boost_deals.json\n\n# 结果\nimport 3 deals success\n\n\n> --car-dirs 指定car文件的目录，可以设置多个：--car-dirs /tmp/cars --car-dirs /tmp/cars2，程序会根据 piece cid 来获取订单 payload size\n\n> payload size 在生成索引的时候会用到\n\n如果导入过程遇到 deal bafyreih7qaddtjxu66khjohckd3gkp42p3x5i2fhw5xjw325rnb7wvje7q payload size 0，则说明有的订单的 payload size 是 0，这样的订单不会导入。可以通过设置 --car-dirs，让程序根据 piece cid 去获取 payload size 来解决这个问题。',normalizedContent:'# 迁移订单\n\n从 lotus 迁移到 venus 的时候，需要迁移已完成封装证明的订单和还在 storagedealwaitingfordata 状态的订单。 本文档主要介绍如何从 lotus-miner 和 boost 迁移订单到 droplet。\n\n\n# 前置条件\n\n要完成订单的迁移，需要满足以下两个条件：\n\n * 已经拥有一套带有 droplet 组件的 venus 链服务\n * 已经将矿工账号迁入 venus 链服务\n\n\n# 从 lotus-miner 迁移订单\n\n\n# 从 lotus-miner 导出订单\n\n通过接口导出订单，参考以下示例：\n\n> token 是 lotus-miner 的 token，可以通过命令生成：lotus-miner auth api-info --perm=admin\n\ncurl http://127.0.0.1:2345/rpc/v0 -x post \\\n-h "content-type: application/json" \\\n-h "authorization: bearer <token>" \\\n-d \'{"method": "filecoin.marketlistincompletedeals","params":[], "id": 0}\' > lotus_miner_deals.json\n\n\n执行完命令后，你可能得到如下结果：\n\n{"jsonrpc":"2.0","result":[{"proposal":{"piececid":{"/":"baga6ea4seaqcrddjqzqavqipgljq6jn3bmbnhzw5yucdmoqoji3tni6kisjqini"},"piecesize":128,"verifieddeal":false,"client":"t3r3nyp4sitvilwc5wggvrsyoqmue3zgliqsqzqxri5up2fmlx2e5xeltxv4qbokjj6qrdgz3t7zdwygogpjaa","provider":"t01000","label":"uavuahoi_meayr-euqoadpea1i-ivleeahoavsoanrgo","startepoch":173482,"endepoch":694737,"storagepriceperepoch":"0",\n......\n":"bafkqahhix6m6ngfp46kkrzu5uxtllc7iv6k6pgue42k3bzunvyfa"},"piececid":{"/":"baga6ea4seaqcrddjqzqavqipgljq6jn3bmbnhzw5yucdmoqoji3tni6kisjqini"},"piecesize":127,"rawblocksize":0},"availableforretrieval":false,"dealid":0,"creationtime":"2022-08-03t10:35:09.774748628+08:00","transferchannelid":null,"sectornumber":0,"inboundcar":""}],"id":0}\n\n\n其中，result 中的每一项都是一个订单的详细信息。每个订单中的 state 字段表征了当前订单的状态，如果 state = 18，表示当前订单处于 storagedealwaitingfordata 的状态。\n\n\n# 将订单导入到 droplet\n\n开始导入订单之前，先确认矿工账号是否在 venus 链服务中，如果不在，需要将矿工账号迁入 venus 链服务。\n\n./droplet actor list\n\n\n确定完矿工之后，在 droplet 中可以直接通过命令导入订单：\n\n./droplet storage deal import-deal lotus_miner_deals.json\n\n# 结果\nimport 2 deals success\n\n\n\n# 从 boost 迁移订单\n\n\n# 从 boost 导出订单\n\nboost 支持两种发单协议，暂且称之为新老协议，用户发单时两种协议可能都使用到了，所以需要分两步导出订单。\n\n# 导出老协议订单\n\n通过接口导出订单，此次导出和从 lotus-miner 导出订单很类似，参考例子：\n\n> token 是 boost 生成的 token，可以通过命令 ./boostd auth create-token --perm admin 生成。\n\ncurl http://127.0.0.1:1288/rpc/v0 -x post \\\n-h "content-type: application/json" \\\n-h "authorization: bearer <token>" \\\n-d \'{"method": "filecoin.marketlistincompletedeals","params":[], "id": 0}\' > boost_old_deals.json\n\n\n# 导出新协议订单\n\n 1. 先确定有多少订单\n\ncurl -x post -h "content-type: application/json" -d \'{"query":"query { dealscount() }"}\' http://localhost:8080/graphql/query | jq\n\n# 结果\n\n{\n  "data": {\n    "dealscount": 2\n  }\n}\n\n\n返回结果中 dealscount 的值就是现有订单数量。\n\n 2. 导出全部订单\n\n> 下面查询中 limit 字段的值是 10000000，最多获取到 10000000 条订单，需要大于现有的订单数量。\n\ncurl -x post \\\n-h "content-type: application/json" \\\n-d \'{"query":"query { deals(limit: 10000000) { totalcount deals { id clientaddress provideraddress createdat piececid piecesize isverified proposallabel providercollateral clientcollateral storagepriceperepoch startepoch endepoch clientpeerid dealdataroot signedproposalcid inboundfilepath chaindealid publishcid isoffline transfer { type size } istransferstalled checkpoint err sector { id offset length } message } } }"}\' \\\nhttp://localhost:8080/graphql/query | jq > boost_deals.json\n\n\n\n# 导入订单\n\n开始导入订单之前，先确认矿工账号是否在 venus 链服务中，如果不在，需要将矿工账号迁入 venus 链服务。\n\n./droplet actor list\n\n\n 1. 导入老协议订单\n\n./droplet storage deal import-deal boost_old_deals.json\n\n# 结果\nimport 2 deals success\n\n\n 2. 导入新协议订单\n\n./droplet storage deal import-deal --from boost boost_deals.json\n\n# 结果\nimport 3 deals success\n\n\n> --car-dirs 指定car文件的目录，可以设置多个：--car-dirs /tmp/cars --car-dirs /tmp/cars2，程序会根据 piece cid 来获取订单 payload size\n\n> payload size 在生成索引的时候会用到\n\n如果导入过程遇到 deal bafyreih7qaddtjxu66khjohckd3gkp42p3x5i2fhw5xjw325rnb7wvje7q payload size 0，则说明有的订单的 payload size 是 0，这样的订单不会导入。可以通过设置 --car-dirs，让程序根据 piece cid 去获取 payload size 来解决这个问题。',charsets:{cjk:!0}},{title:"大数据集数据准备",frontmatter:{},regularPath:"/zh/operation/prep-datasets.html",relativePath:"zh/operation/prep-datasets.md",key:"v-46860e26",path:"/zh/operation/prep-datasets.html",headers:[{level:2,title:"大数据集数据准备",slug:"大数据集数据准备",normalizedTitle:"大数据集数据准备",charIndex:2},{level:2,title:"下载大数据集",slug:"下载大数据集",normalizedTitle:"下载大数据集",charIndex:150},{level:2,title:"大数据的选择",slug:"大数据的选择",normalizedTitle:"大数据的选择",charIndex:684},{level:2,title:"go-graphsplit",slug:"go-graphsplit",normalizedTitle:"go-graphsplit",charIndex:54},{level:2,title:"切 piece",slug:"切-piece",normalizedTitle:"切 piece",charIndex:1170},{level:2,title:"Venus 体系接收订单",slug:"venus-体系接收订单",normalizedTitle:"venus 体系接收订单",charIndex:2090},{level:3,title:"venus-market 查看收到订单状态",slug:"venus-market-查看收到订单状态",normalizedTitle:"venus-market 查看收到订单状态",charIndex:2107},{level:3,title:"venus-sector-manager 配置注意事项",slug:"venus-sector-manager-配置注意事项",normalizedTitle:"venus-sector-manager 配置注意事项",charIndex:3011}],lastUpdated:"2023/10/25 07:37:37",headersStr:"大数据集数据准备 下载大数据集 大数据的选择 go-graphsplit 切 piece Venus 体系接收订单 venus-market 查看收到订单状态 venus-sector-manager 配置注意事项",content:'# 大数据集数据准备\n\n以aws的开源大数据仓库为基础数据，下载完成后使用filedrive-team开源的go-graphsplit 进行切割成指定大小的piece文件 (建议切成 16-32G)，移动到venus-cluster和venus-maket共用的pieceStore路径下。\n\n\n# 下载大数据集\n\n由于下载的目标数据集过于庞大，建议存放在存储服务器上，分批下载数据集；需要使用 aws 工具进行下载\n\n1、下载 aws 命令行工具 centos 系统：\n\n$ yum install -y awscli\n\n\nubuntu 系统：\n\n$ apt install -y awscli\n\n\n2、查看数据集大小，并下载文件\n\n$ aws s3 ls s3://stpubdata/tess/public/ffi/s0006/2018 --recursive --human-readable --summarize --no-sign-request\n\nTotal Objects: 23568\nTotal Size: 1.2 TiB\n\n\n开始下载文件到/mnt/nas/venus-data目录下：\n\n$ nohup aws s3 sync s3://stpubdata/tess/public/ffi/s0006/2018 /mnt/nas/venus-data/tess/public/ffi/s0006/2018 --no-sign-request > download.log 2>&1 &\n\n\n下载速度根据用户自身的机房出口网络情况而定\n\n\n# 大数据的选择\n\nhttps://github.com/awslabs/open-data-registry/tree/main/datasets\n\n\n里面包含aws所有开源的大数据集，请与LDN申请人确认所下载的大数据是否符合LDN申请的数据类型。\n\n例如：开普勒的光度测量数据，可以看到github上open-data-registry仓库下有一个k2.yaml的文件; 只需在aws仓库后跟上大数据集名称，就可以在浏览器上得到下载的地址...\n\nhttps://registry.opendata.aws/k2/\n\n\n\n# go-graphsplit\n\n编译go-graphsplit用于切piece工具\n\ngit clone https://github.com/filedrive-team/go-graphsplit.git\n\ncd go-graphsplit\n\n# get submodules\ngit submodule update --init --recursive\n\n# build filecoin-ffi\nmake ffi\n\nmake\n\n\n\n# 切 piece\n\n在piece过程中，通过TMPDIR变量来指定切过程中临时文件存放的路径，默认是在/tmp目录下，如果使用普通的系统盘做为临时数据目录，可能会因为系统盘的 IO 不足，导致进程报出Bus error错误后异常退出。\n\n$ TMPDIR=/mnt/nvme01 /root/graphsplit chunk \\\n--car-dir=/mnt/nas/venus-data/16g-pice-data \\\n--slice-size=17179869184 \\\n--parallel=1 \\\n--graph-name=gs-test \\\n--calc-commp \\\n--rename \\\n--parent-path=/mnt/nas/venus-data/tess/ \\\n/mnt/nas/venus-data/tess/ >> /root/nas-nas-para15-30.log 2>&1 &\n\n\nTIP\n\n--car-dir: 指定切割完成后CAR文件存储的路径； --slice-size: 指定切割后输出的的piece文件大小，以byte为基础单位；1024 * 1024 * 1024 = 1073741824 这个就表示是1G的piece文件，推荐大小为 16G(17179869184) 或 32G(34359738368)； --parallel: 指定并发的数量，值越大消耗的 CPU 和内存会越高； --calc-commp: 计算commp的值； --rename: 将CAR文件自动转换成 piece 文件；\n\n在切割完成后，在--car-dir指定的目录下会有很多 pice 文件和一个manifest.csv文件； 把piece文件移到venus-market和venus-sector-manager共享的pieceStore路径下。\n\nTIP\n\nmanifest.csv包含了发单的必要信息。\n\nTIP\n\n期望 DataCap 订单的生命周期，默认是生命周期是 530 天，订单需要在 7 天内封装完成PreCommitSector消息上链，不然 DataCap 订单会直接过期。\n\n\n# Venus 体系接收订单\n\n\n# venus-market 查看收到订单状态\n\n当订单的状态为undefine，就表示此订单等待venus-sector-manager将订单转换成扇区id\n\nvenus-market storage-deals list\n/root/.venusmarket\nProposalCid  DealId  State              PieceState  Client                                     Provider  Size    Price  Duration\n...hbgguc6a  172163  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...t2wycjiq  172164  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...5tkvirfe  172165  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...btsawgt2  172166  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n...feczgggg  172167  StorageDealWait  Undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16GiB   0 FIL  1059840\n\n\n\n# venus-sector-manager 配置注意事项\n\n确认配置文件.venus-sector-manager/sector-manager.cfg中的Enabled 和 EnableDeals的值都为true，表示开启封装算力和开启接入封装订单任务。\n\n[Miners.Sector]\nInitNumber = 1000\nMaxNumber = 1000000\nEnabled = true\nEnableDeals = true\nLifetimeDays = 210\n\n\nvenus-worker需要在连接venus-sector-manager时需要携带token，才可以获取到Piece数据\n\n[sector_manager]\n  # 构造 rpc 客户端时使用的连接地址，必填项，字符串类型\n  rpc_client.addr = "/ip4/192.168.100.1/tcp/1789"\n  rpc_client.headers = { User-Agent = "jsonrpc-core-client" }\n  piece_token = "eyJhbGciOiJIUzxxxxxxxx.eyJuYW1lIjoibGpoOG1xxx.gY3ymGxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n  \n  \n[[sealing_thread]]\n  sealing.enable_deals = true\n  sealing.max_retries = 5\n',normalizedContent:'# 大数据集数据准备\n\n以aws的开源大数据仓库为基础数据，下载完成后使用filedrive-team开源的go-graphsplit 进行切割成指定大小的piece文件 (建议切成 16-32g)，移动到venus-cluster和venus-maket共用的piecestore路径下。\n\n\n# 下载大数据集\n\n由于下载的目标数据集过于庞大，建议存放在存储服务器上，分批下载数据集；需要使用 aws 工具进行下载\n\n1、下载 aws 命令行工具 centos 系统：\n\n$ yum install -y awscli\n\n\nubuntu 系统：\n\n$ apt install -y awscli\n\n\n2、查看数据集大小，并下载文件\n\n$ aws s3 ls s3://stpubdata/tess/public/ffi/s0006/2018 --recursive --human-readable --summarize --no-sign-request\n\ntotal objects: 23568\ntotal size: 1.2 tib\n\n\n开始下载文件到/mnt/nas/venus-data目录下：\n\n$ nohup aws s3 sync s3://stpubdata/tess/public/ffi/s0006/2018 /mnt/nas/venus-data/tess/public/ffi/s0006/2018 --no-sign-request > download.log 2>&1 &\n\n\n下载速度根据用户自身的机房出口网络情况而定\n\n\n# 大数据的选择\n\nhttps://github.com/awslabs/open-data-registry/tree/main/datasets\n\n\n里面包含aws所有开源的大数据集，请与ldn申请人确认所下载的大数据是否符合ldn申请的数据类型。\n\n例如：开普勒的光度测量数据，可以看到github上open-data-registry仓库下有一个k2.yaml的文件; 只需在aws仓库后跟上大数据集名称，就可以在浏览器上得到下载的地址...\n\nhttps://registry.opendata.aws/k2/\n\n\n\n# go-graphsplit\n\n编译go-graphsplit用于切piece工具\n\ngit clone https://github.com/filedrive-team/go-graphsplit.git\n\ncd go-graphsplit\n\n# get submodules\ngit submodule update --init --recursive\n\n# build filecoin-ffi\nmake ffi\n\nmake\n\n\n\n# 切 piece\n\n在piece过程中，通过tmpdir变量来指定切过程中临时文件存放的路径，默认是在/tmp目录下，如果使用普通的系统盘做为临时数据目录，可能会因为系统盘的 io 不足，导致进程报出bus error错误后异常退出。\n\n$ tmpdir=/mnt/nvme01 /root/graphsplit chunk \\\n--car-dir=/mnt/nas/venus-data/16g-pice-data \\\n--slice-size=17179869184 \\\n--parallel=1 \\\n--graph-name=gs-test \\\n--calc-commp \\\n--rename \\\n--parent-path=/mnt/nas/venus-data/tess/ \\\n/mnt/nas/venus-data/tess/ >> /root/nas-nas-para15-30.log 2>&1 &\n\n\ntip\n\n--car-dir: 指定切割完成后car文件存储的路径； --slice-size: 指定切割后输出的的piece文件大小，以byte为基础单位；1024 * 1024 * 1024 = 1073741824 这个就表示是1g的piece文件，推荐大小为 16g(17179869184) 或 32g(34359738368)； --parallel: 指定并发的数量，值越大消耗的 cpu 和内存会越高； --calc-commp: 计算commp的值； --rename: 将car文件自动转换成 piece 文件；\n\n在切割完成后，在--car-dir指定的目录下会有很多 pice 文件和一个manifest.csv文件； 把piece文件移到venus-market和venus-sector-manager共享的piecestore路径下。\n\ntip\n\nmanifest.csv包含了发单的必要信息。\n\ntip\n\n期望 datacap 订单的生命周期，默认是生命周期是 530 天，订单需要在 7 天内封装完成precommitsector消息上链，不然 datacap 订单会直接过期。\n\n\n# venus 体系接收订单\n\n\n# venus-market 查看收到订单状态\n\n当订单的状态为undefine，就表示此订单等待venus-sector-manager将订单转换成扇区id\n\nvenus-market storage-deals list\n/root/.venusmarket\nproposalcid  dealid  state              piecestate  client                                     provider  size    price  duration\n...hbgguc6a  172163  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...t2wycjiq  172164  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...5tkvirfe  172165  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...btsawgt2  172166  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n...feczgggg  172167  storagedealwait  undefind    t1yusfltophrl3z5zgemgr3pwgg3nzdjbjky          t0xxxx   16gib   0 fil  1059840\n\n\n\n# venus-sector-manager 配置注意事项\n\n确认配置文件.venus-sector-manager/sector-manager.cfg中的enabled 和 enabledeals的值都为true，表示开启封装算力和开启接入封装订单任务。\n\n[miners.sector]\ninitnumber = 1000\nmaxnumber = 1000000\nenabled = true\nenabledeals = true\nlifetimedays = 210\n\n\nvenus-worker需要在连接venus-sector-manager时需要携带token，才可以获取到piece数据\n\n[sector_manager]\n  # 构造 rpc 客户端时使用的连接地址，必填项，字符串类型\n  rpc_client.addr = "/ip4/192.168.100.1/tcp/1789"\n  rpc_client.headers = { user-agent = "jsonrpc-core-client" }\n  piece_token = "eyjhbgcioijiuzxxxxxxxx.eyjuyw1lijoibgpoog1xxx.gy3ymgxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n  \n  \n[[sealing_thread]]\n  sealing.enable_deals = true\n  sealing.max_retries = 5\n',charsets:{cjk:!0}},{title:"venus 链服务组件间签名机制",frontmatter:{},regularPath:"/zh/operation/rebuild-signature.html",relativePath:"zh/operation/rebuild-signature.md",key:"v-76877697",path:"/zh/operation/rebuild-signature.html",headers:[{level:2,title:"背景介绍",slug:"背景介绍",normalizedTitle:"背景介绍",charIndex:23},{level:3,title:"用户请求的签名机制",slug:"用户请求的签名机制",normalizedTitle:"用户请求的签名机制",charIndex:233},{level:3,title:"链服务内部的签名机制",slug:"链服务内部的签名机制",normalizedTitle:"链服务内部的签名机制",charIndex:704},{level:3,title:"问题分析",slug:"问题分析",normalizedTitle:"问题分析",charIndex:997},{level:2,title:"Specification (feature Spec)",slug:"specification-feature-spec",normalizedTitle:"specification (feature spec)",charIndex:2100},{level:3,title:"sophon-auth",slug:"sophon-auth",normalizedTitle:"sophon-auth",charIndex:63},{level:3,title:"sophon-gateway",slug:"sophon-gateway",normalizedTitle:"sophon-gateway",charIndex:481},{level:3,title:"sophon-messager",slug:"sophon-messager",normalizedTitle:"sophon-messager",charIndex:287},{level:3,title:"venus-miner",slug:"venus-miner",normalizedTitle:"venus-miner",charIndex:819},{level:3,title:"droplet",slug:"droplet",normalizedTitle:"droplet",charIndex:1093}],headersStr:"背景介绍 用户请求的签名机制 链服务内部的签名机制 问题分析 Specification (feature Spec) sophon-auth sophon-gateway sophon-messager venus-miner droplet",content:'# venus 链服务组件间签名机制\n\n\n# 背景介绍\n\nvenus 的 account 体系中，各角色的关系如下：\n\n * sophon-auth 为指定的用户（account）生成所需权限的 token， SP 用户用此 token 访问链服务接口；\n * sophon-auth 保存 account-minerIDs，即一个用户可以拥有对个 minerID；\n * 链服务组件之间的接口访问没有用到用户的 token, 是系统内置的共享 token\n\n\n# 用户请求的签名机制\n\n以 sophon-cluster 推送消息的过程为例：\n\n * 以 token 请求 sophon-messager 的接口:\n\nPushMessage(ctx context.Context, msg *shared.Message, meta *types.SendSpec) (string, error)\n\n\n * sophon-messager 处理 rpcapi 请求，从 token 中解析获得在 sophon-auth 中生成的 account, 然后调用 sophon-gateway 中的签名接口:\n\nWalletSign(ctx context.Context, account string, addr address.Address, toSign []byte, meta venusTypes.MsgMeta) (*crypto.Signature, error)\n\n\n * sophon-gateway 根据 account 找到对应的 venus-wallet 服务进行签名。\n\n\n# 链服务内部的签名机制\n\n链服务组件之间的接口访问用的是内置的 share token，故无法通过 token 解析出 account， 这样就需要依赖 sophon-auth 的 保存 account-minerIDs 体系。以 venus-miner 请求 sophon-gateway 为例进行说明。\n\n * venus-miner 从 sophon-auth 获取 account-miners 列表；\n * 先从account-miners 列表中查找 minerID 对应的 account， 然后调用 sophon-gateway 的 WalletSign 接口。\n\n\n# 问题分析\n\n本问题以接入 venus 链服务的场景进行分析\n\n * 链服务中没有 signer address 与 account 的关系表，而依赖链服务的签名接口需要 account 参数，droplet 需要额外扩展 signer-account 关系，如下：\n\n假设 f0128788 的可签名地址有: f3wylwd6pclppme4qmbgwled5xpsbgwgqbn2alxa7yahg2gnbfkipsdv6m764xm5coizujmwdmkxeugplmorha, f3r47fkdzfmtex5ic3jnwlzc7bkpbj7s4d6limyt4f57t3cuqq5nuvhvwv2cu2a6iga2s64vjqcxjqiezyjooq。\n\n初始 miner-account, sophon-auth 中实现的关系：\n\nf0128788-test\n\n\n扩展后，droplet 中的扩展:\n\nf0128788-test\nf3wylwd6pclppme4qmbgwled5xpsbgwgqbn2alxa7yahg2gnbfkipsdv6m764xm5coizujmwdmkxeugplmorha-test\nf3r47fkdzfmtex5ic3jnwlzc7bkpbj7s4d6limyt4f57t3cuqq5nuvhvwv2cu2a6iga2s64vjqcxjqiezyjooq-test\n\n\n * 存储市场跟踪订单或扇区状态产生了不必要的工作量，会把非 miner Actor 的地址也进行遍历，如下：\n\nfunc (dealTracker *DealTracker) scanDeal(ctx metrics.MetricsCtx) {\n\taddrs, err := dealTracker.minerMgr.ActorAddress(ctx)\n\tif err != nil {\n\t\tlog.Errorf("get miners list %w", err)\n\t}\n\thead, err := dealTracker.fullNode.ChainHead(ctx)\n\tif err != nil {\n\t\tlog.Errorf("get chain head %w", err)\n\t}\n\n\tfor _, addr := range addrs {\n\t\tdealTracker.checkSlash(ctx, addr, head.Key())\n\t\tdealTracker.checkPreCommitAndCommit(ctx, addr, head.Key())\n\t}\n}\n\n\n\n# Specification (feature Spec)\n\n本次重构涉及组件包括：sophon-auth，sophon-gateway，sophon-messager， venus-miner， droplet等，接下来将一一介绍修改内容。\n\n\n# sophon-auth\n\nsophon-auth 提供接口将签名地址和账号进行绑定，并提供查询接口，保障链服务可以安全地支持多用户相互签名，接口如下：\n\ntype IAuthClient interface {\n\tGetUserBySigner(signer string) (auth.ListUsersResponse, error)\n\tRegisterSigners(user string, addrs []string) error\n\tUnregisterSigners(user string, addrs []string) error\n}\n\n\n\n# sophon-gateway\n\n签名接口重构:\n\ntype IWalletClient interface {\n\tWalletHas(ctx context.Context, addr address.Address, accounts []string) (bool, error)                                                  //perm:admin\n\tWalletSign(ctx context.Context, addr address.Address, accounts []string, toSign []byte, meta types.MsgMeta) (*crypto.Signature, error) //perm:admin\n}\n\n\n * sophon-gateway 签名接口只开放对具有 admin 权限的 token 访问,也就是只能被链服务内部访问，如：venus-miner,sophon-messager；\n * 在调用 sophon-gateway 的签名接口前需要完成权限的检查，这样做为了避免构造消息，调用别人账号下的私钥签名；\n * 在调用 sophon-gateway 的签名接口时需要带上密钥绑定的账号，这样做是为了多个账号的venus-wallet可以相互签名；\n\n自动注册/注销签名地址：\n\n * 在venus-wallet 建立连接时将其保存的私钥和支持的账号进行校验，通过后调用接口保存到 sophon-auth。如 某个venus-wallet终端管理的私钥有： w1，w2；配置的支持账号有：user01，user02；那么绑定的关系有： user01-w1，user01-w2，user02-w1，user02-w2；\n * 在venus-wallet 连接端口或通过接口删除某个地址时自动注销签名地址和账号的绑定关系。\n\n\n# sophon-messager\n\n删除强制推送消息的接口，SP统一消息推送接口。\n\ntype IMessager interface {\n\t- ForcePushMessage(ctx context.Context, account string, msg *types.Message, meta *mtypes.SendSpec) (string, error)                                             //perm:admin\n\t- ForcePushMessageWithId(ctx context.Context, id string, account string, msg *types.Message, meta *mtypes.SendSpec) (string, error)                            //perm:write\n}\n\n\n推送消息流程修改:\n\n * SP组件调用链服务通常是 [sign,read,write] 权限的 token，sophon-messager 首先要检查接口带的 token 权限是否满足：\n   * token 对应的的账号与消息中的签名地址 msg.From 是绑定的；\n   * token 具有 sign 权限(待定)；\n * 给签名接口提供签名地址绑定的所有账号，这样只要有一个连接到 sophon-gateway 的签名终端(venus-wallet)支持对此密钥签名则可以签名此条消息，也就是多个账号相互帮助签名；\n\n\n# venus-miner\n\n无逻辑变化，只需匹配新的接口调用即可。\n\n\n# droplet\n\n * 取消额外扩展 signer-account 关系的逻辑；\n * 消息签名前先检查请求 token 的权限，通过后调用 sophon-gateway的签名接口。\n\n这里要注意的是 droplet-client 组件，其实现和 droplet 在同一项目，但是其本质是SP类组件，过程中的签名不能通过sophon-gateway, 其签名逻辑：\n\n * 对于deals的签名需要额外的签名终端(venus-wallet或lotus/venus)；\n * 交易过程中的消息推送到 sophon-messager, 和 sophon-cluster等推送消息一致；\n\n> 所以 droplet-client 组件代码独立为一个项目比较好？从 droplet 中剥离？',normalizedContent:'# venus 链服务组件间签名机制\n\n\n# 背景介绍\n\nvenus 的 account 体系中，各角色的关系如下：\n\n * sophon-auth 为指定的用户（account）生成所需权限的 token， sp 用户用此 token 访问链服务接口；\n * sophon-auth 保存 account-minerids，即一个用户可以拥有对个 minerid；\n * 链服务组件之间的接口访问没有用到用户的 token, 是系统内置的共享 token\n\n\n# 用户请求的签名机制\n\n以 sophon-cluster 推送消息的过程为例：\n\n * 以 token 请求 sophon-messager 的接口:\n\npushmessage(ctx context.context, msg *shared.message, meta *types.sendspec) (string, error)\n\n\n * sophon-messager 处理 rpcapi 请求，从 token 中解析获得在 sophon-auth 中生成的 account, 然后调用 sophon-gateway 中的签名接口:\n\nwalletsign(ctx context.context, account string, addr address.address, tosign []byte, meta venustypes.msgmeta) (*crypto.signature, error)\n\n\n * sophon-gateway 根据 account 找到对应的 venus-wallet 服务进行签名。\n\n\n# 链服务内部的签名机制\n\n链服务组件之间的接口访问用的是内置的 share token，故无法通过 token 解析出 account， 这样就需要依赖 sophon-auth 的 保存 account-minerids 体系。以 venus-miner 请求 sophon-gateway 为例进行说明。\n\n * venus-miner 从 sophon-auth 获取 account-miners 列表；\n * 先从account-miners 列表中查找 minerid 对应的 account， 然后调用 sophon-gateway 的 walletsign 接口。\n\n\n# 问题分析\n\n本问题以接入 venus 链服务的场景进行分析\n\n * 链服务中没有 signer address 与 account 的关系表，而依赖链服务的签名接口需要 account 参数，droplet 需要额外扩展 signer-account 关系，如下：\n\n假设 f0128788 的可签名地址有: f3wylwd6pclppme4qmbgwled5xpsbgwgqbn2alxa7yahg2gnbfkipsdv6m764xm5coizujmwdmkxeugplmorha, f3r47fkdzfmtex5ic3jnwlzc7bkpbj7s4d6limyt4f57t3cuqq5nuvhvwv2cu2a6iga2s64vjqcxjqiezyjooq。\n\n初始 miner-account, sophon-auth 中实现的关系：\n\nf0128788-test\n\n\n扩展后，droplet 中的扩展:\n\nf0128788-test\nf3wylwd6pclppme4qmbgwled5xpsbgwgqbn2alxa7yahg2gnbfkipsdv6m764xm5coizujmwdmkxeugplmorha-test\nf3r47fkdzfmtex5ic3jnwlzc7bkpbj7s4d6limyt4f57t3cuqq5nuvhvwv2cu2a6iga2s64vjqcxjqiezyjooq-test\n\n\n * 存储市场跟踪订单或扇区状态产生了不必要的工作量，会把非 miner actor 的地址也进行遍历，如下：\n\nfunc (dealtracker *dealtracker) scandeal(ctx metrics.metricsctx) {\n\taddrs, err := dealtracker.minermgr.actoraddress(ctx)\n\tif err != nil {\n\t\tlog.errorf("get miners list %w", err)\n\t}\n\thead, err := dealtracker.fullnode.chainhead(ctx)\n\tif err != nil {\n\t\tlog.errorf("get chain head %w", err)\n\t}\n\n\tfor _, addr := range addrs {\n\t\tdealtracker.checkslash(ctx, addr, head.key())\n\t\tdealtracker.checkprecommitandcommit(ctx, addr, head.key())\n\t}\n}\n\n\n\n# specification (feature spec)\n\n本次重构涉及组件包括：sophon-auth，sophon-gateway，sophon-messager， venus-miner， droplet等，接下来将一一介绍修改内容。\n\n\n# sophon-auth\n\nsophon-auth 提供接口将签名地址和账号进行绑定，并提供查询接口，保障链服务可以安全地支持多用户相互签名，接口如下：\n\ntype iauthclient interface {\n\tgetuserbysigner(signer string) (auth.listusersresponse, error)\n\tregistersigners(user string, addrs []string) error\n\tunregistersigners(user string, addrs []string) error\n}\n\n\n\n# sophon-gateway\n\n签名接口重构:\n\ntype iwalletclient interface {\n\twallethas(ctx context.context, addr address.address, accounts []string) (bool, error)                                                  //perm:admin\n\twalletsign(ctx context.context, addr address.address, accounts []string, tosign []byte, meta types.msgmeta) (*crypto.signature, error) //perm:admin\n}\n\n\n * sophon-gateway 签名接口只开放对具有 admin 权限的 token 访问,也就是只能被链服务内部访问，如：venus-miner,sophon-messager；\n * 在调用 sophon-gateway 的签名接口前需要完成权限的检查，这样做为了避免构造消息，调用别人账号下的私钥签名；\n * 在调用 sophon-gateway 的签名接口时需要带上密钥绑定的账号，这样做是为了多个账号的venus-wallet可以相互签名；\n\n自动注册/注销签名地址：\n\n * 在venus-wallet 建立连接时将其保存的私钥和支持的账号进行校验，通过后调用接口保存到 sophon-auth。如 某个venus-wallet终端管理的私钥有： w1，w2；配置的支持账号有：user01，user02；那么绑定的关系有： user01-w1，user01-w2，user02-w1，user02-w2；\n * 在venus-wallet 连接端口或通过接口删除某个地址时自动注销签名地址和账号的绑定关系。\n\n\n# sophon-messager\n\n删除强制推送消息的接口，sp统一消息推送接口。\n\ntype imessager interface {\n\t- forcepushmessage(ctx context.context, account string, msg *types.message, meta *mtypes.sendspec) (string, error)                                             //perm:admin\n\t- forcepushmessagewithid(ctx context.context, id string, account string, msg *types.message, meta *mtypes.sendspec) (string, error)                            //perm:write\n}\n\n\n推送消息流程修改:\n\n * sp组件调用链服务通常是 [sign,read,write] 权限的 token，sophon-messager 首先要检查接口带的 token 权限是否满足：\n   * token 对应的的账号与消息中的签名地址 msg.from 是绑定的；\n   * token 具有 sign 权限(待定)；\n * 给签名接口提供签名地址绑定的所有账号，这样只要有一个连接到 sophon-gateway 的签名终端(venus-wallet)支持对此密钥签名则可以签名此条消息，也就是多个账号相互帮助签名；\n\n\n# venus-miner\n\n无逻辑变化，只需匹配新的接口调用即可。\n\n\n# droplet\n\n * 取消额外扩展 signer-account 关系的逻辑；\n * 消息签名前先检查请求 token 的权限，通过后调用 sophon-gateway的签名接口。\n\n这里要注意的是 droplet-client 组件，其实现和 droplet 在同一项目，但是其本质是sp类组件，过程中的签名不能通过sophon-gateway, 其签名逻辑：\n\n * 对于deals的签名需要额外的签名终端(venus-wallet或lotus/venus)；\n * 交易过程中的消息推送到 sophon-messager, 和 sophon-cluster等推送消息一致；\n\n> 所以 droplet-client 组件代码独立为一个项目比较好？从 droplet 中剥离？',charsets:{cjk:!0}}],themeConfig:{logo:"/assets/droplet-icon.png",lastUpdated:"Last Updated",docsRepo:"ipfs-force-community/damocles-docs",docsDir:"docs",docsBranch:"main",editLinks:!0,displayAllHeaders:!1,locales:{"/":{selectText:"Languages",label:"English",lang:"en-US",title:"Droplet",description:"Droplet (formerly known as Venus Deal Service) is THE Filecoin storage deal solution.",nav:[{text:"Introduction",link:"/intro/"},{text:"Deployment & Operations",link:"/operation/"},{text:"About",link:"/about/"}],sidebar:{"/intro/":[{title:"Introduction",collapsable:!1,children:[["","Overview"],["architecture.md","Architecture"]]}],"/operation/":[{title:"Deployment",collapsable:!1,children:[["","Getting started"]]},{title:"Configurations",collapsable:!1,children:[["market-config.md","Droplet config","https://github.com/ipfs-force-community/droplet/blob/master/docs/en/droplet-configurations.md"],["client-config.md","Client config","https://github.com/ipfs-force-community/droplet/blob/master/docs/en/droplet-client-configurations.md"]]},{title:"Operations",collapsable:!1,children:[["prep-datasets.md","Preping large datasets"]]},{title:"Migration",collapsable:!1,children:[["migrate-v1-to-v2.md","Upgrading to droplet 2.x"]]}],"/about/":[{title:"",collapsable:!1,children:[["","About Us"]]}]}},"/zh/":{selectText:"选择语言",label:"简体中文",title:"执剑人",description:"执剑人（原Venus算力服务）是一个Filecoin存储算力解决方案",nav:[{text:"功能介绍",link:"/zh/intro/"},{text:"部署/运维",link:"/zh/operation/"},{text:"研发/设计",link:"/zh/developer/"},{text:"关于",link:"/zh/about/"}],sidebar:{"/zh/intro/":[{title:"功能特性",collapsable:!1,children:[["","概要"],["architecture.md","架构"]]}],"/zh/operation/":[{title:"部署",collapsable:!1,children:[["","快速启用"]]},{title:"配置",collapsable:!1,children:[["market-client-config.md","droplet-client 配置","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/droplet-client%E9%85%8D%E7%BD%AE%E8%A7%A3%E9%87%8A.md"],["market-config.md","droplet 配置","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/droplet%E9%85%8D%E7%BD%AE%E8%A7%A3%E9%87%8A.md"]]},{title:"运维",collapsable:!1,children:[["prep-datasets.md","大数据集准备"],["migrate-offline-deal.md","迁移离线订单","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/%E8%BF%81%E7%A7%BB%E8%AE%A2%E5%8D%95.md"],["batch-deal.md","批量发单","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95.md"],["extend-claim.md","DC 订单续期","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/datacap%E7%BB%AD%E6%9C%9F.md"],["http-retrieval.md","http 检索","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/%E6%A8%A1%E6%8B%9F%E5%AE%98%E6%96%B9%E6%9C%BA%E5%99%A8%E4%BA%BAHTTP%E6%96%B9%E5%BC%8F%E6%A3%80%E7%B4%A2.md"],["deal-filter.md","订单过滤器","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/%E8%AE%A2%E5%8D%95%E8%BF%87%E6%BB%A4%E5%99%A8.md"],["metrics.md","Metrics 指标","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/metric%E6%8C%87%E6%A0%87%E8%A7%A3%E9%87%8A.md"],["rebuild-signature.md","签名重构","https://github.com/ipfs-force-community/droplet/blob/master/docs/zh/%E7%AD%BE%E5%90%8D%E9%87%8D%E6%9E%84.md"]]}],"/zh/developer/":[{title:"功能设计",collapsable:!1,children:[["","多节点配置文件支持"],["batch-deals.md","批量发单"]]},{title:"探索/调研",collapsable:!1,children:[["understand-boost.md","Boost 调研"],["boost-mk-1-2.md","Boost 协议集成"]]},{title:"RPC 接口参考",collapsable:!1,children:[["market-api-v1.md","Droplet API v1","https://github.com/filecoin-project/venus/blob/master/venus-shared/api/market/v1/method.md"],["market-api-v0.md","Droplet API v0","https://github.com/filecoin-project/venus/blob/master/venus-shared/api/market/v0/method.md"]]}],"/zh/about/":[{title:"",collapsable:!1,children:[["","关于我们"]]}]}}}},locales:{"/":{lang:"en-US",title:"Droplet",description:"Droplet, formerly known as Venus Deal Service, is THE Filecoin storage deal solution.",path:"/"},"/zh/":{lang:"zh-CN",title:"水滴",description:"水滴，原Venus订单服务，是一个Filecoin存储订单解决方案",path:"/zh/"}}};t(317);Ma.component("RedirectTutorial",(function(){return t.e(10).then(t.bind(null,390))})),Ma.component("Badge",(function(){return Promise.all([t.e(0),t.e(3)]).then(t.bind(null,425))})),Ma.component("CodeBlock",(function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,391))})),Ma.component("CodeGroup",(function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,392))}));t(318);var So={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",no()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Po=(t(319),Object(bo.a)(So,(function(){var e=this.$createElement,n=this._self._c||e;return n("transition",{attrs:{name:"fade"}},[this.show?n("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[n("g",{attrs:{transform:"translate(-229 -126.358)"}},[n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),Do=(t(320),[{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(e){e.Vue.component("BackToTop",Po)},{},function(e){e.Vue.component("CodeCopy",xo)}]),Co=["BackToTop"];t(181);function To(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}t(101);function qo(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Mo(e,n,t){return n&&qo(e.prototype,n),t&&qo(e,t),e}t(173);function Ao(e,n){return(Ao=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}t(174);function Ro(e){return(Ro=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}t(116),t(107);function _o(e,n){return!n||"object"!==js(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Eo(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,r=Ro(e);if(n){var a=Ro(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return _o(this,t)}}var Oo=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ao(e,n)}(t,e);var n=Eo(t);function t(){return To(this,t),n.apply(this,arguments)}return t}(function(){function e(){To(this,e),this.store=new Ma({data:{state:{}}})}return Mo(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,n){Ma.set(this.store.state,e,n)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(Oo.prototype,{getPageAsyncComponent:Us,getLayoutAsyncComponent:Bs,getAsyncComponent:Gs,getVueComponent:Js});var Lo={install:function(e){var n=new Oo;e.$vuepress=n,e.prototype.$vuepress=n}};function Fo(e){e.beforeEach((function(n,t,r){if(Uo(e,n.path))r();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){var a=n.path.replace(/\/$/,"")+".html";Uo(e,a)?r(a):r()}else r();else{var i=n.path+"/",s=n.path+".html";Uo(e,s)?r(s):Uo(e,i)?r(i):r()}}))}function Uo(e,n){return e.options.routes.filter((function(e){return e.path.toLowerCase()===n.toLowerCase()})).length>0}var Bo={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var n=this.pageKey||this.$parent.$page.key;return Vs("pageKey",n),Ma.component(n)||Ma.component(n,Us(n)),Ma.component(n)?e(n):e("")}},Go={functional:!0,props:{slotKey:String,required:!0},render:function(e,n){var t=n.props,r=n.slots;return e("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},Jo={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},No=(t(322),t(323),Object(bo.a)(Jo,(function(){var e=this.$createElement,n=this._self._c||e;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Vo(){return(Vo=Object(r.a)(regeneratorRuntime.mark((function e(n){var t,r,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Io.routerBase||Io.base,Fo(r=new ws({base:t,mode:"history",fallback:!1,routes:jo,scrollBehavior:function(e,n,t){return t||(e.hash?!Ma.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),a={},e.prev=4,e.next=7,Promise.all(Do.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Ma,options:a,router:r,siteData:Io,isServer:n})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new Ma(Object.assign(a,{router:r,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Co.map((function(n){return e(n)})))])}})),e.abrupt("return",{app:i,router:r});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Ma.config.productionTip=!1,Ma.use(ws),Ma.use(Lo),Ma.mixin(function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ma;zs(n),t.$vuepress.$set("siteData",n);var r=e(t.$vuepress.$get("siteData")),a=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(i).reduce((function(e,n){return n.startsWith("$")&&(e[n]=i[n].get),e}),s),{computed:s}}((function(e){return function(){function n(){To(this,n)}return Mo(n,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,n,t=this.$site.locales,r=void 0===t?{}:t;for(var a in r)"/"===a?n=r[a]:0===this.$page.path.indexOf(a)&&(e=r[a]);return e||n||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,n=this.$page.frontmatter.metaTitle;if("string"==typeof n)return n;var t=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var n=e.filter((function(e){return"description"===e.name}))[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,n){for(var t=0;t<e.length;t++){var r=e[t];if(r.path.toLowerCase()===n.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),n}()}),Io)),Ma.component("Content",Bo),Ma.component("ContentSlotsDistributor",Go),Ma.component("OutboundLink",No),Ma.component("ClientOnly",{functional:!0,render:function(e,n){var t=n.parent,r=n.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Ma.component("Layout",Bs("Layout")),Ma.component("NotFound",Bs("NotFound")),Ma.prototype.$withBase=function(e){var n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.8.0",hash:"88f4931"},function(e){return Vo.apply(this,arguments)}(!1).then((function(e){var n=e.app;e.router.onReady((function(){n.$mount("#app")}))}))}]);